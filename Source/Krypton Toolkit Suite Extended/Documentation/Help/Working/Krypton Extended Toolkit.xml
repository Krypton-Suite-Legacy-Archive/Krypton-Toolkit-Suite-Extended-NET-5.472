<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Krypton Extended Toolkit</name>
    </assembly>
    <members>
        <member name="T:KryptonExtendedToolkit.Base.ButtonSpecCollectionBase">
            <summary>
            Manage a collection of ButtonSpec instances.
            </summary>
        </member>
        <member name="E:KryptonExtendedToolkit.Base.ButtonSpecCollectionBase.Inserting">
            <summary>
            Occurs when a spec is about to be added/inserted to the collection.
            </summary>
        </member>
        <member name="E:KryptonExtendedToolkit.Base.ButtonSpecCollectionBase.Inserted">
            <summary>
            Occurs when a spec has been added/inserted to the collection.
            </summary>
        </member>
        <member name="E:KryptonExtendedToolkit.Base.ButtonSpecCollectionBase.Removing">
            <summary>
            Occurs when a spec is about to be removed from the collection.
            </summary>
        </member>
        <member name="E:KryptonExtendedToolkit.Base.ButtonSpecCollectionBase.Removed">
            <summary>
            Occurs when a spec is removed from the collection.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollectionBase.#ctor(System.Object)">
            <summary>
            Initialize a new instance of the ButtonSpecCollectionBase class.
            </summary>
            <param name="owner">Reference to owning object instance.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollectionBase.Enumerate">
            <summary>
            Provide access to the derived generic enumerator.
            </summary>
            <returns>IEnumerable instance.</returns>
        </member>
        <member name="P:KryptonExtendedToolkit.Base.ButtonSpecCollectionBase.Owner">
            <summary>
            Gets and sets the owner of the collection.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollectionBase.OnInserting(ComponentFactory.Krypton.Toolkit.ButtonSpecEventArgs)">
            <summary>
            Raises the Inserting event.
            </summary>
            <param name="e">A NavButtonSpecEventArgs instance containing event data.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollectionBase.OnInserted(ComponentFactory.Krypton.Toolkit.ButtonSpecEventArgs)">
            <summary>
            Raises the Inserted event.
            </summary>
            <param name="e">A NavButtonSpecEventArgs instance containing event data.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollectionBase.OnRemoving(ComponentFactory.Krypton.Toolkit.ButtonSpecEventArgs)">
            <summary>
            Raises the Removing event.
            </summary>
            <param name="e">A NavButtonSpecEventArgs instance containing event data.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollectionBase.OnRemoved(ComponentFactory.Krypton.Toolkit.ButtonSpecEventArgs)">
            <summary>
            Raises the Removed event.
            </summary>
            <param name="e">A NavButtonSpecEventArgs instance containing event data.</param>
        </member>
        <member name="T:KryptonExtendedToolkit.Base.ButtonSpecCollection`1">
            <summary>
            Manage a collection of ButtonSpec instances.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.#ctor(System.Object)">
            <summary>
            Initialize a new instance of the ButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object instance.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.Add(System.Object)">
            <summary>
            Append a button spec to the collection.
            </summary>
            <param name="value">Object reference.</param>
            <returns>The position into which the new button spec was inserted.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.AddRange(`0[])">
            <summary>
            Append an array of button spec instances.
            </summary>
            <param name="array">Array of instances.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.Contains(System.Object)">
            <summary>
            Determines whether the collection contains the button spec.
            </summary>
            <param name="value">Object reference.</param>
            <returns>True if button spec found; otherwise false.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.IndexOf(System.Object)">
            <summary>
            Determines the index of the specified spec in the collection.
            </summary>
            <param name="value">Object reference.</param>
            <returns>-1 if not found; otherwise index position.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a button spec to the collection at the specified index.
            </summary>
            <param name="index">Insert index.</param>
            <param name="value">Object reference.</param>
        </member>
        <member name="P:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size. 
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.Remove(System.Object)">
            <summary>
            Removes first occurance of specified object.
            </summary>
            <param name="value">Object reference.</param>
        </member>
        <member name="P:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the button spec at the specified index.
            </summary>
            <param name="index">Object index.</param>
            <returns>Object at specified index.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.IndexOf(`0)">
            <summary>
            Determines the index of the specified spec in the collection.
            </summary>
            <param name="item">T reference.</param>
            <returns>-1 if not found; otherwise index position.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts a button spec to the collection at the specified index.
            </summary>
            <param name="index">Insert index.</param>
            <param name="item">T reference.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the button spec at the specified index.
            </summary>
            <param name="index">Remove index.</param>
        </member>
        <member name="P:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the button spec at the specified index.
            </summary>
            <param name="index">T index.</param>
            <returns>T at specified index.</returns>
        </member>
        <member name="P:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.Item(System.String)">
            <summary>
            Gets the button spec with the provided unique name.
            </summary>
            <param name="uniqueName">Unique name of the ButtonSpec instance.</param>
            <returns>T at specified index.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.Add(`0)">
            <summary>
            Append a button spec to the collection.
            </summary>
            <param name="item">T reference.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.Contains(`0)">
            <summary>
            Determines whether the collection contains the button spec.
            </summary>
            <param name="item">T reference.</param>
            <returns>True if spec found; otherwise false.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies button specs to specified array starting at particular index.
            </summary>
            <param name="array">Target array.</param>
            <param name="arrayIndex">Starting array index.</param>
        </member>
        <member name="P:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.Count">
            <summary>
            Gets the number of button specs in collection.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.Remove(`0)">
            <summary>
            Removes first occurance of specified spec.
            </summary>
            <param name="item">T reference.</param>
            <returns>True if removed; otherwise false.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the current collection to the specified Array. 
            </summary>
            <param name="array">The Array that is the destination of the elements copied from the collection.</param>
            <param name="index">The index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.Clear">
            <summary>
            Remove all pages from the collection.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection. 
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.Enumerate">
            <summary>
            Provide non generic access to the enumerator.
            </summary>
            <returns>IEnumerable instance.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.GetEnumerator">
            <summary>
            Shallow enumerate over button specs in the collection.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Enumerate using non-generic interface.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="T:KryptonExtendedToolkit.Base.ButtonSpecFormFixed">
            <summary>
            Implementation for the fixed navigator buttons.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpecFormFixed.#ctor(KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow,ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Initialize a new instance of the ButtonSpecFormFixed class.
            </summary>
            <param name="form">Reference to owning krypton form.</param>
            <param name="fixedStyle">Fixed style to use.</param>
        </member>
        <member name="P:KryptonExtendedToolkit.Base.ButtonSpecFormFixed.AllowComponent">
            <summary>
            Can a component be associated with the view.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.Base.ButtonSpecFormFixed.KryptonForm">
            <summary>
            Gets access to the owning krypton form.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.Base.ButtonSpecFormFixed.ButtonSpecType">
            <summary>
            Gets and sets the actual type of the button.
            </summary>
        </member>
        <member name="T:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowClose">
            <summary>
            Implementation for the fixed close button for krypton form.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowClose.#ctor(KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow)">
            <summary>
            Initialize a new instance of the ButtonSpecFormWindowClose class.
            </summary>
            <param name="form">Reference to owning krypton form instance.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowClose.GetVisible(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowClose.GetEnabled(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowClose.GetChecked(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowClose.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowMax">
            <summary>
            Implementation for the fixed maximize button for krypton form.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowMax.#ctor(KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow)">
            <summary>
            Initialize a new instance of the ButtonSpecFormWindowMax class.
            </summary>
            <param name="form">Reference to owning krypton form instance.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowMax.GetVisible(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowMax.GetEnabled(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowMax.GetChecked(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowMax.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowMin">
            <summary>
            Implementation for the fixed minimize button for krypton form.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowMin.#ctor(KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow)">
            <summary>
            Initialize a new instance of the ButtonSpecFormWindowMin class.
            </summary>
            <param name="form">Reference to owning krypton form instance.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowMin.GetVisible(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowMin.GetEnabled(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowMin.GetChecked(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.ButtonSpec.ButtonSpecFormWindowMin.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:KryptonExtendedToolkit.Base.Code.ExceptionHandler">
            <summary>
            A wrapper for exception handling.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.Code.ExceptionHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KryptonExtendedToolkit.Base.Code.ExceptionHandler"/> class.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.Code.ExceptionHandler.ShowException(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Windows.Forms.ToolStripLabel,System.Object,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxOptions)">
            <summary>
            Shows the exception.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="useKryptonMessageBox">if set to <c>true</c> [use krypton message box].</param>
            <param name="useExtendedKryptonMessageBox">if set to <c>true</c> [use extended krypton message box].</param>
            <param name="useWin32MessageBox">if set to <c>true</c> [use win32 message box].</param>
            <param name="useConsole">if set to <c>true</c> [use console].</param>
            <param name="useToolStripLabel">if set to <c>true</c> [use tool strip label].</param>
            <param name="toolStripLabel">The tool strip label.</param>
            <param name="args">The arguments.</param>
            <param name="caption">The caption.</param>
            <param name="buttons">The buttons.</param>
            <param name="defaultButton">The default button.</param>
            <param name="icon">The icon.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.Code.ExceptionHandler.CaptureException(System.Exception,ComponentFactory.Krypton.Toolkit.KryptonForm,System.Windows.Forms.Control,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.String,System.String,System.Drawing.Font)">
            <summary>
            Captures the exception.
            </summary>
            <param name="exception">The exception.</param>
            <param name="currentWindow">The current window.</param>
            <param name="title">The title.</param>
            <param name="buttons">The buttons.</param>
            <param name="icon">The icon.</param>
            <param name="className">Name of the class.</param>
            <param name="methodSignature">The method signature.</param>
            <param name="defaultTypeface">The default typeface.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.Code.ExceptionHandler.PrintStackTrace(System.Exception,System.String)">
            <summary>
            Captures a stacktrace of the exception.
            </summary>
            <param name="exc">The incoming exception.</param>
            <param name="fileName">The file to write the exception stacktrace to.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.Code.ExceptionHandler.PrintExceptionStackTrace(System.Exception,System.String)">
            <summary>
            Captures a stacktrace of the exception.
            </summary>
            <param name="exc">The incoming exception.</param>
            <param name="fileName">The file to write the exception stacktrace to.</param>
        </member>
        <member name="T:KryptonExtendedToolkit.Base.Code.MostRecentlyUsedFileManager">
            <summary>
            Deals with the back-end logic of a most recently used file <see cref="T:System.Windows.Forms.ToolStripMenuItem"/>.
            Adapted from (https://www.codeproject.com/Articles/407513/Add-Most-Recently-Used-Files-MRU-List-to-Windows).
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.Base.Code.MostRecentlyUsedFileManager.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.Code.MostRecentlyUsedFileManager.OnClearRecentFiles_Click(System.Object,System.EventArgs)">
            <summary>
            Called when [clear recent files click].
            </summary>
            <param name="obj">The object.</param>
            <param name="evt">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.Code.MostRecentlyUsedFileManager.ClearRecentFiles">
            <summary>
            Clears the recent files.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.Code.MostRecentlyUsedFileManager.RefreshRecentFilesMenu">
            <summary>
            Refreshes the recent files menu.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.Code.MostRecentlyUsedFileManager.AddRecentFile(System.String)">
            <summary>
            Adds the recent file.
            </summary>
            <param name="fileNameWithFullPath">The file name with full path.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.Code.MostRecentlyUsedFileManager.RemoveRecentFile(System.String)">
            <summary>
            Removes the recent file.
            </summary>
            <param name="fileNameWithFullPath">The file name with full path.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.Code.MostRecentlyUsedFileManager.#ctor(System.Windows.Forms.ToolStripMenuItem,System.String,System.Action{System.Object,System.EventArgs},System.Action{System.Object,System.EventArgs},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:KryptonExtendedToolkit.Base.Code.MostRecentlyUsedFileManager"/> class.
            </summary>
            <param name="parentMenuItem">The parent menu item.</param>
            <param name="nameOfProgram">The name of program.</param>
            <param name="onRecentFileClick">The on recent file click.</param>
            <param name="onClearRecentFilesClick">The on clear recent files click.</param>
            <param name="useConfirmClearListDialogue">if set to <c>true</c> [use confirm clear list dialogue].</param>
            <exception cref="T:System.ArgumentException">Bad argument.</exception>
        </member>
        <member name="T:KryptonExtendedToolkit.Base.Code.PI.MONITORINFO">
            <summary>
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.MONITORINFO.cbSize">
            <summary>
            </summary>            
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.MONITORINFO.rcMonitor">
            <summary>
            </summary>            
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.MONITORINFO.rcWork">
            <summary>
            </summary>            
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.MONITORINFO.dwFlags">
            <summary>
            </summary>            
        </member>
        <member name="T:KryptonExtendedToolkit.Base.Code.PI.SystemMetric">
            <summary>
            Flags used with the Windows API (User32.dll):GetSystemMetrics(SystemMetric smIndex)
              
            This Enum and declaration signature was written by Gabriel T. Sharp
            ai_productions@verizon.net or osirisgothra@hotmail.com
            Obtained on pinvoke.net, please contribute your code to support the wiki!
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_ARRANGE">
            <summary>
            The flags that specify how the system arranged minimized windows. For more information, see the Remarks section in this topic.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CLEANBOOT">
            <summary>
            The value that specifies how the system is started: 
            0 Normal boot
            1 Fail-safe boot
            2 Fail-safe with network boot
            A fail-safe boot (also called SafeBoot, Safe Mode, or Clean Boot) bypasses the user startup files.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CMONITORS">
            <summary>
            The number of display monitors on a desktop. For more information, see the Remarks section in this topic.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CMOUSEBUTTONS">
            <summary>
            The number of buttons on a mouse, or zero if no mouse is installed.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXBORDER">
            <summary>
            The width of a window border, in pixels. This is equivalent to the SM_CXEDGE value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXCURSOR">
            <summary>
            The width of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXDLGFRAME">
            <summary>
            This value is the same as SM_CXFIXEDFRAME.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXDOUBLECLK">
            <summary>
            The width of the rectangle around the location of a first click in a double-click sequence, in pixels. ,
            The second click must occur within the rectangle that is defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK for the system
            to consider the two clicks a double-click. The two clicks must also occur within a specified time.
            To set the width of the double-click rectangle, call SystemParametersInfo with SPI_SETDOUBLECLKWIDTH.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXDRAG">
            <summary>
            The number of pixels on either side of a mouse-down point that the mouse pointer can move before a drag operation begins. 
            This allows the user to click and release the mouse button easily without unintentionally starting a drag operation. 
            If this value is negative, it is subtracted from the left of the mouse-down point and added to the right of it.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXEDGE">
            <summary>
            The width of a 3-D border, in pixels. This metric is the 3-D counterpart of SM_CXBORDER.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXFIXEDFRAME">
            <summary>
            The thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels.
            SM_CXFIXEDFRAME is the height of the horizontal border, and SM_CYFIXEDFRAME is the width of the vertical border.
            This value is the same as SM_CXDLGFRAME.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXFOCUSBORDER">
            <summary>
            The width of the left and right edges of the focus rectangle that the DrawFocusRectdraws. 
            This value is in pixels. 
            Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXFRAME">
            <summary>
            This value is the same as SM_CXSIZEFRAME.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXFULLSCREEN">
            <summary>
            The width of the client area for a full-screen window on the primary display monitor, in pixels. 
            To get the coordinates of the portion of the screen that is not obscured by the system taskbar or by application desktop toolbars, 
            call the SystemParametersInfofunction with the SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXHSCROLL">
            <summary>
            The width of the arrow bitmap on a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXHTHUMB">
            <summary>
            The width of the thumb box in a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXICON">
            <summary>
            The default width of an icon, in pixels. The LoadIcon function can load only icons with the dimensions 
            that SM_CXICON and SM_CYICON specifies.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXICONSPACING">
            <summary>
            The width of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size 
            SM_CXICONSPACING by SM_CYICONSPACING when arranged. This value is always greater than or equal to SM_CXICON.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXMAXIMIZED">
            <summary>
            The default width, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXMAXTRACK">
            <summary>
            The default maximum width of a window that has a caption and sizing borders, in pixels. 
            This metric refers to the entire desktop. The user cannot drag the window frame to a size larger than these dimensions. 
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXMENUCHECK">
            <summary>
            The width of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXMENUSIZE">
            <summary>
            The width of menu bar buttons, such as the child window close button that is used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXMIN">
            <summary>
            The minimum width of a window, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXMINIMIZED">
            <summary>
            The width of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXMINSPACING">
            <summary>
            The width of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged. 
            This value is always greater than or equal to SM_CXMINIMIZED.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXMINTRACK">
            <summary>
            The minimum tracking width of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions. 
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXPADDEDBORDER">
            <summary>
            The amount of border padding for captioned windows, in pixels. Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXSCREEN">
            <summary>
            The width of the screen of the primary display monitor, in pixels. This is the same value obtained by calling 
            GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, HORZRES).
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXSIZE">
            <summary>
            The width of a button in a window caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXSIZEFRAME">
            <summary>
            The thickness of the sizing border around the perimeter of a window that can be resized, in pixels. 
            SM_CXSIZEFRAME is the width of the horizontal border, and SM_CYSIZEFRAME is the height of the vertical border. 
            This value is the same as SM_CXFRAME.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXSMICON">
            <summary>
            The recommended width of a small icon, in pixels. Small icons typically appear in window captions and in small icon view.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXSMSIZE">
            <summary>
            The width of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXVIRTUALSCREEN">
            <summary>
            The width of the virtual screen, in pixels. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_XVIRTUALSCREEN metric is the coordinates for the left side of the virtual screen.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CXVSCROLL">
            <summary>
            The width of a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYBORDER">
            <summary>
            The height of a window border, in pixels. This is equivalent to the SM_CYEDGE value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYCAPTION">
            <summary>
            The height of a caption area, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYCURSOR">
            <summary>
            The height of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYDLGFRAME">
            <summary>
            This value is the same as SM_CYFIXEDFRAME.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYDOUBLECLK">
            <summary>
            The height of the rectangle around the location of a first click in a double-click sequence, in pixels. 
            The second click must occur within the rectangle defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK for the system to consider 
            the two clicks a double-click. The two clicks must also occur within a specified time. To set the height of the double-click 
            rectangle, call SystemParametersInfo with SPI_SETDOUBLECLKHEIGHT.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYDRAG">
            <summary>
            The number of pixels above and below a mouse-down point that the mouse pointer can move before a drag operation begins. 
            This allows the user to click and release the mouse button easily without unintentionally starting a drag operation. 
            If this value is negative, it is subtracted from above the mouse-down point and added below it.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYEDGE">
            <summary>
            The height of a 3-D border, in pixels. This is the 3-D counterpart of SM_CYBORDER.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYFIXEDFRAME">
            <summary>
            The thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels. 
            SM_CXFIXEDFRAME is the height of the horizontal border, and SM_CYFIXEDFRAME is the width of the vertical border. 
            This value is the same as SM_CYDLGFRAME.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYFOCUSBORDER">
            <summary>
            The height of the top and bottom edges of the focus rectangle drawn byDrawFocusRect. 
            This value is in pixels. 
            Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYFRAME">
            <summary>
            This value is the same as SM_CYSIZEFRAME.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYFULLSCREEN">
            <summary>
            The height of the client area for a full-screen window on the primary display monitor, in pixels. 
            To get the coordinates of the portion of the screen not obscured by the system taskbar or by application desktop toolbars,
            call the SystemParametersInfo function with the SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYHSCROLL">
            <summary>
            The height of a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYICON">
            <summary>
            The default height of an icon, in pixels. The LoadIcon function can load only icons with the dimensions SM_CXICON and SM_CYICON.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYICONSPACING">
            <summary>
            The height of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size 
            SM_CXICONSPACING by SM_CYICONSPACING when arranged. This value is always greater than or equal to SM_CYICON.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYKANJIWINDOW">
            <summary>
            For double byte character set versions of the system, this is the height of the Kanji window at the bottom of the screen, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYMAXIMIZED">
            <summary>
            The default height, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYMAXTRACK">
            <summary>
            The default maximum height of a window that has a caption and sizing borders, in pixels. This metric refers to the entire desktop. 
            The user cannot drag the window frame to a size larger than these dimensions. A window can override this value by processing 
            the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYMENU">
            <summary>
            The height of a single-line menu bar, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYMENUCHECK">
            <summary>
            The height of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYMENUSIZE">
            <summary>
            The height of menu bar buttons, such as the child window close button that is used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYMIN">
            <summary>
            The minimum height of a window, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYMINIMIZED">
            <summary>
            The height of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYMINSPACING">
            <summary>
            The height of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged. 
            This value is always greater than or equal to SM_CYMINIMIZED.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYMINTRACK">
            <summary>
            The minimum tracking height of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions. 
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYSCREEN">
            <summary>
            The height of the screen of the primary display monitor, in pixels. This is the same value obtained by calling 
            GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, VERTRES).
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYSIZE">
            <summary>
            The height of a button in a window caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYSIZEFRAME">
            <summary>
            The thickness of the sizing border around the perimeter of a window that can be resized, in pixels. 
            SM_CXSIZEFRAME is the width of the horizontal border, and SM_CYSIZEFRAME is the height of the vertical border. 
            This value is the same as SM_CYFRAME.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYSMCAPTION">
            <summary>
            The height of a small caption, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYSMICON">
            <summary>
            The recommended height of a small icon, in pixels. Small icons typically appear in window captions and in small icon view.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYSMSIZE">
            <summary>
            The height of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYVIRTUALSCREEN">
            <summary>
            The height of the virtual screen, in pixels. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_YVIRTUALSCREEN metric is the coordinates for the top of the virtual screen.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYVSCROLL">
            <summary>
            The height of the arrow bitmap on a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_CYVTHUMB">
            <summary>
            The height of the thumb box in a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_DBCSENABLED">
            <summary>
            Nonzero if User32.dll supports DBCS; otherwise, 0.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_DEBUG">
            <summary>
            Nonzero if the debug version of User.exe is installed; otherwise, 0.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_DIGITIZER">
            <summary>
            Nonzero if the current operating system is Windows 7 or Windows Server 2008 R2 and the Tablet PC Input 
            service is started; otherwise, 0. The return value is a bitmask that specifies the type of digitizer input supported by the device. 
            For more information, see Remarks. 
            Windows Server 2008, Windows Vista, and Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_IMMENABLED">
            <summary>
            Nonzero if Input Method Manager/Input Method Editor features are enabled; otherwise, 0. 
            SM_IMMENABLED indicates whether the system is ready to use a Unicode-based IME on a Unicode application. 
            To ensure that a language-dependent IME works, check SM_DBCSENABLED and the system ANSI code page.
            Otherwise the ANSI-to-Unicode conversion may not be performed correctly, or some components like fonts
            or registry settings may not be present.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_MAXIMUMTOUCHES">
            <summary>
            Nonzero if there are digitizers in the system; otherwise, 0. SM_MAXIMUMTOUCHES returns the aggregate maximum of the 
            maximum number of contacts supported by every digitizer in the system. If the system has only single-touch digitizers, 
            the return value is 1. If the system has multi-touch digitizers, the return value is the number of simultaneous contacts 
            the hardware can provide. Windows Server 2008, Windows Vista, and Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_MEDIACENTER">
            <summary>
            Nonzero if the current operating system is the Windows XP, Media Center Edition, 0 if not.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_MENUDROPALIGNMENT">
            <summary>
            Nonzero if drop-down menus are right-aligned with the corresponding menu-bar item; 0 if the menus are left-aligned.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_MIDEASTENABLED">
            <summary>
            Nonzero if the system is enabled for Hebrew and Arabic languages, 0 if not.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_MOUSEPRESENT">
            <summary>
            Nonzero if a mouse is installed; otherwise, 0. This value is rarely zero, because of support for virtual mice and because 
            some systems detect the presence of the port instead of the presence of a mouse.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_MOUSEHORIZONTALWHEELPRESENT">
            <summary>
            Nonzero if a mouse with a horizontal scroll wheel is installed; otherwise 0.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_MOUSEWHEELPRESENT">
            <summary>
            Nonzero if a mouse with a vertical scroll wheel is installed; otherwise 0.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_NETWORK">
            <summary>
            The least significant bit is set if a network is present; otherwise, it is cleared. The other bits are reserved for future use.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_PENWINDOWS">
            <summary>
            Nonzero if the Microsoft Windows for Pen computing extensions are installed; zero otherwise.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_REMOTECONTROL">
            <summary>
            This system metric is used in a Terminal Services environment to determine if the current Terminal Server session is 
            being remotely controlled. Its value is nonzero if the current session is remotely controlled; otherwise, 0. 
            You can use terminal services management tools such as Terminal Services Manager (tsadmin.msc) and shadow.exe to 
            control a remote session. When a session is being remotely controlled, another user can view the contents of that session 
            and potentially interact with it.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_REMOTESESSION">
            <summary>
            This system metric is used in a Terminal Services environment. If the calling process is associated with a Terminal Services 
            client session, the return value is nonzero. If the calling process is associated with the Terminal Services console session, 
            the return value is 0. 
            Windows Server 2003 and Windows XP:  The console session is not necessarily the physical console. 
            For more information, seeWTSGetActiveConsoleSessionId.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_SAMEDISPLAYFORMAT">
            <summary>
            Nonzero if all the display monitors have the same color format, otherwise, 0. Two displays can have the same bit depth, 
            but different color formats. For example, the red, green, and blue pixels can be encoded with different numbers of bits, 
            or those bits can be located in different places in a pixel color value.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_SECURE">
            <summary>
            This system metric should be ignored; it always returns 0.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_SERVERR2">
            <summary>
            The build number if the system is Windows Server 2003 R2; otherwise, 0.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_SHOWSOUNDS">
            <summary>
            Nonzero if the user requires an application to present information visually in situations where it would otherwise present 
            the information only in audible form; otherwise, 0.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_SHUTTINGDOWN">
            <summary>
            Nonzero if the current session is shutting down; otherwise, 0. Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_SLOWMACHINE">
            <summary>
            Nonzero if the computer has a low-end (slow) processor; otherwise, 0.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_STARTER">
            <summary>
            Nonzero if the current operating system is Windows 7 Starter Edition, Windows Vista Starter, or Windows XP Starter Edition; otherwise, 0.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_SWAPBUTTON">
            <summary>
            Nonzero if the meanings of the left and right mouse buttons are swapped; otherwise, 0.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_TABLETPC">
            <summary>
            Nonzero if the current operating system is the Windows XP Tablet PC edition or if the current operating system is Windows Vista
            or Windows 7 and the Tablet PC Input service is started; otherwise, 0. The SM_DIGITIZER setting indicates the type of digitizer 
            input supported by a device running Windows 7 or Windows Server 2008 R2. For more information, see Remarks.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_XVIRTUALSCREEN">
            <summary>
            The coordinates for the left side of the virtual screen. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_CXVIRTUALSCREEN metric is the width of the virtual screen.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.Code.PI.SystemMetric.SM_YVIRTUALSCREEN">
            <summary>
            The coordinates for the top of the virtual screen. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_CYVIRTUALSCREEN metric is the height of the virtual screen.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.Code.UtilityMethods.#ctor">
            <summary>
            Initialises a new instance of <see cref="T:KryptonExtendedToolkit.Base.Code.UtilityMethods"/>.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.Code.UtilityMethods.ElevateProcessWithAdministrativeRights(System.String)">
            <summary>
            Elevates the application to use administrative privileges. To be used with <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonUACElevatedButton"/> or <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.ToolStripMenuItemUACSheld"/> button click.
            </summary>
            <param name="processName">The process name that you wish to elevate.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.Code.UtilityMethods.GetHasElevateProcessWithAdministrativeRights">
            <summary>
            Checks to see if the current process has launched with administrative rights.
            </summary>
            <remarks>
            Use this method in your 'Load' event.
            </remarks>
            <returns>True if the current process has launched with administrative rights, false if not.</returns>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.UI.KryptonFormBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.UI.KryptonFormBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.UI.KryptonFormBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.Base.UI.Test.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.UI.Test.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.Base.UI.Test.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.Controls.ExtendedProgressBar">
            <summary>
            A progress bar that used a solid bar instead of the ugly chucks from the default WinForm ProgressBar.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.ExtendedProgressBar.BarBackColour">
            <summary>
            The bar's background colour (the unfilled part).
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.ExtendedProgressBar.BarFillColour">
            <summary>
            The bar's fill colour.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.ExtendedProgressBar.Typeface">
            <summary>
            The bar's typeface.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.ExtendedProgressBar.Font">
            <summary>
            The font used for displaying text.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.ExtendedProgressBar.MarqueeAnimationSpeed">
            <summary>
            The MarqueeAnimationSpeed is hidden from view, as this implementation is not meant to
            be used as a marquee.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.ExtendedProgressBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.ExtendedProgressBar.Style">
            <summary>
            The Style is hidden from view, as this implementation is not meant to
            be used as a marquee.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.ExtendedProgressBar.Text">
            <summary>
            The text to display. May contain placeholder {0} for the actual value.
            </summary>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonUACElevatedButton">
            <summary>
            A standard Krypton button control with UAC shield
            Modified from the AeroSuite project.
            </summary>
            <remarks>
            The shield is extracted from the system with LoadImage if possible. Otherwise the shield will be enabled by sending the BCM_SETSHIELD Message to the control.
            If the operating system is not Windows Vista or higher, no shield will be displayed as there's no such thing as UAC on the target system -> the shield is obsolete.
            </remarks>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonUACElevatedButton.ElevateApplicationOnClick">
            <summary>
            Elevates the current running application to administrator level when button is clicked.
            </summary>
            <remarks>
            The application/process will restart when clicked.
            </remarks>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonUACElevatedButton.ProcessName">
            <summary>
            The application assembly.
            </summary>
            <remarks>
            Use 'Process.GetCurrentProcess().ProcessName;' as a start.
            </remarks>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonUACElevatedButton.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonUACElevatedButton"/> class.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonUACElevatedButton.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonUACElevatedButton.OnClick(System.EventArgs)"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonCueComboBox">
            <summary>
            A KryptonComboBox with cue banner support.
            </summary>
            <remarks>
            A cue banner is the text that is shown when the KryptonComboBox does not have a selected item.
            </remarks>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonCueComboBox.CueText">
            <summary>
            The text shown on the Cue Banner.
            </summary>
            <value>
            The cue.
            </value>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonCueComboBox.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonCueComboBox"/> class.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonCueComboBox.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the <see cref="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonCueComboBox.OnHandleCreated(System.EventArgs)"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonCueComboBox.UpdateCueText">
            <summary>
            Updates the cue text.
            </summary>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonCueTextBox">
            <summary>
            A KryptonTextBox with cue banner support.
            </summary>
            <remarks>
            A cue banner is the text that is shown when the KryptonTextBox is empty.
            </remarks>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonCueTextBox.RetainCueText">
            <summary>
            Determines if the cue banner is shown even when the textbox is focused.
            </summary>
            <value>
            The cue.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonCueTextBox.CueText">
            <summary>
            The text shown on the Cue Banner.
            </summary>
            <value>
            The cue.
            </value>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonCueTextBox.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonCueTextBox"/> class.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonCueTextBox.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:HandleCreated" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonCueTextBox.UpdateCueText">
            <summary>
            Updates the cue text.
            </summary>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended">
            <summary>
            An enhanced version of <see cref="T:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker"/>.
            </summary>
            <seealso cref="T:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker" />
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended.DateTimePickerCustomExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended"/> class.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended.Format">
            <summary>
            Gets the format.
            </summary>
            <value>
            The format.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended.ExtendedFormat">
            <summary>
            Gets or sets the extended format.
            </summary>
            <value>
            The extended format.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended.ShowButtons">
            <summary>
            Gets or sets a value indicating whether [show buttons].
            </summary>
            <value>
              <c>true</c> if [show buttons]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended.ShowCheckBox">
            <summary>
            Gets or sets a value indicating whether [show CheckBox].
            </summary>
            <value>
              <c>true</c> if [show CheckBox]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended.ShowUpDown">
            <summary>
            Gets or sets a value indicating whether [show up down].
            </summary>
            <value>
              <c>true</c> if [show up down]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended.BackColor">
            <summary>
            Gets or sets the colour of the back.
            </summary>
            <value>
            The colour of the back.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended.LinkedTo">
            <summary>
            Gets or sets the linked to.
            </summary>
            <value>
            The linked to.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonDateTimePickerExtended.SetDate">
            <summary>
            Gets or sets a value indicating whether [set date].
            </summary>
            <value>
              <c>true</c> if [set date]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonSearchBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonSearchBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonSearchBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonWaterMarkTextBox">
            <summary>
            A standard krypton textbox control with watermark functionality.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonWaterMarkTextBox.WaterMarkTextEnabled">
            <summary>
            Enables or disables the watermark.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonWaterMarkTextBox.WaterMarkColour">
            <summary>
            Alters the watermark colour to one of your choosing.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonWaterMarkTextBox.WaterMarkTypeface">
            <summary>
            Sets the typeface of the watermark text.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonWaterMarkTextBox.WatermarkTextAlignment">
            <summary>
            Alters the alignment of the watermark text
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonWaterMarkTextBox.ToLower">
            <summary>
            Forces the text to always be in lower case (abc).
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonWaterMarkTextBox.ToUpper">
            <summary>
            Forces the text to always be in upper case (ABC).
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonWaterMarkTextBox.WaterMarkText">
            <summary>
            The watermark mask.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonWaterMarkTextBox.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonWaterMarkTextBox.JoinEvents(System.Boolean)">
            <summary>
            Concatenates built-in events to corresponding event handlers.
            </summary>
            <param name="join">Go ahead and setup the event handlers.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonWaterMarkTextBox.WaterMarkToggle(System.Object,System.EventArgs)">
            <summary>
            Toggles watermark on and off.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonWaterMarkTextBox.EnableWaterMark">
            <summary>
            Enables the watermark.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonWaterMarkTextBox.DisableWaterMark">
            <summary>
            Disables the watermark.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonWaterMarkTextBox.WaterMarkFontChanged(System.Object,System.EventArgs)">
            <summary>
            Fires only when the text has changed.
            </summary>
        </member>
        <member name="F:KryptonExtendedToolkit.ExtendedToolkit.Controls.ModernProgressBar.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.ModernProgressBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Controls.ModernProgressBar.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.Messageboxes.Classes.Globals.PlaySound(ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedIcon,System.String)">
            <summary>
            Plays system sound on displaying messagebox.
            </summary>
            <param name="type">The type of messagebox being displayed.</param>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem">
            <summary>
            A <see cref="T:System.Windows.Forms.MenuItem"/> that displays the most recently used files to the user.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem"/> class.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.#ctor(KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.IFileListStorage,KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.IMenuBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem"/> class.
            </summary>
            <param name="fileListStorage">The file list storage.</param>
            <param name="menuBuilder">The menu builder.</param>
        </member>
        <member name="E:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.ClearListMenuItemClick">
            <summary>
            Occurs when the clear recent files menu item is clicked.
            </summary>
        </member>
        <member name="E:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.RecentFileMenuItemClick">
            <summary>
            Occurs when one of the automatically added recent file menu items is clicked.
            </summary>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.IFileListStorage">
            <summary>
            Defines a class that implements storage for an MRU file list.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.IFileListStorage.Files">
            <summary>
            Gets or sets the files declared in this storage instance.
            </summary>
            <value>
            The file listing. Each file should declare its full path.
            </value>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.IFileListStorage.AddRecentFile(System.String)">
            <summary>
            Adds a new file to the list.
            </summary>
            <param name="fileNameWithFullPath">The file name with full path.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.IFileListStorage.Initialize">
            <summary>
            Initializes this instance and sets up any local settings required for execution.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.IFileListStorage.RemoveRecentFile(System.String)">
            <summary>
            Removes the file from the list.
            </summary>
            <param name="fileNameWithFullPath">The file name with full path.</param>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.IMenuBuilder">
            <summary>
            Defines a class that implements a menu handler for an MRU file list.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.IMenuBuilder.ClearRecentFiles">
            <summary>
            Clears the menu items of all files.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.IMenuBuilder.RebuildMenus(System.Collections.Generic.IEnumerable{System.String},System.Action{System.String},System.String,System.Action)">
            <summary>
            Rebuilds the menus.
            </summary>
            <param name="files">The file listing.</param>
            <param name="fileMenuItemClick">The handler for when one of the automatically added recent file menu items is clicked..</param>
            <param name="clearListMenuItemText">The clear list menu item text. A <c>null</c> value indicates that this menu items should not be shown.</param>
            <param name="clearListMenuItemClick">The handler for when the clear recent files menu item is clicked.</param>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.ClearListMenuItemText">
            <summary>
            Gets or sets the clear list menu item text.
            </summary>
            <value>
            The clear list menu item text. Set this value to <c>null</c> to hide this menu item.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.FileExtensions">
            <summary>
            Gets or sets the vertical bar ('|') separated list of extensions without periods that are supported.
            </summary>
            <value>
            The file extensions.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.Files">
            <summary>
            Gets the list of most recently used files.
            </summary>
            <value>
            The files in reverse chronological order.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.MaxHistoryCount">
            <summary>
            Gets or sets the maximum number of files to maintain in the history.
            </summary>
            <value>
            The maximum number of files to maintain in the history.
            </value>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.AddRecentFile(System.String)">
            <summary>
            Adds the recent file.
            </summary>
            <param name="fileNameWithFullPath">The file name with full path.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.RemoveRecentFile(System.String)">
            <summary>
            Removes the recent file.
            </summary>
            <param name="fileNameWithFullPath">The file name with full path.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.RefreshRecentFilesMenu">
            <summary>
            Refreshes the recent files menu.
            </summary>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.AppSettingsFileListStorage">
            <summary>
            Storage in the local application settings.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.AppSettingsFileListStorage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.AppSettingsFileListStorage" /> class.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.AppSettingsFileListStorage.Files">
            <summary>
            Gets or sets the files.
            </summary>
            <value>
            The files.
            </value>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.AppSettingsFileListStorage.AddRecentFile(System.String)">
            <summary>
            Adds the recent file.
            </summary>
            <param name="fileNameWithFullPath">The file name with full path.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.AppSettingsFileListStorage.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.AppSettingsFileListStorage.RemoveRecentFile(System.String)">
            <summary>
            Removes the recent file.
            </summary>
            <param name="fileNameWithFullPath">The file name with full path.</param>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.RegistryFileListStorage">
            <summary>
            
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.RegistryFileListStorage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.RegistryFileListStorage" /> class.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.RegistryFileListStorage.Files">
            <summary>
            Gets or sets the files.
            </summary>
            <value>
            The files.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.RegistryFileListStorage.SubKeyName">
            <summary>
            Gets or sets the name of the sub key.
            </summary>
            <value>
            The name of the sub key.
            </value>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.RegistryFileListStorage.AddRecentFile(System.String)">
            <summary>
            Adds the recent file.
            </summary>
            <param name="fileNameWithFullPath">The file name with full path.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.RegistryFileListStorage.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.RegistryFileListStorage.RemoveRecentFile(System.String)">
            <summary>
            Removes the recent file.
            </summary>
            <param name="fileNameWithFullPath">The file name with full path.</param>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonToolStripWaterMarkTextBox.WaterMarkTextEnabled">
            <summary>
            Enables or disables the watermark.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonToolStripWaterMarkTextBox.WaterMarkColour">
            <summary>
            Alters the watermark colour to one of your choosing.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonToolStripWaterMarkTextBox.WaterMarkTypeface">
            <summary>
            Sets the typeface of the watermark text.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonToolStripWaterMarkTextBox.WatermarkTextAlignment">
            <summary>
            Alters the alignment of the watermark text
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonToolStripWaterMarkTextBox.ToLower">
            <summary>
            Forces the text to always be in lower case (abc).
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonToolStripWaterMarkTextBox.ToUpper">
            <summary>
            Forces the text to always be in upper case (ABC).
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonToolStripWaterMarkTextBox.WaterMarkText">
            <summary>
            The watermark mask.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonToolStripWaterMarkTextBox.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonToolStripWaterMarkTextBox.JoinEvents(System.Boolean)">
            <summary>
            Concatenates built-in events to corresponding event handlers.
            </summary>
            <param name="join">Go ahead and setup the event handlers.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonToolStripWaterMarkTextBox.WaterMarkToggle(System.Object,System.EventArgs)">
            <summary>
            Toggles watermark on and off.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonToolStripWaterMarkTextBox.EnableWaterMark">
            <summary>
            Enables the watermark.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonToolStripWaterMarkTextBox.DisableWaterMark">
            <summary>
            Disables the watermark.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonToolStripWaterMarkTextBox.WaterMarkFontChanged(System.Object,System.EventArgs)">
            <summary>
            Fires only when the text has changed.
            </summary>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.ToolStripMenuItemUACSheld">
            <summary>
            A standard tool strip menu item control with UAC shield.
            Modified from the AeroSuite project.
            </summary>
            <remarks>
            The shield is extracted from the system with LoadImage if possible. Otherwise the shield will be enabled by sending the BCM_SETSHIELD Message to the control.
            If the operating system is not Windows Vista or higher, no shield will be displayed as there's no such thing as UAC on the target system -> the shield is obsolete.
            </remarks>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.ToolStripMenuItemUACSheld.ElevateApplicationOnClick">
            <summary>
            Elevates the current running application to administrator level when button is clicked.
            </summary>
            <remarks>
            The application/process will restart when clicked.
            </remarks>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.ToolStripMenuItemUACSheld.ProcessName">
            <summary>
            The application assembly.
            </summary>
            <remarks>
            Use 'Process.GetCurrentProcess().ProcessName;' as a start.
            </remarks>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.ToolStripMenuItemUACSheld.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.ToolStripMenuItemUACSheld"/> class.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.ToolStripMenuItemUACSheld.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripItem.Click" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow">
            <summary>
            Draws the window chrome using a Krypton palette.
            </summary>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.FormButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecAny instances.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.FormButtonSpecCollection.#ctor(KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow)">
            <summary>
            Initialize a new instance of the FormButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="T:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.FormFixedButtonSpecCollection">
            <summary>
            Collection for managing NavigatorButtonSpec instances.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.FormFixedButtonSpecCollection.#ctor(KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow)">
            <summary>
            Initialize a new instance of the FormFixedButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.#ctor">
            <summary>
            Initialise a new instance of the <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow"/> class.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.TextExtra">
            <summary>
            Gets or sets the extra text associated with the control.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be displayed for button specs.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.AllowFormChrome">
            <summary>
            Gets or sets a value indicating if custome chrome is allowed.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.AllowStatusStripMerge">
            <summary>
            Gets or sets a value indicating if the form status strip be considered for merging into chrome.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.HeaderStyle">
            <summary>
            Gets and sets the header style for a main form.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.GroupBorderStyle">
            <summary>
            Gets and sets the chrome group border style.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.GroupBackStyle">
            <summary>
            Gets and sets the chrome group background style.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.UseDropShadow">
            <summary>
            Allows the use of drop shadow around the form.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.StateCommon">
            <summary>
            Gets access to the common form appearance entries that other states can override.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.StateInactive">
            <summary>
            Gets access to the inactive form appearance entries.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.StateActive">
            <summary>
            Gets access to the active form appearance entries.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.ButtonSpecMin">
            <summary>
            Gets access to the minimize button spec.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.ButtonSpecMax">
            <summary>
            Gets access to the minimize button spec.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.ButtonSpecClose">
            <summary>
            Gets access to the minimize button spec.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.InertForm">
            <summary>
            Gets and sets a value indicating if the border should be inert to changes.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.InjectViewElement(ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.ViewDockStyle)">
            <summary>
            Allow an extra view element to be injected into the caption area.
            </summary>
            <param name="element">Reference to view element.</param>
            <param name="style">Docking style of the element.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.RevokeViewElement(ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.ViewDockStyle)">
            <summary>
            Remove a previously injected view element from the caption area.
            </summary>
            <param name="element">Reference to view element.</param>
            <param name="style">Docking style of the element.</param>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.AllowIconDisplay">
            <summary>
            Gets and sets a value indicating if the icon is allowed to be shown.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.RecreateMinMaxCloseButtons">
            <summary>
            Next time a layout occurs the min/max/close buttons need recreating.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.ToolTipManager">
            <summary>
            Gets access to the ToolTipManager used for displaying tool tips.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.GetWindowState">
            <summary>
            Gets the current state of the window.
            </summary>
            <returns>FormWindowState enumeration value.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.WindowChromeCompositionLayout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,System.Drawing.Rectangle)">
            <summary>
            Perform layout on behalf of the composition element using our root element.
            </summary>
            <param name="context">Layout context.</param>
            <param name="compRect">Rectangle for composition element.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.WindowChromeCompositionPaint(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform painting on behalf of the composition element using our root element.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.HitTestMinButton(System.Drawing.Point)">
            <summary>
            Gets a value indicating if the provided point is inside the minimize button.
            </summary>
            <param name="pt">Window relative point to test.</param>
            <returns>True if inside the button; otherwise false.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.HitTestMaxButton(System.Drawing.Point)">
            <summary>
            Gets a value indicating if the provided point is inside the maximize button.
            </summary>
            <param name="pt">Window relative point to test.</param>
            <returns>True if inside the button; otherwise false.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.HitTestCloseButton(System.Drawing.Point)">
            <summary>
            Gets a value indicating if the provided point is inside the close button.
            </summary>
            <param name="pt">Window relative point to test.</param>
            <returns>True if inside the button; otherwise false.</returns>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.CustomCaptionArea">
            <summary>
            Gets and sets a rectangle to treat as a custom caption area.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for showing on the title bar.
            </summary>
            <param name="state">Form state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Form state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.GetShortText">
            <summary>
            Gets the short text used as the main caption title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.GetLongText">
            <summary>
            Gets the long text used as the secondary caption title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlAdded event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlRemoved event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.OnLoad(System.EventArgs)">
            <summary>
            Raises the Load event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Processes a notification from palette storage of a button spec change.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An EventArgs containing event data.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.OnWindowActiveChanged">
            <summary>
            Called when the active state of the window changes.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.OnPaletteChanged(System.EventArgs)">
            <summary>
            Raises the PaletteChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.OnAllowFormChromeChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the AllowFormChromeChanged event is fired for the current palette.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.WindowChromeStart">
            <summary>
            Perform setup for custom chrome.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.WindowChromeEnd">
            <summary>
            Perform cleanup when custom chrome ending.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.WindowChromeHitTest(System.Drawing.Point,System.Boolean)">
            <summary>
            Perform hit testing.
            </summary>
            <param name="pt">Point in window coordinates.</param>
            <param name="composition">Are we performing composition.</param>
            <returns></returns>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.WindowChromePaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Perform painting of the window chrome.
            </summary>
            <param name="g">Graphics instance to use for drawing.</param>
            <param name="bounds">Bounds enclosing the window chrome.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.WindowChromeLeftMouseDown(System.Drawing.Point)">
            <summary>
            Process the left mouse down event.
            </summary>
            <param name="pt">Window coordinate of the mouse up.</param>
            <returns>True if event is processed; otherwise false.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.UpdateDropShadowDraw(System.Boolean)">
            <summary>
            Calls the method that draws the drop shadow around the form.
            </summary>
            <param name="useDropShadow">Use dropshadow user input value.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.DrawDropShadow">
            <summary>
            A wrapper that draws the drop shadow around the form.
            </summary>
            <returns>The shadow around the form.</returns>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonFormWithDropShadow.GetCreateParams">
            <summary>
            Test code
            </summary>
            <returns>The overrides</returns>
        </member>
        <member name="F:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonPanelForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonPanelForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonPanelForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.UseFadeEffects">
            <summary>
            Gets or sets a value indicating whether [use fade effects].
            </summary>
            <value>
              <c>true</c> if [use fade effects]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.EnableProgressBar">
            <summary>
            Gets or sets a value indicating whether [enable progress bar].
            </summary>
            <value>
              <c>true</c> if [enable progress bar]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.EnableModernProgressBar">
            <summary>
            Gets or sets a value indicating whether [enable modern progress bar].
            </summary>
            <value>
              <c>true</c> if [enable modern progress bar]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.EnableMinimiseButton">
            <summary>
            Gets or sets a value indicating whether [enable minimise button].
            </summary>
            <value>
              <c>true</c> if [enable minimise button]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.EnableCloseButton">
            <summary>
            Gets or sets a value indicating whether [enable close button].
            </summary>
            <value>
              <c>true</c> if [enable close button]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.EnableUseDropShadow">
            <summary>
            Gets or sets a value indicating whether [enable use drop shadow].
            </summary>
            <value>
              <c>true</c> if [enable use drop shadow]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.ApplicationName">
            <summary>
            Gets or sets the name of the application.
            </summary>
            <value>
            The name of the application.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.CompanyOrAuthorName">
            <summary>
            Gets or sets the name of the company or author.
            </summary>
            <value>
            The name of the company or author.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.StatusString">
            <summary>
            Gets or sets the status string.
            </summary>
            <value>
            The status string.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.Nextwindow">
            <summary>
            Gets or sets the nextwindow.
            </summary>
            <value>
            The nextwindow.
            </value>
        </member>
        <member name="P:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.NextKryptonWindow">
            <summary>
            Gets or sets the next krypton window.
            </summary>
            <value>
            The next krypton window.
            </value>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,System.Windows.Forms.Form,ComponentFactory.Krypton.Toolkit.KryptonForm)">
            <summary>
            Initialises a new instance of the <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen"/> class.
            </summary>
            <param name="useFadeEffects">if set to <c>true</c> [use fade effects].</param>
            <param name="enableProgressBar">if set to <c>true</c> [enable progress bar].</param>
            <param name="enableModernProgressBar">if set to <c>true</c> [enable modern progress bar].</param>
            <param name="enableMinimiseButton">if set to <c>true</c> [enable minimise button].</param>
            <param name="enableCloseButton">if set to <c>true</c> [enable close button].</param>
            <param name="useDropShadow">if set to <c>true</c> [use drop shadow].</param>
            <param name="applicationName">Name of the application.</param>
            <param name="companyOrAuthorName">Name of the company or author.</param>
            <param name="statusString">The status string.</param>
            <param name="nextWindow">The next window.</param>
            <param name="nextKryptonWindow">The next krypton window.</param>
        </member>
        <member name="F:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KryptonExtendedToolkit.ExtendedToolkit.UI.KryptonSplashScreen.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KryptonExtendedToolkit.Windows.Forms.KryptonMenuStripMRUManager">
            <summary>
            A class that manages a Most Recently Used file listing and interacts with a MenuStrip to
            display a menu list of the files. By default, the application settings are used to store the history.
            Optionally a constructor can be used to provide an alternate class to handle that work.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Windows.Forms.KryptonMenuStripMRUManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KryptonExtendedToolkit.Windows.Forms.KryptonMenuStripMRUManager"/> class.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Windows.Forms.KryptonMenuStripMRUManager.#ctor(System.String,System.Windows.Forms.ToolStripMenuItem,System.Action{System.String},System.Action{System.Collections.Specialized.StringCollection},KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.KryptonMostRecentlyUsedFileMenuItem.IFileListStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:KryptonExtendedToolkit.Windows.Forms.KryptonMenuStripMRUManager" /> class.
            </summary>
            <param name="extensions">The extensions of files to find in system MRU list.</param>
            <param name="parentMenuItem">The parent "Recent Files" menu item.</param>
            <param name="onRecentFileClick">Action to run when The on recent file click.</param>
            <param name="onClearRecentFilesClick">Optional. The on clear recent files click.</param>
            <param name="storageHandler">Optional. The storage handler.</param>
        </member>
        <member name="P:KryptonExtendedToolkit.Windows.Forms.KryptonMenuStripMRUManager.RecentFileMenuItem">
            <summary>
            Gets or sets the recent file menu item.
            </summary>
            <value>
            The recent file menu item.
            </value>
        </member>
        <member name="T:KryptonExtendedToolkit.Windows.Forms.KryptonMenuStripMRUManager.MenuStripMenuBuilder">
            <summary>
            Builds a menu within a MenuStrip.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Windows.Forms.KryptonMenuStripMRUManager.MenuStripMenuBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KryptonExtendedToolkit.Windows.Forms.KryptonMenuStripMRUManager.MenuStripMenuBuilder" /> class.
            </summary>
        </member>
        <member name="P:KryptonExtendedToolkit.Windows.Forms.KryptonMenuStripMRUManager.MenuStripMenuBuilder.RecentFileMenuItem">
            <summary>
            Gets or sets the recent file menu item.
            </summary>
            <value>
            The recent file menu item.
            </value>
        </member>
        <member name="M:KryptonExtendedToolkit.Windows.Forms.KryptonMenuStripMRUManager.MenuStripMenuBuilder.ClearRecentFiles">
            <summary>
            Clears the recent files.
            </summary>
        </member>
        <member name="M:KryptonExtendedToolkit.Windows.Forms.KryptonMenuStripMRUManager.MenuStripMenuBuilder.RebuildMenus(System.Collections.Generic.IEnumerable{System.String},System.Action{System.String},System.String,System.Action)">
            <summary>
            Rebuilds the menus.
            </summary>
            <param name="files">The file listing.</param>
            <param name="fileMenuItemClick">The handler for when one of the automatically added recent file menu items is clicked..</param>
            <param name="clearListMenuItemText">The clear list menu item text. A <c>null</c> value indicates that this menu items should not be shown.</param>
            <param name="clearListMenuItemClick">The handler for when the clear recent files menu item is clicked.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:ExtendedControls.Base.Code.Colours.ColourDialog.AdobeColours">
            <summary>
            Summary description for AdobeColors.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourDialog.AdobeColours.SetBrightness(System.Drawing.Color,System.Double)">
            <summary> 
            Sets the absolute brightness of a colour 
            </summary> 
            <param name="c">Original colour</param> 
            <param name="brightness">The luminance level to impose</param> 
            <returns>an adjusted colour</returns> 
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourDialog.AdobeColours.ModifyBrightness(System.Drawing.Color,System.Double)">
            <summary> 
            Modifies an existing brightness level 
            </summary> 
            <remarks> 
            To reduce brightness use a number smaller than 1. To increase brightness use a number larger than 1 
            </remarks> 
            <param name="c">The original colour</param> 
            <param name="brightness">The luminance delta</param> 
            <returns>An adjusted colour</returns> 
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourDialog.AdobeColours.SetSaturation(System.Drawing.Color,System.Double)">
            <summary> 
            Sets the absolute saturation level 
            </summary> 
            <remarks>Accepted values 0-1</remarks> 
            <param name="c">An original colour</param> 
            <param name="Saturation">The saturation value to impose</param> 
            <returns>An adjusted colour</returns> 
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourDialog.AdobeColours.ModifySaturation(System.Drawing.Color,System.Double)">
            <summary> 
            Modifies an existing Saturation level 
            </summary> 
            <remarks> 
            To reduce Saturation use a number smaller than 1. To increase Saturation use a number larger than 1 
            </remarks> 
            <param name="c">The original colour</param> 
            <param name="Saturation">The saturation delta</param> 
            <returns>An adjusted colour</returns> 
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourDialog.AdobeColours.SetHue(System.Drawing.Color,System.Double)">
            <summary> 
            Sets the absolute Hue level 
            </summary> 
            <remarks>Accepted values 0-1</remarks> 
            <param name="c">An original colour</param> 
            <param name="Hue">The Hue value to impose</param> 
            <returns>An adjusted colour</returns> 
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourDialog.AdobeColours.ModifyHue(System.Drawing.Color,System.Double)">
            <summary> 
            Modifies an existing Hue level 
            </summary> 
            <remarks> 
            To reduce Hue use a number smaller than 1. To increase Hue use a number larger than 1 
            </remarks> 
            <param name="c">The original colour</param> 
            <param name="Hue">The Hue delta</param> 
            <returns>An adjusted colour</returns> 
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourDialog.AdobeColours.HSB_to_RGB(ExtendedControls.Base.Code.Colours.ColourDialog.AdobeColours.HSB)">
            <summary> 
            Converts a colour from HSL to RGB 
            </summary> 
            <remarks>Adapted from the algorithm in Foley and Van-Dam</remarks> 
            <param name="hsb">The HSL value</param> 
            <returns>A Colour structure containing the equivalent RGB values</returns> 
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourDialog.AdobeColours.RGB_to_HSB(System.Drawing.Color)">
            <summary> 
            Converts RGB to HSL 
            </summary> 
            <remarks>Takes advantage of whats already built in to .NET by using the Color.GetHue, Color.GetSaturation and Color.GetBrightness methods</remarks> 
            <param name="c">A Colour to convert</param> 
            <returns>An HSL value</returns> 
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourDialog.AdobeColours.RGB_to_CMYK(System.Drawing.Color)">
            <summary>
            Converts RGB to CMYK
            </summary>
            <param name="c">A color to convert.</param>
            <returns>A CMYK object</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourDialog.AdobeColours.CmykToRgb(ExtendedControls.Base.Code.Colours.ColourDialog.AdobeColours.CMYK)">
            <summary>
            Converts CMYK to RGB
            </summary>
            <param name="cmyk">A colour to convert</param>
            <returns>A Colour object</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourDialog.AdobeColours.GetNearestWebSafeColour(System.Drawing.Color)">
            <summary>
            Get nearest web safe colour based on the given RGB colour.
            </summary>
            <param name="colour"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourWheel.WinUtil.SetWindowsHookEx(System.Int32,ExtendedControls.Base.Code.Colours.ColourWheel.WinUtil.HookProc,System.IntPtr,System.Int32)">
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/setwindowshookex.asp
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourWheel.WinUtil.UnhookWindowsHookEx(System.Int32)">
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/setwindowshookex.asp
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourWheel.WinUtil.CallNextHookEx(System.Int32,System.Int32,System.IntPtr,System.IntPtr)">
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/setwindowshookex.asp
        </member>
        <member name="T:ExtendedControls.Base.Code.Colours.ColourWheel.Hook">
            http://support.microsoft.com/kb/318804
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/setwindowshookex.asp
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookstructures/cwpstruct.asp
            http://www.codeproject.com/KB/cs/globalhook.aspx
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourConverting.ColourToRGB(System.Drawing.Color)">
            <summary>
            Converts a Color to <see cref="!:RgbColor"/>.
            </summary>
            <param name="color">A Color object representing the color that is
            to be converted to <see cref="!:RgbColor"/>.</param>
            <returns>A <see cref="!:RgbColor"/> equivalent.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourConverting.RGBToColour(ExtendedControls.Base.Code.Colours.RGBColour)">
            <summary>
            Converts a <see cref="!:RgbColor"/> color structure to a Color object.
            </summary>
            <param name="rgb">A <see cref="!:RgbColor"/> object representing the color that is to be
            converted.</param>
            <returns>A Color equivalent.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourConverting.RGBToHSB(ExtendedControls.Base.Code.Colours.RGBColour)">
            <summary>
            Converts <see cref="!:RgbColor"/> to <see cref="T:ExtendedControls.Base.Code.Colours.HSBColour"/>.
            </summary>
            <param name="rgb">A <see cref="!:RgbColor"/> object containing the <see cref="!:RgbColor"/> values that are to
            be converted to <see cref="T:ExtendedControls.Base.Code.Colours.HSBColour"/> values.</param>
            <returns>A <see cref="T:ExtendedControls.Base.Code.Colours.HSBColour"/> equivalent.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourConverting.RGBToHSL(ExtendedControls.Base.Code.Colours.RGBColour)">
            <summary>
            RGB to HSL.
            </summary>
            <param name="rgb">The RGB.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourConverting.HSBToRGB(ExtendedControls.Base.Code.Colours.HSBColour)">
            <summary>
            Converts <see cref="T:ExtendedControls.Base.Code.Colours.HSBColour"/> to <see cref="!:RgbColor"/>.
            </summary>
            <param name="hsb">The <see cref="T:ExtendedControls.Base.Code.Colours.HSBColour"/>.</param>
            <returns>A <see cref="!:RgbColor"/> equivalent.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourConverting.HSLToRGB(ExtendedControls.Base.Code.Colours.HSLColour)">
            <summary>
            HSL to RGB.
            </summary>
            <param name="hsl">The HSL.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourConverting.HueToRGB(System.Double,System.Double,System.Double)">
            <summary>
            Helper function for converting.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="vH">The v H.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourConverting.GetMaximumValue(System.Double[])">
            <summary>
            Determines the maximum value of all of the numbers provided in the
            variable argument list.
            </summary>
            <param name="values">An array of doubles.</param>
            <returns>The maximum value.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourConverting.GetMinimumValue(System.Double[])">
            <summary>
            Determines the minimum value of all of the numbers provided in the
            variable argument list.
            </summary>
            <param name="values">An array of doubles.</param>
            <returns>The minimum value.</returns>
        </member>
        <member name="T:ExtendedControls.Base.Code.Colours.ColourExtensions.RGB">
            <summary>
            
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourExtensions.ConvertToRGB(ExtendedControls.Base.Code.Colours.ColourExtensions.HSB)">
            <summary>
            Converts to RGB.
            </summary>
            <param name="hsb">The HSB.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourTypeEditorDialog.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated 
            by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"></see> 
            method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> 
            that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"></see> 
            that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not 
            changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourTypeEditorDialog.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the 
            <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"></see> 
            method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>
            that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"></see> 
            value that indicates the style of editor used by the 
            <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"></see> 
            method. If the <see cref="T:System.Drawing.Design.UITypeEditor"></see> 
            does not support this method, then 
            <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"></see> 
            will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"></see>.
            </returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourTypeEditorDialog.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the specified context supports painting a 
            representation of an object's value within the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> 
            that can be used to gain additional context information.</param>
            <returns>
            true if <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)"></see> 
            is implemented; otherwise, false.
            </returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourTypeEditorDialog.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Paints a representation of the value of an object using the specified 
            <see cref="T:System.Drawing.Design.PaintValueEventArgs"></see>.
            </summary>
            <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs"></see> 
            that indicates what to paint and where to paint it.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSBColour.FromColour(System.Drawing.Color)">
            <summary>
            Creates from a given color.
            </summary>
            <param name="colour">The color.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSBColour.FromRGBColour(ExtendedControls.Base.Code.Colours.RGBColour)">
            <summary>
            Creates from a given color.
            </summary>
            <param name="colour">The color.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSBColour.FromHSBColour(ExtendedControls.Base.Code.Colours.HSBColour)">
            <summary>
            Creates from a given color.
            </summary>
            <param name="colour">The color.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSBColour.FromHSLColour(ExtendedControls.Base.Code.Colours.HSLColour)">
            <summary>
            Creates from a given color.
            </summary>
            <param name="colour">The color.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSBColour.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Base.Code.Colours.HSBColour"/> class.
            </summary>
            <param name="hue">The hue.</param>
            <param name="saturation">The saturation.</param>
            <param name="brightness">The brightness.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSBColour.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current 
            <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current
             <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSBColour.ToColour">
            <summary>
            Returns the underlying .NET color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSBColour.ToRGBColour">
            <summary>
            Returns a RGB color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSBColour.ToHsbColour">
            <summary>
            Returns a HSB color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSBColour.ToHSLColour">
            <summary>
            Returns a HSL color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSBColour.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is 
            equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with 
            the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the 
            current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The 
            <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSBColour.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:ExtendedControls.Base.Code.Colours.HSBColour.Hue">
            <summary>
            Gets or sets the hue. Values from 0 to 360.
            </summary>
            <value>The hue.</value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Colours.HSBColour.Saturation">
            <summary>
            Gets or sets the saturation. Values from 0 to 100.
            </summary>
            <value>The saturation.</value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Colours.HSBColour.Brightness">
            <summary>
            Gets or sets the brightness. Values from 0 to 100.
            </summary>
            <value>The brightness.</value>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSLColour.FromColour(System.Drawing.Color)">
            <summary>
            Creates from a given color.
            </summary>
            <param name="colour">The color.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSLColour.FromRGBColour(ExtendedControls.Base.Code.Colours.RGBColour)">
            <summary>
            Creates from a given color.
            </summary>
            <param name="colour">The color.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSLColour.FromHSLColour(ExtendedControls.Base.Code.Colours.HSLColour)">
            <summary>
            Creates from a given color.
            </summary>
            <param name="colour">The color.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSLColour.FromHSBColour(ExtendedControls.Base.Code.Colours.HSBColour)">
            <summary>
            Creates from a given color.
            </summary>
            <param name="colour">The color.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSLColour.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Base.Code.Colours.HSLColour"/> class.
            </summary>
            <param name="hue">The hue. Values from 0 to 360.</param>
            <param name="saturation">The saturation. Values from 0 to 100.</param>
            <param name="light">The light. Values from 0 to 100.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSLColour.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Base.Code.Colours.HSLColour"/> class.
            </summary>
            <param name="hue">The hue. Values from 0 to 360.</param>
            <param name="saturation">The saturation. Values from 0 to 100.</param>
            <param name="light">The light. Values from 0 to 100.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSLColour.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current 
            <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current 
            <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSLColour.ToColour">
            <summary>
            Returns the underlying .NET color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSLColour.ToRGBColour">
            <summary>
            Returns the RGB color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSLColour.ToHSLColour">
            <summary>
            Returns the HSL color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSLColour.ToHSBColour">
            <summary>
            Returns the HSB color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSLColour.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is 
            equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with 
            the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the 
            current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The 
            <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.HSLColour.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:ExtendedControls.Base.Code.Colours.HSLColour.Hue">
            <summary>
            Gets or sets the hue. Values from 0 to 360.
            </summary>
            <value>The hue.</value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Colours.HSLColour.PreciseHue">
            <summary>
            Gets or sets the precise hue. Values from 0 to 360.
            </summary>
            <value>The precise hue.</value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Colours.HSLColour.Saturation">
            <summary>
            Gets or sets the saturation. Values from 0 to 100.
            </summary>
            <value>The saturation.</value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Colours.HSLColour.PreciseSaturation">
            <summary>
            Gets or sets the precise saturation. Values from 0 to 100.
            </summary>
            <value>The precise saturation.</value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Colours.HSLColour.Light">
            <summary>
            Gets or sets the light. Values from 0 to 100.
            </summary>
            <value>The light.</value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Colours.HSLColour.PreciseLight">
            <summary>
            Gets or sets the precise light. Values from 0 to 100.
            </summary>
            <value>The precise light.</value>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.RGBColour.FromColour(System.Drawing.Color)">
            <summary>
            Creates from a given color.
            </summary>
            <param name="colour">The color.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.RGBColour.FromRgbColour(ExtendedControls.Base.Code.Colours.RGBColour)">
            <summary>
            Creates from a given color.
            </summary>
            <param name="colour">The color.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.RGBColour.FromHSBColour(ExtendedControls.Base.Code.Colours.HSBColour)">
            <summary>
            Creates from a given color.
            </summary>
            <param name="colour">The color.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.RGBColour.FromHSLColour(ExtendedControls.Base.Code.Colours.HSLColour)">
            <summary>
            Creates from a given color.
            </summary>
            <param name="colour">The color.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.RGBColour.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="!:RgbColor"/> class.
            </summary>
            <param name="red">The red.</param>
            <param name="green">The green.</param>
            <param name="blue">The blue.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.RGBColour.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current 
            <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current 
            <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.RGBColour.ToColour">
            <summary>
            Returns the underlying .NET color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.RGBColour.ToRGBColour">
            <summary>
            Returns a RGB color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.RGBColour.ToHSBColour">
            <summary>
            Returns a HSB color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.RGBColour.ToHSLColour">
            <summary>
            Returns a HSL color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.RGBColour.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is 
            equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with 
            the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the 
            current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The 
            <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.RGBColour.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:ExtendedControls.Base.Code.Colours.RGBColour.Red">
            <summary>
            Gets or sets the red component. Values from 0 to 255.
            </summary>
            <value>The red component.</value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Colours.RGBColour.Green">
            <summary>
            Gets or sets the green component. Values from 0 to 255.
            </summary>
            <value>The green component.</value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Colours.RGBColour.Blue">
            <summary>
            Gets or sets the blue component. Values from 0 to 255.
            </summary>
            <value>The blue component.</value>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourMethods.ColourToHexadecimal(System.Drawing.Color)">
            <summary>
            Colours to hexadecimal.
            </summary>
            <param name="colour">The colour.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourMethods.ColourFromHexadecimal(System.String)">
            <summary>
            Colours from hexadecimal.
            </summary>
            <param name="hexadecimalCode">The hexadecimal code.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourMethods.GetColourFromHexadecimal(System.String)">
            <summary>
            Gets the colour from hexadecimal.
            </summary>
            <param name="hexadecimalCode">The hexadecimal code.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Colour not valid!</exception>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourMethods.DisplayColour(System.Windows.Forms.Control,System.Drawing.Color)">
            <summary>
            Displays the colour.
            </summary>
            <param name="control">The control.</param>
            <param name="colour">The colour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourMethods.DisplayColour(System.Windows.Forms.Control,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Displays the colour.
            </summary>
            <param name="control">The control.</param>
            <param name="alpha">The alpha.</param>
            <param name="red">The red.</param>
            <param name="green">The green.</param>
            <param name="blue">The blue.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourMethods.DisplayColour(System.Windows.Forms.Control,System.Int32,System.Int32,System.Int32)">
            <summary>
            Displays the colour.
            </summary>
            <param name="control">The control.</param>
            <param name="red">The red.</param>
            <param name="green">The green.</param>
            <param name="blue">The blue.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourMethods.DisplayColour(System.Windows.Forms.Control,System.String,System.String,System.String,System.String)">
            <summary>
            Displays the colour.
            </summary>
            <param name="control">The control.</param>
            <param name="alpha">The alpha.</param>
            <param name="red">The red.</param>
            <param name="green">The green.</param>
            <param name="blue">The blue.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Colours.ColourMethods.DisplayColour(System.Windows.Forms.Control,System.String,System.String,System.String)">
            <summary>
            Displays the colour.
            </summary>
            <param name="control">The control.</param>
            <param name="red">The red.</param>
            <param name="green">The green.</param>
            <param name="blue">The blue.</param>
        </member>
        <member name="E:ExtendedControls.Base.Code.Controls.ColourButtonValues.TextChanged">
            <summary>
            Occurs when [text changed].
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ColourButtonValues.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Base.Code.Controls.ColourButtonValues"/> class.
            </summary>
            <param name="needPaint">The need paint.</param>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ColourButtonValues.Image">
            <summary>
            Gets and sets the button image.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ColourButtonValues.ResetImage">
            <summary>
            Resets the Image property to its default value.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ColourButtonValues.ImageTransparentColour">
            <summary>
            Gets and sets the label image transparent color.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ColourButtonValues.ResetImageTransparentColour">
            <summary>
            Resets the ImageTransparentColor property to its default value.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ColourButtonValues.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image transparent color.
            </summary>
            <param name="state">The state for which the image color is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ColourButtonValues.ImageStates">
            <summary>
            Gets access to the state specific images for the button.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ColourButtonValues.Text">
            <summary>
            Gets and sets the button text.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ColourButtonValues.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ColourButtonValues.ExtraText">
            <summary>
            Gets and sets the button extra text.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ColourButtonValues.ResetExtraText">
            <summary>
            Resets the Description property to its default value.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ColourButtonValues.SelectedColour">
            <summary>
            Gets and sets the selected color for the composite image.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ColourButtonValues.EmptyBorderColour">
            <summary>
            Gets and sets the empty border color for the composite image.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ColourButtonValues.SelectedRect">
            <summary>
            Gets and sets the selected rectangle for the composite image.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ColourButtonValues.CreateImageStates">
            <summary>
            Create the storage for the image states.
            </summary>
            <returns>Storage object.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ColourButtonValues.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ColourButtonValues.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ColourButtonValues.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawButtonExtended class.
            </summary>
            <param name="paletteDisabled">Palette source for the disabled state.</param>
            <param name="paletteNormal">Palette source for the normal state.</param>
            <param name="paletteTracking">Palette source for the tracking state.</param>
            <param name="palettePressed">Palette source for the pressed state.</param>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="buttonValues">Source for content values.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="useMnemonic">Use mnemonics.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawButtonExtended class.
            </summary>
            <param name="paletteDisabled">Palette source for the disabled state.</param>
            <param name="paletteNormal">Palette source for the normal state.</param>
            <param name="paletteTracking">Palette source for the tracking state.</param>
            <param name="palettePressed">Palette source for the pressed state.</param>
            <param name="paletteCheckedNormal">Palette source for the normal checked state.</param>
            <param name="paletteCheckedTracking">Palette source for the tracking checked state.</param>
            <param name="paletteCheckedPressed">Palette source for the pressed checked state.</param>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="buttonValues">Source for content values.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="useMnemonic">Use mnemonics.</param>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.LayoutDocker">
            <summary>
            Gets access to the contained layout docker.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.CurrentPalette">
            <summary>
            Gets access to the currently selected palette.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.DropDown">
            <summary>
            Gets and sets the drop down capability of the button.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.DropDownPosition">
            <summary>
            Gets and sets the drop down position.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.DropDownOrientation">
            <summary>
            Gets and sets the drop down orientation.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.DropDownPalette">
            <summary>
            Gets and sets the drop down capability of the button.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.Splitter">
            <summary>
            Gets and sets if the drop down button needs a splitter.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.SplitRectangle">
            <summary>
            Gets the split rectangle area.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.NonSplitRectangle">
            <summary>
            Gets the non split rectangle area.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.ButtonValues">
            <summary>
            Gets and sets the source for button values.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.DrawTabBorder">
            <summary>
            Gets and sets if the border should be drawn as a tab border.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.TabBorderStyle">
            <summary>
            Gets and sets the tab border style of the button.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.Orientation">
            <summary>
            Gets and sets the visual orientation.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.SetOrientation(ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Set the orientation of the two button components.
            </summary>
            <param name="borderBackOrient">Orientation of the button border and background..</param>
            <param name="contentOrient">Orientation of the button contents.</param>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.UseMnemonic">
            <summary>
            Gets and sets usage of mnemonics.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.Checked">
            <summary>
            Gets and sets the checked state.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.AllowUncheck">
            <summary>
            Gets and sets the allow uncheck state.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.DrawButtonComposition">
            <summary>
            Gets and sets the composition usage of the button.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.TestForFocusCues">
            <summary>
            Gets and sets the use of focus cues for deciding if focus rects are allowed.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.SetPalettes(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Update the source palettes for non-checked drawing.
            </summary>
            <param name="paletteDisabled">Palette source for the disabled state.</param>
            <param name="paletteNormal">Palette source for the normal state.</param>
            <param name="paletteTracking">Palette source for the tracking state.</param>
            <param name="palettePressed">Palette source for the pressed state.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Controls.ViewDrawButtonExtended.SetCheckedPalettes(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Update the source palettes for checked state drawing.
            </summary>
            <param name="paletteCheckedNormal">Palette source for the normal checked state.</param>
            <param name="paletteCheckedTracking">Palette source for the tracking checked state.</param>
            <param name="paletteCheckedPressed">Palette source for the pressed checked state.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Development.DevelopmentInformation.SetBuildInformation(ComponentFactory.Krypton.Toolkit.KryptonForm,ExtendedControls.Base.Enumerations.DevelopmentState)">
            <summary>
            Sets the build information.
            </summary>
            <param name="target">The target.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Development.DevelopmentInformation.SetBuildInformation(ComponentFactory.Krypton.Toolkit.KryptonForm,System.Reflection.Assembly,ExtendedControls.Base.Enumerations.DevelopmentState)">
            <summary>
            Sets the build information.
            </summary>
            <param name="target">The target.</param>
            <param name="assembly">The assembly.</param>
            <param name="state">The state.</param>
        </member>
        <member name="T:ExtendedControls.Base.Code.Drawing.ColourHandler.ARGB">
            Handle conversions between RGB and HSV
        </member>
        <member name="T:ExtendedControls.Base.Code.Drawing.RoundedRectangleF">
            <summary>
            Code from: https://github.com/aalitor/AltoControls/blob/on-development/AltoControls/Helpers/RoundedRectangleF.cs
            </summary>
        </member>
        <member name="T:ExtendedControls.Base.Code.Drawing.Transparenter">
            <summary>
            Code from: https://github.com/aalitor/AltoControls/blob/on-development/AltoControls/Helpers/Transparenter.cs
            </summary>
        </member>
        <member name="T:ExtendedControls.Base.Code.Exceptions.ExceptionHandler">
            <summary>
            A wrapper for exception handling.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Exceptions.ExceptionHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Base.Code.Exceptions.ExceptionHandler"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Exceptions.ExceptionHandler.CaptureException(System.Exception,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.String,System.String)">
            <summary>
            Captures the exception.
            </summary>
            <param name="exception">The exception.</param>
            <param name="title">The title.</param>
            <param name="buttons">The buttons.</param>
            <param name="icon">The icon.</param>
            <param name="className">Name of the class.</param>
            <param name="methodSignature">The method signature.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Exceptions.ExceptionHandler.ShowException(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Windows.Forms.ToolStripLabel,System.Object,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxOptions)">
            <summary>
            Shows the exception.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="useKryptonMessageBox">if set to <c>true</c> [use krypton message box].</param>
            <param name="useExtendedKryptonMessageBox">if set to <c>true</c> [use extended krypton message box].</param>
            <param name="useWin32MessageBox">if set to <c>true</c> [use win32 message box].</param>
            <param name="useConsole">if set to <c>true</c> [use console].</param>
            <param name="useToolStripLabel">if set to <c>true</c> [use tool strip label].</param>
            <param name="toolStripLabel">The tool strip label.</param>
            <param name="args">The arguments.</param>
            <param name="caption">The caption.</param>
            <param name="buttons">The buttons.</param>
            <param name="defaultButton">The default button.</param>
            <param name="icon">The icon.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.GraphicsTools.GraphicsUtilities.DrawControlToBitmap(System.Windows.Forms.Control)">
            <summary>
            Draws the control to bitmap.
            (https://www.youtube.com/watch?v=x-tMlZ3LTw8)
            </summary>
            <param name="targetControl">The target control.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.IO.FileUtilities.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Base.Code.IO.FileUtilities"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.IO.FileUtilities.GetFileInformation(System.String)">
            <summary>
            Gets the file information.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.IO.FileUtilities.GetReadableFileSize(System.Int64)">
            <summary>
            Gets the readable size of the file.
            https://stackoverflow.com/questions/281640/how-do-i-get-a-human-readable-file-size-in-bytes-abbreviation-using-net
            </summary>
            <param name="fileLength">Length of the file.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ExtendedControls.Base.Code.IO.FileUtilities.GetFileSizeOnDisk(System.String)" -->
        <member name="M:ExtendedControls.Base.Code.IO.FileUtilities.ImportContentFromFile(System.String,ComponentFactory.Krypton.Toolkit.KryptonListBox)">
            <summary>
            Imports the content from file.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="listBox">The list box.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.IO.StringHandler.SortStringCollection(System.Collections.Specialized.StringCollection)">
            <summary>
            Sorts the string collection.
            </summary>
            <param name="collection">The collection.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.IO.StringHandler.ReverseStringCollection(System.Collections.Specialized.StringCollection)">
            <summary>
            Reverses the string collection.
            </summary>
            <param name="collection">The collection.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.IO.StringHandler.PropagateColourSelector(ComponentFactory.Krypton.Toolkit.KryptonComboBox,System.Boolean)">
            <summary>
            Propagates the colour selector.
            </summary>
            <param name="selector">The selector.</param>
            <param name="sorted">if set to <c>true</c> [sorted].</param>
        </member>
        <member name="T:ExtendedControls.Base.Code.ListViewColumnSorter">
            <summary>
            This class is an implementation of the 'IComparer' interface.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ListViewColumnSorter.ColumnToSort">
            <summary>
            Specifies the column to be sorted
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ListViewColumnSorter.OrderOfSort">
            <summary>
            Specifies the order in which to sort (i.e. 'Ascending').
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ListViewColumnSorter.ObjectCompare">
            <summary>
            Case insensitive comparer object
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.ListViewColumnSorter.#ctor">
            <summary>
            Class constructor.  Initializes various elements
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.ListViewColumnSorter.Compare(System.Object,System.Object)">
            <summary>
            This method is inherited from the IComparer interface.  It compares the two objects passed using a case insensitive comparison.
            </summary>
            <param name="x">First object to be compared</param>
            <param name="y">Second object to be compared</param>
            <returns>The result of the comparison. "0" if equal, negative if 'x' is less than 'y' and positive if 'x' is greater than 'y'</returns>
        </member>
        <member name="P:ExtendedControls.Base.Code.ListViewColumnSorter.SortColumn">
            <summary>
            Gets or sets the number of the column to which to apply the sorting operation (Defaults to '0').
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.ListViewColumnSorter.Order">
            <summary>
            Gets or sets the order of sorting to apply (for example, 'Ascending' or 'Descending').
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Models.Typeface.TypefaceCollection.Collection">
            <summary>
            Gets the collection.
            </summary>
            <value>
            The collection.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Models.Typeface.TypefaceCollection.Families">
            <summary>
            Gets the families.
            </summary>
            <value>
            The families.
            </value>
        </member>
        <member name="M:ExtendedControls.Base.Code.Models.Typeface.TypefaceCollection.AddTypefaceToFile(System.String)">
            <summary>
            Adds the typeface to file.
            </summary>
            <param name="typefaceFile">The typeface file.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Models.Typeface.TypefaceCollection.ClearTypefaceFiles">
            <summary>
            Clears the typeface files.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Models.Typeface.TypefaceCollection.ContainsTypefaceFamily(System.Drawing.FontFamily)">
            <summary>
            Determines whether [contains typeface family] [the specified family].
            </summary>
            <param name="family">The family.</param>
            <returns>
              <c>true</c> if [contains typeface family] [the specified family]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Models.Typeface.TypefaceLister.CreateTypefaceList(System.Drawing.Text.PrivateFontCollection,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Drawing.GraphicsUnit,System.String)">
            <summary>
            Creates the typeface list.
            </summary>
            <param name="typefaces">The typefaces.</param>
            <param name="bold">if set to <c>true</c> [bold].</param>
            <param name="italic">if set to <c>true</c> [italic].</param>
            <param name="underline">if set to <c>true</c> [underline].</param>
            <param name="strikeout">if set to <c>true</c> [strikeout].</param>
            <param name="typefaceSize">Size of the typeface.</param>
            <param name="graphicsUnit">The graphics unit.</param>
            <param name="sampleText">The sample text.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Models.Typeface.TypefaceLister.LoadTypefaceFromDirectory(System.String,System.Boolean)">
            <summary>
            Loads the typeface from directory.
            </summary>
            <param name="typefaceDirectory">The typeface directory.</param>
            <param name="includeSubDirectories">if set to <c>true</c> [include sub directories].</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">fontDirectory must be specified!</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Directory does not exist! " + typefaceDirectory</exception>
        </member>
        <member name="P:ExtendedControls.Base.Code.Models.Typeface.TypefaceModel.Typeface">
            <summary>
            Gets or sets the typeface.
            </summary>
            <value>
            The typeface.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Models.Typeface.TypefaceModel.TypefaceFilePath">
            <summary>
            Gets or sets the typeface file path.
            </summary>
            <value>
            The typeface file path.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Models.Typeface.TypefaceModel.TypefaceName">
            <summary>
            Gets or sets the name of the typeface.
            </summary>
            <value>
            The name of the typeface.
            </value>
        </member>
        <member name="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState">
            <summary>
            The scrollbar arrow button states.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState.UPNORMAL">
            <summary>
            Indicates the up arrow is in normal state.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState.UPHOT">
            <summary>
            Indicates the up arrow is in hot state.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState.UPACTIVE">
            <summary>
            Indicates the up arrow is in active state.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState.UPPRESSED">
            <summary>
            Indicates the up arrow is in pressed state.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState.UPDISABLED">
            <summary>
            Indicates the up arrow is in disabled state.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState.DOWNNORMAL">
            <summary>
            Indicates the down arrow is in normal state.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState.DOWNHOT">
            <summary>
            Indicates the down arrow is in hot state.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState.DOWNACTIVE">
            <summary>
            Indicates the down arrow is in active state.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState.DOWNPRESSED">
            <summary>
            Indicates the down arrow is in pressed state.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState.DOWNDISABLED">
            <summary>
            Indicates the down arrow is in disabled state.
            </summary>
        </member>
        <member name="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarControlDesigner">
            <summary>
            The designer for the <see cref="!:KryptonScrollBar"/> control.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarControlDesigner.SelectionRules">
            <summary>
            Gets the <see cref="P:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarControlDesigner.SelectionRules"/> for the control.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Prefilters the properties so that unnecessary properties are hidden
            in the property browser of Visual Studio.
            </summary>
            <param name="properties">The property dictionary.</param>
        </member>
        <member name="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer">
            <summary>
            The scrollbar renderer class.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.thumbColours">
            <summary>
            The colors of the thumb in the 3 states.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.arrowColours">
            <summary>
            The arrow colors in the three states.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.arrowBorderColours">
            <summary>
            The arrow border colors.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.backgroundColours">
            <summary>
            The background colors.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.trackColours">
            <summary>
            The track colors.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.borderColours">
            <summary>
            The Border colors.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.gripColours">
            <summary>
            The Grip colors.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.#cctor">
            <summary>
            Initializes static members of the <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation)">
            <summary>
            Draws the background.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="orientation">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation"/>.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.DrawTrack(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation)">
            <summary>
            Draws the channel ( or track ).
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The scrollbar state.</param>
            <param name="orientation">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation"/>.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.DrawThumb(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation)">
            <summary>
            Draws the thumb.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState"/> of the thumb.</param>
            <param name="orientation">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation"/>.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.DrawThumbGrip(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation)">
            <summary>
            Draws the grip of the thumb.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="orientation">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation"/>.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.GetGripNomalBitmap">
            <summary>
            Draws the GripNomal Bitmap.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.GetScrollBarArrowDownBitmap">
            <summary>
            Draws the GripNomal Bitmap.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.DrawArrowButton(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState,System.Boolean,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation)">
            <summary>
            Draws an arrow button.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState"/> of the arrow button.</param>
            <param name="arrowUp">true for an up arrow, false otherwise.</param>
            <param name="orientation">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation"/>.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.DrawBackgroundVertical(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.DrawBackgroundHorizontal(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.DrawTrackVertical(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the channel ( or track ).
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.DrawTrackHorizontal(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the channel ( or track ).
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.AdjustThumbGrip(System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation,System.Drawing.Image)">
            <summary>
            Adjusts the thumb grip according to the specified <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation"/>.
            </summary>
            <param name="rect">The rectangle to adjust.</param>
            <param name="orientation">The scrollbar orientation.</param>
            <param name="gripImage">The grip image.</param>
            <returns>The adjusted rectangle.</returns>
            <remarks>Also rotates the grip image if necessary.</remarks>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.DrawThumbVertical(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState)">
            <summary>
            Draws the thumb.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState"/> of the thumb.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.DrawThumbHorizontal(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState)">
            <summary>
            Draws the thumb.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState"/> of the thumb.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.DrawArrowButtonVertical(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState,System.Boolean)">
            <summary>
            Draws an arrow button.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState"/> of the arrow button.</param>
            <param name="arrowUp">true for an up arrow, false otherwise.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.DrawArrowButtonHorizontal(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState,System.Boolean)">
            <summary>
            Draws an arrow button.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState"/> of the arrow button.</param>
            <param name="arrowUp">true for an up arrow, false otherwise.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.GetArrowDownButtonImage(ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState)">
            <summary>
            Draws the arrow down button for the scrollbar.
            </summary>
            <param name="state">The button state.</param>
            <returns>The arrow down button as <see cref="T:System.Drawing.Image"/>.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarExtendedRenderer.CreateRoundPath(System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
            Creates a rounded rectangle.
            </summary>
            <param name="r">The rectangle to create the rounded rectangle from.</param>
            <param name="radiusX">The x-radius.</param>
            <param name="radiusY">The y-radius.</param>
            <returns>A <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> object representing the rounded rectangle.</returns>
        </member>
        <member name="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer">
            <summary>
            The scrollbar renderer class.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.thumbColours">
            <summary>
            The colors of the thumb in the 3 states.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.arrowColours">
            <summary>
            The arrow colors in the three states.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.arrowBorderColours">
            <summary>
            The arrow border colors.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.backgroundColours">
            <summary>
            The background colors.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.trackColours">
            <summary>
            The track colors.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.borderColours">
            <summary>
            The Border colors.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.gripColours">
            <summary>
            The Grip colors.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.#cctor">
            <summary>
            Initializes static members of the <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation)">
            <summary>
            Draws the background.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="orientation">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation"/>.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.DrawTrack(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation)">
            <summary>
            Draws the channel ( or track ).
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The scrollbar state.</param>
            <param name="orientation">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation"/>.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.DrawThumb(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation)">
            <summary>
            Draws the thumb.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState"/> of the thumb.</param>
            <param name="orientation">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation"/>.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.DrawThumbGrip(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation)">
            <summary>
            Draws the grip of the thumb.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="orientation">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation"/>.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.GetGripNomalBitmap">
            <summary>
            Draws the GripNomal Bitmap.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.GetScrollBarArrowDownBitmap">
            <summary>
            Draws the GripNomal Bitmap.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.DrawArrowButton(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState,System.Boolean,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation)">
            <summary>
            Draws an arrow button.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState"/> of the arrow button.</param>
            <param name="arrowUp">true for an up arrow, false otherwise.</param>
            <param name="orientation">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation"/>.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.DrawBackgroundVertical(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.DrawBackgroundHorizontal(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.DrawTrackVertical(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the channel ( or track ).
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.DrawTrackHorizontal(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the channel ( or track ).
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.AdjustThumbGrip(System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation,System.Drawing.Image)">
            <summary>
            Adjusts the thumb grip according to the specified <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation"/>.
            </summary>
            <param name="rect">The rectangle to adjust.</param>
            <param name="orientation">The scrollbar orientation.</param>
            <param name="gripImage">The grip image.</param>
            <returns>The adjusted rectangle.</returns>
            <remarks>Also rotates the grip image if necessary.</remarks>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.DrawThumbVertical(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState)">
            <summary>
            Draws the thumb.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState"/> of the thumb.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.DrawThumbHorizontal(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState)">
            <summary>
            Draws the thumb.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState"/> of the thumb.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.DrawArrowButtonVertical(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState,System.Boolean)">
            <summary>
            Draws an arrow button.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState"/> of the arrow button.</param>
            <param name="arrowUp">true for an up arrow, false otherwise.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.DrawArrowButtonHorizontal(System.Drawing.Graphics,System.Drawing.Rectangle,ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState,System.Boolean)">
            <summary>
            Draws an arrow button.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> used to paint.</param>
            <param name="rect">The rectangle in which to paint.</param>
            <param name="state">The <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState"/> of the arrow button.</param>
            <param name="arrowUp">true for an up arrow, false otherwise.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.GetArrowDownButtonImage(ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarArrowButtonState)">
            <summary>
            Draws the arrow down button for the scrollbar.
            </summary>
            <param name="state">The button state.</param>
            <returns>The arrow down button as <see cref="T:System.Drawing.Image"/>.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarKryptonRenderer.CreateRoundPath(System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
            Creates a rounded rectangle.
            </summary>
            <param name="r">The rectangle to create the rounded rectangle from.</param>
            <param name="radiusX">The x-radius.</param>
            <param name="radiusY">The y-radius.</param>
            <returns>A <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> object representing the rounded rectangle.</returns>
        </member>
        <member name="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation">
            <summary>
            Enum for the scrollbar orientation.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation.HORIZONTAL">
            <summary>
            Indicates a horizontal scrollbar.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation.VERTICAL">
            <summary>
            Indicates a vertical scrollbar.
            </summary>
        </member>
        <member name="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState">
            <summary>
            The scrollbar states.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState.NORMAL">
            <summary>
            Indicates a normal scrollbar state.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState.HOT">
            <summary>
            Indicates a hot scrollbar state.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState.ACTIVE">
            <summary>
            Indicates an active scrollbar state.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState.PRESSED">
            <summary>
            Indicates a pressed scrollbar state.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarState.DISABLED">
            <summary>
            Indicates a disabled scrollbar state.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.SetFileAttributes(System.String,System.IO.FileAttributes)">
            <summary>
            Sets the file attributes.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetFileAttributes(System.String)">
            <summary>
            Gets the file attributes.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.AddNewAttributes(System.String,System.IO.FileAttributes)">
            <summary>
            Adds the new attributes.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.ClearAttributes(System.String,System.IO.FileAttributes)">
            <summary>
            Clears the attributes.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.ClearAllAttributes(System.String)">
            <summary>
            Clears all attributes.
            </summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetSelectedFileAttributes(System.String,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox,ComponentFactory.Krypton.Toolkit.KryptonCheckBox)">
            <summary>
            Gets the selected file attributes.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="archive">The archive.</param>
            <param name="compressed">The compressed.</param>
            <param name="device">The device.</param>
            <param name="directory">The directory.</param>
            <param name="encrypted">The encrypted.</param>
            <param name="hidden">The hidden.</param>
            <param name="integrityStream">The integrity stream.</param>
            <param name="normal">The normal.</param>
            <param name="noScrubData">The no scrub data.</param>
            <param name="notContextIndexed">The not context indexed.</param>
            <param name="offline">The offline.</param>
            <param name="readOnly">The read only.</param>
            <param name="reparsePoint">The reparse point.</param>
            <param name="sparseFile">The sparse file.</param>
            <param name="system">The system.</param>
            <param name="temporary">The temporary.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetArchivedAttributeState(System.String)">
            <summary>
            Gets the state of the archived attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetCompressedAttributeState(System.String)">
            <summary>
            Gets the state of the compressed attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetDeviceAttributeState(System.String)">
            <summary>
            Gets the state of the device attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetDirectoryAttributeState(System.String)">
            <summary>
            Gets the state of the directory attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetEncryptedAttributeState(System.String)">
            <summary>
            Gets the state of the encrypted attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetHiddenAttributeState(System.String)">
            <summary>
            Gets the state of the hidden attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetIntegrityStreamAttributeState(System.String)">
            <summary>
            Gets the state of the integrity stream attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetNormalAttributeState(System.String)">
            <summary>
            Gets the state of the normal attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetNoScrubDataAttributeState(System.String)">
            <summary>
            Gets the state of the no scrub data attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetNotContextIndexedAttributeState(System.String)">
            <summary>
            Gets the state of the not context indexed attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetOfflineAttributeState(System.String)">
            <summary>
            Gets the state of the offline attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetReadOnlyAttributeState(System.String)">
            <summary>
            Gets the state of the read only attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetReparsePointAttributeState(System.String)">
            <summary>
            Gets the state of the reparse point attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetSparseFileAttributeState(System.String)">
            <summary>
            Gets the state of the sparse file attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetSystemAttributeState(System.String)">
            <summary>
            Gets the state of the system attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.FileAttributeHandler.GetTemporaryAttributeState(System.String)">
            <summary>
            Gets the state of the temporary attribute.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.HashingAlgorithms.SetMD5Worker(System.ComponentModel.BackgroundWorker)">
            <summary>
            Sets the value of MD5Worker to value.
            </summary>
            <param name="value">The value of MD5Worker.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.HashingAlgorithms.GetMD5Worker">
            <summary>
            Returns the value of MD5Worker.
            </summary>
            <returns>The value of MD5Worker.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.HashingAlgorithms.SetMD5(System.String)">
            <summary>
            Sets the value of MD5 to value.
            </summary>
            <param name="value">The value of MD5.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.HashingAlgorithms.GetMD5">
            <summary>
            Returns the value of MD5.
            </summary>
            <returns>The value of MD5.</returns>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.HashingHelper.HashTypeArray">
            <summary>
            Gets the hash type array.
            </summary>
            <value>
            The hash type array.
            </value>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.HashingHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Base.Code.Security.HashingHelper"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.HashingHelper.PropagateHashInput(ComponentFactory.Krypton.Toolkit.KryptonComboBox)">
            <summary>
            Propagates the hash input.
            </summary>
            <param name="box">The box.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.HashingHelper.IsHashValid(ComponentFactory.Krypton.Toolkit.KryptonLabel,ComponentFactory.Krypton.Toolkit.KryptonTextBox)">
            <summary>
            Determines whether [is hash valid] [the specified file hash].
            </summary>
            <param name="fileHash">The file hash.</param>
            <param name="hash">The hash.</param>
            <returns>
              <c>true</c> if [is hash valid] [the specified file hash]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.HashingHelper.ValidateFileHash(ComponentFactory.Krypton.Toolkit.KryptonLabel,ComponentFactory.Krypton.Toolkit.KryptonTextBox)">
            <summary>
            Validates the file hash.
            </summary>
            <param name="fileHash">The file hash.</param>
            <param name="hash">The hash.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.HashingHelper.ValidateFileHash(System.Boolean,ComponentFactory.Krypton.Toolkit.KryptonLabel,ComponentFactory.Krypton.Toolkit.KryptonTextBox)">
            <summary>
            Validates the file hash.
            </summary>
            <param name="showConfirmation">if set to <c>true</c> [show confirmation].</param>
            <param name="fileHash">The file hash.</param>
            <param name="hash">The hash.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.HashingHelper.IsBackgroundWorkerBusy(System.ComponentModel.BackgroundWorker,System.ComponentModel.BackgroundWorker,System.ComponentModel.BackgroundWorker,System.ComponentModel.BackgroundWorker,System.ComponentModel.BackgroundWorker,System.ComponentModel.BackgroundWorker)">
            <summary>
            Determines whether [is background worker busy] [the specified MD5].
            </summary>
            <param name="md5">The MD5.</param>
            <param name="ripemd160">The ripemd160.</param>
            <param name="sha1">The sha1.</param>
            <param name="sha256">The sha256.</param>
            <param name="sha384">The sha384.</param>
            <param name="sha512">The sha512.</param>
            <returns>
              <c>true</c> if [is background worker busy] [the specified MD5]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.HashingHelper.CancelBackgroundWorkerProgress(System.ComponentModel.BackgroundWorker,System.ComponentModel.BackgroundWorker,System.ComponentModel.BackgroundWorker,System.ComponentModel.BackgroundWorker,System.ComponentModel.BackgroundWorker,System.ComponentModel.BackgroundWorker)">
            <summary>
            Cancels the background worker progress.
            </summary>
            <param name="md5">The MD5.</param>
            <param name="ripemd160">The ripemd160.</param>
            <param name="sha1">The sha1.</param>
            <param name="sha256">The sha256.</param>
            <param name="sha384">The sha384.</param>
            <param name="sha512">The sha512.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.HashingHelper.BuildFileHash(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Builds the file hash.
            </summary>
            <param name="hashBytes">The hash bytes.</param>
            <param name="size">The size.</param>
            <param name="toUpperCase">if set to <c>true</c> [to upper case].</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.HashingHelper.UpdateHashType(ComponentFactory.Krypton.Toolkit.KryptonComboBox,System.Int32)">
            <summary>
            Updates the type of the hash.
            </summary>
            <param name="box">The box.</param>
            <param name="hashLength">Length of the hash.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.#ctor(System.String)">
            <param name="apiKey">The API key you got from Virus Total</param>
        </member>
        <member name="E:ExtendedControls.Base.Code.Security.VirusTotalAPI.OnRawResponseReceived">
            <summary>
            Occurs when the raw JSON response is received from VirusTotal.
            </summary>
        </member>
        <member name="E:ExtendedControls.Base.Code.Security.VirusTotalAPI.OnHTTPRequestSending">
            <summary>
            Occurs just before we send a request to VirusTotal.
            </summary>
        </member>
        <member name="E:ExtendedControls.Base.Code.Security.VirusTotalAPI.OnHTTPResponseReceived">
            <summary>
            Occurs right after a response has been received from VirusTotal.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.VirusTotalAPI.RestrictSizeLimits">
            <summary>
            When true, we check the file size before uploading it to Virus Total. The file size restrictions are based on the Virus Total public API 2.0 documentation.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.VirusTotalAPI.RestrictNumberOfResources">
            <summary>
            When true, we check the number of resources that are submitted to Virus Total. The limits are according to Virus Total public API 2.0 documentation.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.VirusTotalAPI.FileSizeLimit">
            <summary>
            The maximum size (in bytes) that the Virus Total public API 2.0 supports for file uploads.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.VirusTotalAPI.CommentSizeRestriction">
            <summary>
            The maximum size (in bytes) of comments.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.VirusTotalAPI.RescanBatchSizeLimit">
            <summary>
            The maximum number of resources you can rescan in one request.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.VirusTotalAPI.FileReportBatchSizeLimit">
            <summary>
            The maximum number of resources you can get file reports for in one request.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.VirusTotalAPI.UrlReportBatchSizeLimit">
            <summary>
            The maximum number of URLs you can get reports for in one request.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.VirusTotalAPI.UrlScanBatchSizeLimit">
            <summary>
            The maximum number of URLs you can scan in one request.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.VirusTotalAPI.UseTLS">
            <summary>
            Set to false to use HTTP instead of HTTPS. HTTPS is used by default.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.VirusTotalAPI.UserAgent">
            <summary>
            The user-agent to use when doing queries
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.VirusTotalAPI.Proxy">
            <summary>
            Get or set the proxy.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.VirusTotalAPI.Timeout">
            <summary>
            Get or set the timeout.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.VirusTotalAPI.ApiUrl">
            <summary>
            The URL which the Virus Total service listens on. If you don't set the scheme to http:// or https:// it will default to https://
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.ScanFileAsync(System.IO.FileInfo)">
            <summary>
            Scan a file.
            Note: It is highly encouraged to get the report of the file before scanning, in case it has already been scanned before.
            </summary>
            <param name="file">The file to scan</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.ScanFileAsync(System.Byte[],System.String)">
            <summary>
            Scan a file.
            Note: It is highly encouraged to get the report of the file before scanning, in case it has already been scanned before.
            Note: You are also strongly encouraged to provide the filename as it is rich metadata for the Virus Total database.
            </summary>
            <param name="file">The file to scan</param>
            <param name="filename">The filename of the file</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.ScanFileAsync(System.IO.Stream,System.String)">
            <summary>
            Scan a file.
            Note: It is highly encouraged to get the report of the file before scanning, in case it has already been scanned before.
            Note: You are also strongly encouraged to provide the filename as it is rich metadata for the Virus Total database.
            </summary>
            <param name="stream">The file to scan</param>
            <param name="filename">The filename of the file</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.RescanFileAsync(System.IO.FileInfo)">
            <summary>
            Tell VirusTotal to rescan a file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            Note: Before requesting a rescan you should retrieve the latest report on the file.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.RescanFileAsync(System.Byte[])">
            <summary>
            Tell VirusTotal to rescan a file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            Note: Before requesting a rescan you should retrieve the latest report on the file.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.RescanFileAsync(System.IO.Stream)">
            <summary>
            Tell VirusTotal to rescan a file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            Note: Before requesting a rescan you should retrieve the latest report on the file.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.RescanFileAsync(System.String)">
            <summary>
            Tell VirusTotal to rescan a file without sending the actual file to VirusTotal.
            Note: Before requesting a rescan you should retrieve the latest report on the file.
            </summary>
            <param name="resource">A hash of the file. It can be an MD5, SHA1 or SHA256</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.RescanFilesAsync(System.Collections.Generic.IEnumerable{System.IO.FileInfo})">
            <summary>
            Tell VirusTotal to rescan a file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            Note: Before requesting a rescan you should retrieve the latest report on the files.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.RescanFilesAsync(System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            Tell VirusTotal to rescan a file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            Note: Before requesting a rescan you should retrieve the latest report on the files.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.RescanFilesAsync(System.Collections.Generic.IEnumerable{System.IO.Stream})">
            <summary>
            Tell VirusTotal to rescan a file.
            Note: This does not send the content of the streams to VirusTotal. It hashes the content and sends that instead.
            Note: Before requesting a rescan you should retrieve the latest report on the files.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.RescanFilesAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Tell VirusTotal to rescan a file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            Note: Before requesting a rescan you should retrieve the latest report on the files.
            Note: You can use MD5, SHA1 or SHA256 and even mix them.
            Note: You can only request a maximum of 25 rescans at the time.
            </summary>
            <param name="resourceList">a MD5, SHA1 or SHA256 of the files. You can also specify list made up of a combination of any of the three allowed hashes (up to 25 items), this allows you to perform a batch request with one single call.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetFileReportAsync(System.Byte[])">
            <summary>
            Gets the report of the file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            </summary>
            <param name="file">The file you want to get a report on.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetFileReportAsync(System.IO.FileInfo)">
            <summary>
            Gets the report of the file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            </summary>
            <param name="file">The file you want to get a report on.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetFileReportAsync(System.IO.Stream)">
            <summary>
            Gets the report of the file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            </summary>
            <param name="stream">The stream you want to get a report on.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetFileReportAsync(System.String)">
            <summary>
            Gets the report of the file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            </summary>
            <param name="resource">The resource (MD5, SHA1 or SHA256) you wish to get a report on.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetFileReportsAsync(System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            Gets a list of reports of the files.
            Note: This does not send the files to VirusTotal. It hashes the files and sends them instead.
            </summary>
            <param name="files">The files you want to get reports on.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetFileReportsAsync(System.Collections.Generic.IEnumerable{System.IO.FileInfo})">
            <summary>
            Gets a list of reports of the files.
            Note: This does not send the files to VirusTotal. It hashes the files and sends them instead.
            </summary>
            <param name="files">The files you want to get reports on.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetFileReportsAsync(System.Collections.Generic.IEnumerable{System.IO.Stream})">
            <summary>
            Gets a list of reports of the files.
            Note: This does not send the content of the streams to VirusTotal. It hashes the content of the stream and sends that instead.
            </summary>
            <param name="streams">The streams you want to get reports on.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetFileReportsAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the report of the file represented by its hash or scan ID.
            Keep in mind that URLs sent using the API have the lowest scanning priority, depending on VirusTotal's load, it may take several hours before the file is scanned,
            so query the report at regular intervals until the result shows up and do not keep submitting the file over and over again.
            </summary>
            <param name="resourceList">SHA1, MD5 or SHA256 of the file. It can also be a scan ID of a previous scan.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.ScanUrlAsync(System.String)">
            <summary>
            Scan the given URL. The URL will be downloaded by VirusTotal and processed.
            Note: Before performing your submission, you should retrieve the latest report on the URL.
            </summary>
            <param name="url">The URL to process.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.ScanUrlAsync(System.Uri)">
            <summary>
            Scan the given URL. The URL will be downloaded by VirusTotal and processed.
            Note: Before performing your submission, you should retrieve the latest report on the URL.
            </summary>
            <param name="url">The URL to process.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.ScanUrlsAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Scan the given URLs. The URLs will be downloaded by VirusTotal and processed.
            Note: Before performing your submission, you should retrieve the latest reports on the URLs.
            </summary>
            <param name="urls">The URLs to process.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.ScanUrlsAsync(System.Collections.Generic.IEnumerable{System.Uri})">
            <summary>
            Scan the given URLs. The URLs will be downloaded by VirusTotal and processed.
            Note: Before performing your submission, you should retrieve the latest reports on the URLs.
            </summary>
            <param name="urlList">The URLs to process.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetUrlReportAsync(System.String,System.Boolean)">
            <summary>
            Gets a scan report from an URL
            </summary>
            <param name="url">The URL you wish to get the report on.</param>
            <param name="scanIfNoReport">Set to true if you wish VirusTotal to scan the URL if it is not present in the database.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetUrlReportAsync(System.Uri,System.Boolean)">
            <summary>
            Gets a scan report from an URL
            </summary>
            <param name="url">The URL you wish to get the report on.</param>
            <param name="scanIfNoReport">Set to true if you wish VirusTotal to scan the URL if it is not present in the database.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetUrlReportsAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Gets a scan report from a list of URLs
            </summary>
            <param name="urls">The URLs you wish to get the reports on.</param>
            <param name="scanIfNoReport">Set to true if you wish VirusTotal to scan the URLs if it is not present in the database.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetUrlReportsAsync(System.Collections.Generic.IEnumerable{System.Uri},System.Boolean)">
            <summary>
            Gets a scan report from a list of URLs
            </summary>
            <param name="urlList">The URLs you wish to get the reports on.</param>
            <param name="scanIfNoReport">Set to true if you wish VirusTotal to scan the URLs if it is not present in the database.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetIPReportAsync(System.String)">
            <summary>
            Gets a scan report from an IP
            </summary>
            <param name="ip">The IP you wish to get the report on.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetIPReportAsync(System.Net.IPAddress)">
            <summary>
            Gets a scan report from an IP
            </summary>
            <param name="ip">The IP you wish to get the report on.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetDomainReportAsync(System.String)">
            <summary>
            Gets a scan report from a domain
            </summary>
            <param name="domain">The domain you wish to get the report on.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetDomainReportAsync(System.Uri)">
            <summary>
            Gets a scan report from a domain
            </summary>
            <param name="domain">The domain you wish to get the report on.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetCommentAsync(System.Byte[],System.Nullable{System.DateTime})">
            <summary>
            Retrieves a comment on a file.
            </summary>
            <param name="file">The file you wish to retrieve a comment from</param>
            <param name="before">TODO</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetCommentAsync(System.IO.FileInfo,System.Nullable{System.DateTime})">
            <summary>
            Retrieves a comment on a file.
            </summary>
            <param name="file">The file you wish to retrieve a comment from</param>
            <param name="before">TODO</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetCommentAsync(System.Uri,System.Nullable{System.DateTime})">
            <summary>
            Retrieves a comment from an URL.
            </summary>
            <param name="uri">The URL you wish to retrieve a comment from</param>
            <param name="before">TODO</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetCommentAsync(System.String,System.Nullable{System.DateTime})">
            <summary>
            Retrieves a comment on a resource.
            </summary>
            <param name="resource">The MD5/SHA1/SHA256 hash or URL.</param>
            <param name="before">TODO</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.CreateCommentAsync(System.Byte[],System.String)">
            <summary>
            Creates a comment on a file
            </summary>
            <param name="file">The file you wish to create a comment on</param>
            <param name="comment">The comment you wish to add.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.CreateCommentAsync(System.IO.FileInfo,System.String)">
            <summary>
            Creates a comment on a file
            </summary>
            <param name="file">The file you wish to create a comment on</param>
            <param name="comment">The comment you wish to add.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.CreateCommentAsync(System.Uri,System.String)">
            <summary>
            Creates a comment on an URL
            </summary>
            <param name="url">The URL you wish to create a comment on</param>
            <param name="comment">The comment you wish to add.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.CreateCommentAsync(System.String,System.String)">
            <summary>
            Creates a comment on a resource
            </summary>
            <param name="resource">The MD5/SHA1/SHA256 hash or URL.</param>
            <param name="comment">The comment you wish to add.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetPublicFileScanLink(System.String)">
            <summary>
            Gives you a link to a file analysis based on its hash.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetPublicFileScanLink(System.IO.FileInfo)">
            <summary>
            Gives you a link to a file analysis based on its hash.
            Note: This actually hashes the file - if you have the hash already, use the overload that takes in a string.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetPublicUrlScanLink(System.String)">
            <summary>
            Gives you a link to a URL analysis.
            </summary>
            <returns>A link to VirusTotal that contains the report</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Security.VirusTotalAPI.GetPublicUrlScanLink(System.Uri)">
            <summary>
            Gives you a link to a URL analysis.
            </summary>
            <returns>A link to VirusTotal that contains the report</returns>
        </member>
        <member name="T:ExtendedControls.Base.Code.Security.UnixTimeConverter">
            <summary>
            
            </summary>
            <seealso cref="T:Newtonsoft.Json.Converters.DateTimeConverterBase" />
        </member>
        <member name="F:ExtendedControls.Base.Code.Security.DomainResponseCode.NotPresent">
            <summary>
            The item you searched for was not present in VirusTotal's dataset.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Security.DomainResponseCode.Present">
            <summary>
            The item was present and it could be retrieved.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Security.FileReportResponseCode.Queued">
            <summary>
            The resource is still being scanned
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Security.FileReportResponseCode.NotPresent">
            <summary>
            The item you searched for was not present in VirusTotal's dataset.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Security.FileReportResponseCode.Present">
            <summary>
            The item was present and it could be retrieved.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Security.IPReportResponseCode.NotPresent">
            <summary>
            The item you searched for was not present in VirusTotal's dataset.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Security.IPReportResponseCode.Present">
            <summary>
            The item was present and it could be retrieved.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Security.RescanResponseCode.ResourceNotFound">
            <summary>
            There was an error in the request
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Security.RescanResponseCode.Queued">
            <summary>
            The requested item is still queued for analysis.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Security.ScanFileResponseCode.Error">
            <summary>
            An error happened in the request.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Security.ScanFileResponseCode.Queued">
            <summary>
            The requested item is still queued for analysis.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Security.UrlReportResponseCode.NotPresent">
            <summary>
            The item you searched for was not present in VirusTotal's dataset.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Security.UrlReportResponseCode.Present">
            <summary>
            The item was indeed present and it could be retrieved.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Security.UrlScanResponseCode.Queued">
            <summary>
            The requested item is queued for analysis.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.ScanEngine.Detected">
            <summary>
            True if the engine flagged the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.ScanEngine.Version">
            <summary>
            Version of the engine.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.ScanEngine.Result">
            <summary>
            Contains the name of the malware, if any.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.ScanEngine.Update">
            <summary>
            The date of the latest signatures of the engine.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLScanEngine.Detected">
            <summary>
            True if the engine flagged the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLScanEngine.Detail">
            <summary>
            Details about the detection
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLScanEngine.Result">
            <summary>
            Contains the name of the malware, if any.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.CommentResult.Comments">
            <summary>
            A list of comments on the resource
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.CommentResult.VerboseMsg">
            <summary>
            Contains the message that corresponds to the response code.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.CreateCommentResult.VerboseMsg">
            <summary>
            Contains the message that corresponds to the response code.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.DomainReport.VerboseMsg">
            <summary>
            Contains the message that corresponds to the response code.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.FileReport.MD5">
            <summary>
            MD5 hash of the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.FileReport.Permalink">
            <summary>
            A permanent link that points to this specific scan.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.FileReport.Positives">
            <summary>
            How many engines flagged this resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.FileReport.Resource">
            <summary>
            Contains the id of the resource. Can be a SHA256, MD5 or other hash type.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.FileReport.ScanDate">
            <summary>
            The date the resource was last scanned.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.FileReport.ScanId">
            <summary>
            Contains the scan id for this result.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.FileReport.Scans">
            <summary>
            The scan results from each engine.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.FileReport.SHA1">
            <summary>
            SHA1 hash of the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.FileReport.SHA256">
            <summary>
            SHA256 hash of the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.FileReport.Total">
            <summary>
            How many engines scanned this resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.FileReport.ResponseCode">
            <summary>
            The response code. Use this to determine the status of the report.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.FileReport.VerboseMsg">
            <summary>
            Contains the message that corresponds to the response code.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.IPReport.ResponseCode">
            <summary>
            The response code. Use this to determine the status of the report.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.IPReport.VerboseMsg">
            <summary>
            Contains the message that corresponds to the response code.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.RescanResult.Permalink">
            <summary>
            A unique link to this particular scan result.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.RescanResult.Resource">
            <summary>
            Id of the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.RescanResult.ScanId">
            <summary>
            The unique scan id of the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.RescanResult.SHA256">
            <summary>
            SHA256 hash of the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.ScanResult.MD5">
            <summary>
            MD5 hash of the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.ScanResult.Permalink">
            <summary>
            A unique link to this particular scan result.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.ScanResult.Resource">
            <summary>
            Id of the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.ScanResult.ScanId">
            <summary>
            The unique scan id of the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.ScanResult.SHA1">
            <summary>
            SHA256 hash of the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.ScanResult.SHA256">
            <summary>
            SHA256 hash of the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.ScanResult.VerboseMsg">
            <summary>
            Contains the message that corresponds to the response code.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLReport.FileScanId">
            <summary>
            File scan id of the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLReport.Permalink">
            <summary>
            A permanent link that points to this specific scan.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLReport.Positives">
            <summary>
            How many engines flagged this resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLReport.Resource">
            <summary>
            Contains the id of the resource. Can be a SHA256, MD5 or other hash type.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLReport.ScanDate">
            <summary>
            The date the resource was last scanned.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLReport.ScanId">
            <summary>
            Contains the scan id for this result.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLReport.Scans">
            <summary>
            The scan results from each engine.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLReport.Total">
            <summary>
            How many engines scanned this resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLReport.ResponseCode">
            <summary>
            The response code. Use this to determine the status of the report.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLReport.VerboseMsg">
            <summary>
            Contains the message that corresponds to the response code.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLScanResult.Permalink">
            <summary>
            A unique link to this particular scan result.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLScanResult.Resource">
            <summary>
            The resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLScanResult.ScanId">
            <summary>
            The unique scan id of the resource.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Security.URLScanResult.VerboseMsg">
            <summary>
            Contains the message that corresponds to the response code.
            </summary>
        </member>
        <member name="T:ExtendedControls.Base.Code.Security.CustomURLEncodedContent">
            <summary>
            I use this class instead of FormUrlEncodedContent due to a bug in .NET core regarding the length of values
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Settings.SettingsManager.SetDebugMode(System.Boolean)">
            <summary>
            Sets the debug mode.
            </summary>
            <param name="debugMode">if set to <c>true</c> [debug mode].</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Settings.SettingsManager.GetDebugMode">
            <summary>
            Gets the debug mode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Settings.SettingsManager.SetPaletteExplorerLocation(System.String)">
            <summary>
            Sets the palette explorer location.
            </summary>
            <param name="paletteExplorerLocation">The palette explorer location.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Settings.SettingsManager.GetPaletteExplorerLocation">
            <summary>
            Gets the palette explorer location.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Settings.SettingsManager.SetGlobalManager(ComponentFactory.Krypton.Toolkit.KryptonManager)">
            <summary>
            Sets the global manager.
            </summary>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Settings.SettingsManager.GetGlobalManager">
            <summary>
            Gets the global manager.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Settings.SettingsManager.SetDefaultTheme(ComponentFactory.Krypton.Toolkit.PaletteMode)">
            <summary>
            Sets the default theme.
            </summary>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Settings.SettingsManager.GetDefaultTheme">
            <summary>
            Gets the default theme.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Settings.SettingsManager.SaveProperties(System.Boolean)">
            <summary>
            Saves the properties.
            </summary>
            <param name="usePrompt">if set to <c>true</c> [use prompt].</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Settings.SettingsManager.ResetSettings(System.Boolean)">
            <summary>
            Resets the settings.
            </summary>
            <param name="usePrompt">if set to <c>true</c> [use prompt].</param>
        </member>
        <member name="T:ExtendedControls.Base.Code.Theming.KryptonPaletteManager">
            <summary>
            This class manages the <see cref="T:ComponentFactory.Krypton.Toolkit.KryptonPalette"/> and its associated colours.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.BaseColour">
            <summary>
            Gets or sets the base colour.
            </summary>
            <value>
            The base colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.DarkColour">
            <summary>
            Gets or sets the dark colour.
            </summary>
            <value>
            The dark colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.MiddleColour">
            <summary>
            Gets or sets the middle colour.
            </summary>
            <value>
            The middle colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.LightColour">
            <summary>
            Gets or sets the light colour.
            </summary>
            <value>
            The light colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.LightestColour">
            <summary>
            Gets or sets the lightest colour.
            </summary>
            <value>
            The lightest colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.BorderColour">
            <summary>
            Gets or sets the border colour.
            </summary>
            <value>
            The border colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.AlternativeNormalTextColour">
            <summary>
            Gets or sets the alternative normal text colour.
            </summary>
            <value>
            The alternative normal text colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.NormalTextColour">
            <summary>
            Gets or sets the normal text colour.
            </summary>
            <value>
            The normal text colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.DiisabledTextColour">
            <summary>
            Gets or sets the diisabled text colour.
            </summary>
            <value>
            The diisabled text colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.FocusedTextColour">
            <summary>
            Gets or sets the focused text colour.
            </summary>
            <value>
            The focused text colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.PressedTextColour">
            <summary>
            Gets or sets the pressed text colour.
            </summary>
            <value>
            The pressed text colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.DisabledColour">
            <summary>
            Gets or sets the disabled colour.
            </summary>
            <value>
            The disabled colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.LinkNormalColour">
            <summary>
            Gets or sets the link normal colour.
            </summary>
            <value>
            The link normal colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.LinkFocusedColour">
            <summary>
            Gets or sets the link focused colour.
            </summary>
            <value>
            The link focused colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.LinkHoverColour">
            <summary>
            Gets or sets the link hover colour.
            </summary>
            <value>
            The link hover colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.LinkVisitedColour">
            <summary>
            Gets or sets the link visited colour.
            </summary>
            <value>
            The link visited colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.CustomColourOne">
            <summary>
            Gets or sets the custom colour one.
            </summary>
            <value>
            The custom colour one.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.CustomColourTwo">
            <summary>
            Gets or sets the custom colour two.
            </summary>
            <value>
            The custom colour two.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.CustomColourThree">
            <summary>
            Gets or sets the custom colour three.
            </summary>
            <value>
            The custom colour three.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.CustomColourFour">
            <summary>
            Gets or sets the custom colour four.
            </summary>
            <value>
            The custom colour four.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.CustomColourFive">
            <summary>
            Gets or sets the custom colour five.
            </summary>
            <value>
            The custom colour five.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.CustomColourSix">
            <summary>
            Gets or sets the custom colour six.
            </summary>
            <value>
            The custom colour six.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.CustomTextColourOne">
            <summary>
            Gets or sets the custom text colour one.
            </summary>
            <value>
            The custom text colour one.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.CustomTextColourTwo">
            <summary>
            Gets or sets the custom text colour two.
            </summary>
            <value>
            The custom text colour two.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.CustomTextColourThree">
            <summary>
            Gets or sets the custom text colour three.
            </summary>
            <value>
            The custom text colour three.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.CustomTextColourFour">
            <summary>
            Gets or sets the custom text colour four.
            </summary>
            <value>
            The custom text colour four.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.CustomTextColourFive">
            <summary>
            Gets or sets the custom text colour five.
            </summary>
            <value>
            The custom text colour five.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.CustomTextColourSix">
            <summary>
            Gets or sets the custom text colour six.
            </summary>
            <value>
            The custom text colour six.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.MenuTextColour">
            <summary>
            Gets or sets the menu text colour.
            </summary>
            <value>
            The menu text colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.StatusTextColour">
            <summary>
            Gets or sets the status text colour.
            </summary>
            <value>
            The status text colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.RibbonTabTextColour">
            <summary>
            Gets or sets the ribbon tab text colour.
            </summary>
            <value>
            The ribbon tab text colour.
            </value>
        </member>
        <member name="P:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>
            The mode.
            </value>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.CreateNewPalette(ComponentFactory.Krypton.Toolkit.KryptonPalette,ComponentFactory.Krypton.Toolkit.PaletteMode,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean)">
            <summary>
            Creates the new palette.
            </summary>
            <param name="palette">The palette.</param>
            <param name="paletteMode">The palette mode.</param>
            <param name="baseColour">The base colour.</param>
            <param name="darkColour">The dark colour.</param>
            <param name="middleColour">The middle colour.</param>
            <param name="lightColour">The light colour.</param>
            <param name="lightestColour">The lightest colour.</param>
            <param name="borderColour">The border colour.</param>
            <param name="alternativeNormalTextColour">The alternative normal text colour.</param>
            <param name="normalTextColour">The normal text colour.</param>
            <param name="disabledTextColour">The disabled text colour.</param>
            <param name="focusedTextColour">The focused text colour.</param>
            <param name="pressedTextColour">The pressed text colour.</param>
            <param name="disabledColour">The disabled colour.</param>
            <param name="linkNormalColour">The link normal colour.</param>
            <param name="linkFocusedColour">The link focused colour.</param>
            <param name="linkHoverColour">The link hover colour.</param>
            <param name="linkVisitedColour">The link visited colour.</param>
            <param name="customColourOne">The custom colour one.</param>
            <param name="customColourTwo">The custom colour two.</param>
            <param name="customColourThree">The custom colour three.</param>
            <param name="customColourFour">The custom colour four.</param>
            <param name="customColourFive">The custom colour five.</param>
            <param name="customColourSix">The custom colour six.</param>
            <param name="customTextColourOne">The custom text colour one.</param>
            <param name="customTextColourTwo">The custom text colour two.</param>
            <param name="customTextColourThree">The custom text colour three.</param>
            <param name="customTextColourFour">The custom text colour four.</param>
            <param name="customTextColourFive">The custom text colour five.</param>
            <param name="customTextColourSix">The custom text colour six.</param>
            <param name="menuTextColour">The menu text colour.</param>
            <param name="statusTextColour">The status text colour.</param>
            <param name="ribbonTabTextColour">The ribbon tab text colour.</param>
            <param name="invertColours">if set to <c>true</c> [invert colours].</param>
            <param name="silent">if set to <c>true</c> [silent].</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.PopulateColours(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Populates the colours.
            </summary>
            <param name="baseColour">The base colour.</param>
            <param name="darkColour">The dark colour.</param>
            <param name="middleColour">The middle colour.</param>
            <param name="lightColour">The light colour.</param>
            <param name="lightestColour">The lightest colour.</param>
            <param name="borderColour">The border colour.</param>
            <param name="alternativeNormalTextColour">The alternative normal text colour.</param>
            <param name="normalTextColour">The normal text colour.</param>
            <param name="disabledTextColour">The disabled text colour.</param>
            <param name="focusedTextColour">The focused text colour.</param>
            <param name="pressedTextColour">The pressed text colour.</param>
            <param name="disabledColour">The disabled colour.</param>
            <param name="linkNormalColour">The link normal colour.</param>
            <param name="linkFocusedColour">The link focused colour.</param>
            <param name="linkHoverColour">The link hover colour.</param>
            <param name="linkVisitedColour">The link visited colour.</param>
            <param name="customColourOne">The custom colour one.</param>
            <param name="customColourTwo">The custom colour two.</param>
            <param name="customColourThree">The custom colour three.</param>
            <param name="customColourFour">The custom colour four.</param>
            <param name="customColourFive">The custom colour five.</param>
            <param name="customColourSix">The custom colour six.</param>
            <param name="customTextColourOne">The custom text colour one.</param>
            <param name="customTextColourTwo">The custom text colour two.</param>
            <param name="customTextColourThree">The custom text colour three.</param>
            <param name="customTextColourFour">The custom text colour four.</param>
            <param name="customTextColourFive">The custom text colour five.</param>
            <param name="customTextColourSix">The custom text colour six.</param>
            <param name="menuTextColour">The menu text colour.</param>
            <param name="statusTextColour">The status text colour.</param>
            <param name="ribbonTabTextColour">The ribbon tab text colour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.PopulateColours(ComponentFactory.Krypton.Toolkit.PaletteMode,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Populates the colours.
            </summary>
            <param name="paletteMode">The palette mode.</param>
            <param name="baseColour">The base colour.</param>
            <param name="darkColour">The dark colour.</param>
            <param name="middleColour">The middle colour.</param>
            <param name="lightColour">The light colour.</param>
            <param name="lightestColour">The lightest colour.</param>
            <param name="borderColour">The border colour.</param>
            <param name="alternativeNormalTextColour">The alternative normal text colour.</param>
            <param name="normalTextColour">The normal text colour.</param>
            <param name="disabledTextColour">The disabled text colour.</param>
            <param name="focusedTextColour">The focused text colour.</param>
            <param name="pressedTextColour">The pressed text colour.</param>
            <param name="disabledColour">The disabled colour.</param>
            <param name="linkNormalColour">The link normal colour.</param>
            <param name="linkFocusedColour">The link focused colour.</param>
            <param name="linkHoverColour">The link hover colour.</param>
            <param name="linkVisitedColour">The link visited colour.</param>
            <param name="customColourOne">The custom colour one.</param>
            <param name="customColourTwo">The custom colour two.</param>
            <param name="customColourThree">The custom colour three.</param>
            <param name="customColourFour">The custom colour four.</param>
            <param name="customColourFive">The custom colour five.</param>
            <param name="customColourSix">The custom colour six.</param>
            <param name="customTextColourOne">The custom text colour one.</param>
            <param name="customTextColourTwo">The custom text colour two.</param>
            <param name="customTextColourThree">The custom text colour three.</param>
            <param name="customTextColourFour">The custom text colour four.</param>
            <param name="customTextColourFive">The custom text colour five.</param>
            <param name="customTextColourSix">The custom text colour six.</param>
            <param name="menuTextColour">The menu text colour.</param>
            <param name="statusTextColour">The status text colour.</param>
            <param name="ribbonTabTextColour">The ribbon tab text colour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.PopulateColours(ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox,ExtendedControls.ExtendedToolkit.Controls.CircularPictureBox)">
            <summary>
            Populates the colours.
            </summary>
            <param name="baseColour">The base colour.</param>
            <param name="darkColour">The dark colour.</param>
            <param name="middleColour">The middle colour.</param>
            <param name="lightColour">The light colour.</param>
            <param name="lightestColour">The lightest colour.</param>
            <param name="borderColour">The border colour.</param>
            <param name="alternativeNormalTextColour">The alternative normal text colour.</param>
            <param name="normalTextColour">The normal text colour.</param>
            <param name="disabledTextColour">The disabled text colour.</param>
            <param name="focusedTextColour">The focused text colour.</param>
            <param name="pressedTextColour">The pressed text colour.</param>
            <param name="disabledColour">The disabled colour.</param>
            <param name="linkNormalColour">The link normal colour.</param>
            <param name="linkFocusedColour">The link focused colour.</param>
            <param name="linkHoverColour">The link hover colour.</param>
            <param name="linkVisitedColour">The link visited colour.</param>
            <param name="customColourOne">The custom colour one.</param>
            <param name="customColourTwo">The custom colour two.</param>
            <param name="customColourThree">The custom colour three.</param>
            <param name="customColourFour">The custom colour four.</param>
            <param name="customColourFive">The custom colour five.</param>
            <param name="customColourSix">The custom colour six.</param>
            <param name="customTextColourOne">The custom text colour one.</param>
            <param name="customTextColourTwo">The custom text colour two.</param>
            <param name="customTextColourThree">The custom text colour three.</param>
            <param name="customTextColourFour">The custom text colour four.</param>
            <param name="customTextColourFive">The custom text colour five.</param>
            <param name="customTextColourSix">The custom text colour six.</param>
            <param name="menuTextColour">The menu text colour.</param>
            <param name="statusTextColour">The status text colour.</param>
            <param name="ribbonTabTextColour">The ribbon tab text colour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetBaseColour(System.Drawing.Color)">
            <summary>
            Sets the value of BaseColour to value.
            </summary>
            <param name="value">The value of BaseColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetBaseColour">
            <summary>
            Returns the value of BaseColour.
            </summary>
            <returns>The value of BaseColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetDarkColour(System.Drawing.Color)">
            <summary>
            Sets the value of DarkColour to value.
            </summary>
            <param name="value">The value of DarkColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetDarkColour">
            <summary>
            Returns the value of DarkColour.
            </summary>
            <returns>The value of DarkColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetMiddleColour(System.Drawing.Color)">
            <summary>
            Sets the value of MiddleColour to value.
            </summary>
            <param name="value">The value of MiddleColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetMiddleColour">
            <summary>
            Returns the value of MiddleColour.
            </summary>
            <returns>The value of MiddleColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetLightColour(System.Drawing.Color)">
            <summary>
            Sets the value of LightColour to value.
            </summary>
            <param name="value">The value of LightColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetLightColour">
            <summary>
            Returns the value of LightColour.
            </summary>
            <returns>The value of LightColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetLightestColour(System.Drawing.Color)">
            <summary>
            Sets the value of LightestColour to value.
            </summary>
            <param name="value">The value of LightestColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetLightestColour">
            <summary>
            Returns the value of LightestColour.
            </summary>
            <returns>The value of LightestColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetBorderColour(System.Drawing.Color)">
            <summary>
            Sets the value of BorderColour to value.
            </summary>
            <param name="value">The value of BorderColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetBorderColour">
            <summary>
            Returns the value of BorderColour.
            </summary>
            <returns>The value of BorderColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetAlternativeNormalTextColour(System.Drawing.Color)">
            <summary>
            Sets the value of AlternativeNormalTextColour to value.
            </summary>
            <param name="value">The value of AlternativeNormalTextColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetAlternativeNormalTextColour">
            <summary>
            Returns the value of AlternativeNormalTextColour.
            </summary>
            <returns>The value of AlternativeNormalTextColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetNormalTextColour(System.Drawing.Color)">
            <summary>
            Sets the value of NormalTextColour to value.
            </summary>
            <param name="value">The value of NormalTextColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetNormalTextColour">
            <summary>
            Returns the value of NormalTextColour.
            </summary>
            <returns>The value of NormalTextColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetDisabledTextColour(System.Drawing.Color)">
            <summary>
            Sets the value of DisabledTextColour to value.
            </summary>
            <param name="value">The value of DisabledTextColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetDisabledTextColour">
            <summary>
            Returns the value of DisabledTextColour.
            </summary>
            <returns>The value of DisabledTextColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetFocusedTextColour(System.Drawing.Color)">
            <summary>
            Sets the value of FocusedTextColour to value.
            </summary>
            <param name="value">The value of FocusedTextColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetFocusedTextColour">
            <summary>
            Returns the value of FocusedTextColour.
            </summary>
            <returns>The value of FocusedTextColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetPressedTextColour(System.Drawing.Color)">
            <summary>
            Sets the value of PressedTextColour to value.
            </summary>
            <param name="value">The value of PressedTextColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetPressedTextColour">
            <summary>
            Returns the value of PressedTextColour.
            </summary>
            <returns>The value of PressedTextColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetDisabledColour(System.Drawing.Color)">
            <summary>
            Sets the value of DisabledColour to value.
            </summary>
            <param name="value">The value of DisabledColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetDisabledColour">
            <summary>
            Returns the value of DisabledColour.
            </summary>
            <returns>The value of DisabledColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetLinkNormalColour(System.Drawing.Color)">
            <summary>
            Sets the value of LinkNormalColour to value.
            </summary>
            <param name="value">The value of LinkNormalColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetLinkNormalColour">
            <summary>
            Returns the value of LinkNormalColour.
            </summary>
            <returns>The value of LinkNormalColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetLinkFocusedColour(System.Drawing.Color)">
            <summary>
            Sets the value of LinkFocusedColour to value.
            </summary>
            <param name="value">The value of LinkFocusedColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetLinkFocusedColour">
            <summary>
            Returns the value of LinkFocusedColour.
            </summary>
            <returns>The value of LinkFocusedColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetLinkHoverColour(System.Drawing.Color)">
            <summary>
            Sets the value of LinkHoverColour to value.
            </summary>
            <param name="value">The value of LinkHoverColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetLinkHoverColour">
            <summary>
            Returns the value of LinkHoverColour.
            </summary>
            <returns>The value of LinkHoverColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetLinkVisitedColour(System.Drawing.Color)">
            <summary>
            Sets the value of LinkVisitedColour to value.
            </summary>
            <param name="value">The value of LinkVisitedColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetLinkVisitedColour">
            <summary>
            Returns the value of LinkVisitedColour.
            </summary>
            <returns>The value of LinkVisitedColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetCustomColourOne(System.Drawing.Color)">
            <summary>
            Sets the value of CustomColourOne to value.
            </summary>
            <param name="value">The value of CustomColourOne.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetCustomColourOne">
            <summary>
            Returns the value of CustomColourOne.
            </summary>
            <returns>The value of CustomColourOne.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetCustomColourTwo(System.Drawing.Color)">
            <summary>
            Sets the value of CustomColourTwo to value.
            </summary>
            <param name="value">The value of CustomColourTwo.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetCustomColourTwo">
            <summary>
            Returns the value of CustomColourTwo.
            </summary>
            <returns>The value of CustomColourTwo.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetCustomColourThree(System.Drawing.Color)">
            <summary>
            Sets the value of CustomColourThree to value.
            </summary>
            <param name="value">The value of CustomColourThree.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetCustomColourThree">
            <summary>
            Returns the value of CustomColourThree.
            </summary>
            <returns>The value of CustomColourThree.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetCustomColourFour(System.Drawing.Color)">
            <summary>
            Sets the value of CustomColourFour to value.
            </summary>
            <param name="value">The value of CustomColourFour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetCustomColourFour">
            <summary>
            Returns the value of CustomColourFour.
            </summary>
            <returns>The value of CustomColourFour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetCustomColourFive(System.Drawing.Color)">
            <summary>
            Sets the value of CustomColourFive to value.
            </summary>
            <param name="value">The value of CustomColourFive.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetCustomColourFive">
            <summary>
            Returns the value of CustomColourFive.
            </summary>
            <returns>The value of CustomColourFive.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetCustomColourSix(System.Drawing.Color)">
            <summary>
            Sets the value of CustomColourSix to value.
            </summary>
            <param name="value">The value of CustomColourSix.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetCustomColourSix">
            <summary>
            Returns the value of CustomColourSix.
            </summary>
            <returns>The value of CustomColourSix.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetCustomTextColourOne(System.Drawing.Color)">
            <summary>
            Sets the value of CustomTextColourOne to value.
            </summary>
            <param name="value">The value of CustomTextColourOne.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetCustomTextColourOne">
            <summary>
            Returns the value of CustomTextColourOne.
            </summary>
            <returns>The value of CustomTextColourOne.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetCustomTextColourTwo(System.Drawing.Color)">
            <summary>
            Sets the value of CustomTextColourTwo to value.
            </summary>
            <param name="value">The value of CustomTextColourTwo.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetCustomTextColourTwo">
            <summary>
            Returns the value of CustomTextColourTwo.
            </summary>
            <returns>The value of CustomTextColourTwo.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetCustomTextColourThree(System.Drawing.Color)">
            <summary>
            Sets the value of CustomTextColourThree to value.
            </summary>
            <param name="value">The value of CustomTextColourThree.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetCustomTextColourThree">
            <summary>
            Returns the value of CustomTextColourThree.
            </summary>
            <returns>The value of CustomTextColourThree.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetCustomTextColourFour(System.Drawing.Color)">
            <summary>
            Sets the value of CustomTextColourFour to value.
            </summary>
            <param name="value">The value of CustomTextColourFour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetCustomTextColourFour">
            <summary>
            Returns the value of CustomTextColourFour.
            </summary>
            <returns>The value of CustomTextColourFour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetCustomTextColourFive(System.Drawing.Color)">
            <summary>
            Sets the value of CustomTextColourFive to value.
            </summary>
            <param name="value">The value of CustomTextColourFive.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetCustomTextColourFive">
            <summary>
            Returns the value of CustomTextColourFive.
            </summary>
            <returns>The value of CustomTextColourFive.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetCustomTextColourSix(System.Drawing.Color)">
            <summary>
            Sets the value of CustomTextColourSix to value.
            </summary>
            <param name="value">The value of CustomTextColourSix.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetCustomTextColourSix">
            <summary>
            Returns the value of CustomTextColourSix.
            </summary>
            <returns>The value of CustomTextColourSix.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetMenuTextColour(System.Drawing.Color)">
            <summary>
            Sets the value of MenuTextColour to value.
            </summary>
            <param name="value">The value of MenuTextColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetMenuTextColour">
            <summary>
            Returns the value of MenuTextColour.
            </summary>
            <returns>The value of MenuTextColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetStatusTextColour(System.Drawing.Color)">
            <summary>
            Sets the value of StatusTextColour to value.
            </summary>
            <param name="value">The value of StatusTextColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetStatusTextColour">
            <summary>
            Returns the value of StatusTextColour.
            </summary>
            <returns>The value of StatusTextColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetRibbonTabTextColour(System.Drawing.Color)">
            <summary>
            Sets the value of RibbonTabTextColour to value.
            </summary>
            <param name="value">The value of RibbonTabTextColour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetRibbonTabTextColour">
            <summary>
            Returns the value of RibbonTabTextColour.
            </summary>
            <returns>The value of RibbonTabTextColour.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.SetPaletteMode(ComponentFactory.Krypton.Toolkit.PaletteMode)">
            <summary>
            Sets the value of PaletteMode to value.
            </summary>
            <param name="value">The value of PaletteMode.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonPaletteManager.GetPaletteMode">
            <summary>
            Returns the value of PaletteMode.
            </summary>
            <returns>The value of PaletteMode.</returns>
        </member>
        <member name="T:ExtendedControls.Base.Code.Theming.KryptonThemeManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Theming.KryptonThemeManager._supportedThemes">
            <summary>
            The supported themes
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonThemeManager.PropagateThemeArray(System.Collections.ArrayList,System.Boolean)">
            <summary>
            Propagates the theme array.
            </summary>
            <param name="list">The list.</param>
            <param name="sort">if set to <c>true</c> [sort].</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonThemeManager.PropagateThemeComboBox(ComponentFactory.Krypton.Toolkit.KryptonComboBox,System.Collections.ArrayList)">
            <summary>
            Propagates the theme ComboBox.
            </summary>
            <param name="target">The target.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonThemeManager.GetCurrentStyleItemText(ComponentFactory.Krypton.Toolkit.KryptonComboBox)">
            <summary>
            Gets the current style item text.
            </summary>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonThemeManager.SwitchThemeStyle(ComponentFactory.Krypton.Toolkit.PaletteMode,ComponentFactory.Krypton.Toolkit.KryptonManager)">
            <summary>
            Switches the theme style.
            </summary>
            <param name="mode">The mode.</param>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Theming.KryptonThemeManager.GetPaletteMode(System.String)">
            <summary>
            Gets the palette mode.
            </summary>
            <param name="themeName">Name of the theme.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.UAC.UACHandler.ElevateProcessWithAdministrativeRights(System.String)">
            <summary>
            Elevates the application to use administrative privileges. To be used with <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.Controls.KryptonUACElevatedButton"/> or <see cref="T:KryptonExtendedToolkit.ExtendedToolkit.ToolstripControls.ToolStripMenuItemUACSheld"/> button click.
            </summary>
            <param name="processName">The process name that you wish to elevate.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.UAC.UACHandler.GetHasElevateProcessWithAdministrativeRights">
            <summary>
            Checks to see if the current process has launched with administrative rights.
            </summary>
            <remarks>
            Use this method in your 'Load' event.
            </remarks>
            <returns>True if the current process has launched with administrative rights, false if not.</returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Utilities.FileVersionUtility.CaptureAssemblyFileVersion(System.String,System.Boolean)">
            <summary>
            Captures an assembly file version.
            </summary>
            <param name="assemblyPath">The assembly path.</param>
            <param name="showExceptionError">if set to <c>true</c> [show exception error].</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Code.Utilities.Utility.IsWindowsSevenOrAbove">
            <summary>
            Determines whether [is windows seven or above].
            </summary>
            <returns>
              <c>true</c> if [is windows seven or above]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ExtendedControls.Base.Code.Utilities.Msgs">
            <summary>
            Windows Event Messages sent to the WindowProc
            </summary>
        </member>
        <member name="T:ExtendedControls.Base.Code.Windows.BracketType">
            <summary>
            The bracket type.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Windows.BracketType.CURVEDBRACKET">
            <summary>
            Curved brackets '()'.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Windows.BracketType.CURLYBRACKET">
            <summary>
            Curly brackets '{}'.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Windows.BracketType.SQUAREBRACKET">
            <summary>
            Square brackets '[]'.
            </summary>
        </member>
        <member name="F:ExtendedControls.Base.Code.Windows.BracketType.NOBRACKET">
            <summary>
            No bracket.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Windows.WindowHandler.UpdateWindowText(ComponentFactory.Krypton.Toolkit.KryptonForm,System.String,ExtendedControls.Base.Code.Windows.BracketType,System.String)">
            <summary>
            Updates the window text.
            </summary>
            <param name="owner">The owner.</param>
            <param name="extraTitleText">The extra title text.</param>
            <param name="bracketType">Type of the bracket.</param>
            <param name="administratorText">The administrator text.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Windows.WindowHandler.UACElevatedUpdateWindowText(ComponentFactory.Krypton.Toolkit.KryptonForm,System.String,ExtendedControls.Base.Code.Windows.BracketType,System.String)">
            <summary>
            Uacs the elevated update window text.
            </summary>
            <param name="owner">The owner.</param>
            <param name="extraTitleText">The extra title text.</param>
            <param name="bracketType">Type of the bracket.</param>
            <param name="administratorText">The administrator text.</param>
        </member>
        <member name="M:ExtendedControls.Base.Code.Windows.WindowsAPICodePackModel.#ctor">
            <summary>
            Ini
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Code.Windows.WindowsAPICodePackModel.UpdateTaskbarProgressbarValue(Microsoft.WindowsAPICodePack.Taskbar.TaskbarProgressBarState,System.Int32,System.Int32)">
            <summary>
            Updates the taskbar progressbar value.
            </summary>
            <param name="state">The state.</param>
            <param name="currentValue">The current value.</param>
            <param name="maximumValue">The maximum value.</param>
        </member>
        <member name="T:ExtendedControls.Base.Interfaces.IColourEditor">
            <summary>
            Provides functionality required by colour editors that are bindable
            </summary>
        </member>
        <member name="E:ExtendedControls.Base.Interfaces.IColourEditor.ColourChanged">
            <summary>
            Occurs when the <see cref="T:System.Drawing.Color"/> property is changed.
            </summary>
        </member>
        <member name="P:ExtendedControls.Base.Interfaces.IColourEditor.Colour">
            <summary>
            Gets or sets the component colour.
            </summary>
            <value>The component colour.</value>
        </member>
        <member name="T:ExtendedControls.Base.Interfaces.IRibbonMerger">
            <summary>
            The interface used to merge krypton ribbons.
            </summary>
        </member>
        <member name="M:ExtendedControls.Base.Interfaces.IRibbonMerger.Merge(ComponentFactory.Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Function to merge a ribbon with the target ribbon
            </summary>
            <param name="ribbon">The ribbon to merge.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="ribbon"/> parameter is <b>null</b>.</exception>
        </member>
        <member name="M:ExtendedControls.Base.Interfaces.IRibbonMerger.Unmerge(ComponentFactory.Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Function to unmerge the specified ribbon from the target ribbon.
            </summary>
            <param name="ribbon">The ribbon to unmerge.</param>
        </member>
        <member name="M:ExtendedControls.Base.Structs.ColourWheel.HSLColour.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Base.Structs.ColourWheel.HSLColour"/> struct.
            </summary>
            <param name="hue">The hue.</param>
            <param name="saturation">The saturation.</param>
            <param name="luminosity">The luminosity.</param>
        </member>
        <member name="M:ExtendedControls.Base.Structs.ColourWheel.HSLColour.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Base.Structs.ColourWheel.HSLColour"/> struct.
            </summary>
            <param name="colour">The colour.</param>
        </member>
        <member name="M:ExtendedControls.Base.Structs.ColourWheel.HSLColour.SetHue(System.Double)">
            <summary>
            Sets the hue.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:ExtendedControls.Base.Structs.ColourWheel.HSLColour.GetHue">
            <summary>
            Gets the hue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Structs.ColourWheel.HSLColour.SetSatuation(System.Double)">
            <summary>
            Sets the satuation.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:ExtendedControls.Base.Structs.ColourWheel.HSLColour.GetSaturation">
            <summary>
            Gets the saturation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.Base.Structs.ColourWheel.HSLColour.SetLuminosity(System.Double)">
            <summary>
            Sets the luminosity.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:ExtendedControls.Base.Structs.ColourWheel.HSLColour.GetLuminosity">
            <summary>
            Gets the luminosity.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Document">
            <summary>
            A <see cref="!:Scintilla" /> document.
            </summary>
            <remarks>
            This is an opaque type, meaning it can be used by a <see cref="!:Scintilla" /> control but
            otherwise has no public members of its own.
            </remarks>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Document.Empty">
            <summary>
            A read-only field that represents an uninitialized document.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Document.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An object to compare with this instance or null.</param>
            <returns>true if <paramref name="obj" /> is an instance of <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Document" /> and equals the value of this instance; otherwise, false.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Document.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Document.op_Equality(ExtendedControls.Components.ScintillaNET.Classes.Document,ExtendedControls.Components.ScintillaNET.Classes.Document)">
            <summary>
            Determines whether two specified instances of <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Document" /> are equal.
            </summary>
            <param name="a">The first document to compare.</param>
            <param name="b">The second document to compare.</param>
            <returns>true if <paramref name="a" /> equals <paramref name="b" />; otherwise, false.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Document.op_Inequality(ExtendedControls.Components.ScintillaNET.Classes.Document,ExtendedControls.Components.ScintillaNET.Classes.Document)">
            <summary>
            Determines whether two specified instances of <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Document" /> are not equal.
            </summary>
            <param name="a">The first document to compare.</param>
            <param name="b">The second document to compare.</param>
            <returns>true if <paramref name="a" /> does not equal <paramref name="b" />; otherwise, false.</returns>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Indicator">
            <summary>
            Represents an indicator in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Indicator.ValueBit">
            <summary>
            An OR mask to use with <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorValue" /> and <see cref="!:IndicatorFlags.ValueFore" /> to indicate
            that the user-defined indicator value should be treated as a RGB color.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Indicator.ValueMask">
            <summary>
            An AND mask to use with <see cref="M:ExtendedControls.Components.ScintillaNET.Classes.Indicator.ValueAt(System.Int32)" /> to retrieve the user-defined value as a RGB color when being treated as such.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Indicator.End(System.Int32)">
            <summary>
            Given a document position which is filled with this indicator, will return the document position
            where the use of this indicator ends.
            </summary>
            <param name="position">A zero-based document position using this indicator.</param>
            <returns>The zero-based document position where the use of this indicator ends.</returns>
            <remarks>
            Specifying a <paramref name="position" /> which is not filled with this indicator will cause this method
            to return the end position of the range where this indicator is not in use (the negative space). If this
            indicator is not in use anywhere within the document the return value will be 0.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Indicator.Start(System.Int32)">
            <summary>
            Given a document position which is filled with this indicator, will return the document position
            where the use of this indicator starts.
            </summary>
            <param name="position">A zero-based document position using this indicator.</param>
            <returns>The zero-based document position where the use of this indicator starts.</returns>
            <remarks>
            Specifying a <paramref name="position" /> which is not filled with this indicator will cause this method
            to return the start position of the range where this indicator is not in use (the negative space). If this
            indicator is not in use anywhere within the document the return value will be 0.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Indicator.ValueAt(System.Int32)">
            <summary>
            Returns the user-defined value for the indicator at the specified position.
            </summary>
            <param name="position">The zero-based document position to get the indicator value for.</param>
            <returns>The user-defined value at the specified <paramref name="position" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.Alpha">
            <summary>
            Gets or sets the alpha transparency of the indicator.
            </summary>
            <returns>
            The alpha transparency ranging from 0 (completely transparent)
            to 255 (no transparency). The default is 30.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.Flags">
            <summary>
            Gets or sets the indicator flags.
            </summary>
            <returns>
            A bitwise combination of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorFlags" /> enumeration.
            The default is <see cref="!:IndicatorFlags.None" />.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.ForeColor">
            <summary>
            Gets or sets the color used to draw an indicator.
            </summary>
            <returns>The Color used to draw an indicator. The default varies.</returns>
            <remarks>Changing the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.ForeColor" /> property will reset the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.HoverForeColor" />.</remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.HoverForeColor" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.HoverForeColor">
            <summary>
            Gets or sets the color used to draw an indicator when the mouse or caret is over an indicator.
            </summary>
            <returns>
            The Color used to draw an indicator.
            By default, the hover style is equal to the regular <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.ForeColor" />.
            </returns>
            <remarks>Changing the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.ForeColor" /> property will reset the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.HoverForeColor" />.</remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.ForeColor" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.HoverStyle">
            <summary>
            Gets or sets the indicator style used when the mouse or caret is over an indicator.
            </summary>
            <returns>
            One of the <see cref="!:ScintillaNET.IndicatorStyle" /> enumeration values.
            By default, the hover style is equal to the regular <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.Style" />.
            </returns>
            <remarks>Changing the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.Style" /> property will reset the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.HoverStyle" />.</remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.Style" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.Index">
            <summary>
            Gets the zero-based indicator index this object represents.
            </summary>
            <returns>The indicator definition index within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.IndicatorCollection" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.OutlineAlpha">
            <summary>
            Gets or sets the alpha transparency of the indicator outline.
            </summary>
            <returns>
            The alpha transparency ranging from 0 (completely transparent)
            to 255 (no transparency). The default is 50.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.Style">
            <summary>
            Gets or sets the indicator style.
            </summary>
            <returns>One of the <see cref="!:ScintillaNET.IndicatorStyle" /> enumeration values. The default varies.</returns>
            <remarks>Changing the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.Style" /> property will reset the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.HoverStyle" />.</remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.HoverStyle" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.Under">
            <summary>
            Gets or sets whether indicators are drawn under or over text.
            </summary>
            <returns>true to draw the indicator under text; otherwise, false. The default is false.</returns>
            <remarks>Drawing indicators under text requires <see cref="!:Phases.One" /> or <see cref="!:Phases.Multiple" /> drawing.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Indicator.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Indicator" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that created this indicator.</param>
            <param name="index">The index of this style within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.IndicatorCollection" /> that created it.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.IndicatorCollection">
            <summary>
            An immutable collection of indicators in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.IndicatorCollection.GetEnumerator">
            <summary>
            Provides an enumerator that iterates through the collection.
            </summary>
            <returns>An object that contains all <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Indicator" /> objects within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.IndicatorCollection" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.IndicatorCollection.Count">
            <summary>
            Gets the number of indicators.
            </summary>
            <returns>The number of indicators in the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.IndicatorCollection" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.IndicatorCollection.Item(System.Int32)">
            <summary>
            Gets an <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Indicator" /> object at the specified index.
            </summary>
            <param name="index">The indicator index.</param>
            <returns>An object representing the indicator at the specified <paramref name="index" />.</returns>
            <remarks>
            Indicators 0 through 7 are used by lexers.
            Indicators 32 through 35 are used for IME.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.IndicatorCollection.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.IndicatorCollection" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that created this collection.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Line">
            <summary>
            Represents a line of text in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Line.EnsureVisible">
            <summary>
            Expands any parent folds to ensure the line is visible.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Line.FoldChildren(ExtendedControls.Components.ScintillaNET.Enumerations.FoldAction)">
            <summary>
            Performs the specified fold action on the current line and all child lines.
            </summary>
            <param name="action">One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.FoldAction" /> enumeration values.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Line.FoldLine(ExtendedControls.Components.ScintillaNET.Enumerations.FoldAction)">
            <summary>
            Performs the specified fold action on the current line.
            </summary>
            <param name="action">One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.FoldAction" /> enumeration values.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Line.GetLastChild(System.Int32)">
            <summary>
            Searches for the next line that has a folding level that is less than or equal to <paramref name="level" />
            and returns the previous line index.
            </summary>
            <param name="level">The level of the line to search for. A value of -1 will use the current line <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.FoldLevel" />.</param>
            <returns>
            The zero-based index of the next line that has a <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.FoldLevel" /> less than or equal
            to <paramref name="level" />. If the current line is a fold point and <paramref name="level"/> is -1 the
            index returned is the last line that would be made visible or hidden by toggling the fold state.
            </returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Line.Goto">
            <summary>
            Navigates the caret to the start of the line.
            </summary>
            <remarks>Any selection is discarded.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Line.MarkerAdd(System.Int32)">
            <summary>
            Adds the specified <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Marker" /> to the line.
            </summary>
            <param name="marker">The zero-based index of the marker to add to the line.</param>
            <returns>A <see cref="T:ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle" /> which can be used to track the line.</returns>
            <remarks>This method does not check if the line already contains the <paramref name="marker" />.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Line.MarkerAddSet(System.UInt32)">
            <summary>
            Adds one or more markers to the line in a single call using a bit mask.
            </summary>
            <param name="markerMask">An unsigned 32-bit value with each bit cooresponding to one of the 32 zero-based <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Margin" /> indexes to add.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Line.MarkerDelete(System.Int32)">
            <summary>
            Removes the specified <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Marker" /> from the line.
            </summary>
            <param name="marker">The zero-based index of the marker to remove from the line or -1 to delete all markers from the line.</param>
            <remarks>If the same marker has been added to the line more than once, this will delete one copy each time it is used.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Line.MarkerGet">
            <summary>
            Returns a bit mask indicating which markers are present on the line.
            </summary>
            <returns>An unsigned 32-bit value with each bit cooresponding to one of the 32 zero-based <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Marker" /> indexes.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Line.MarkerNext(System.UInt32)">
            <summary>
            Efficiently searches from the current line forward to the end of the document for the specified markers.
            </summary>
            <param name="markerMask">An unsigned 32-bit value with each bit cooresponding to one of the 32 zero-based <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Margin" /> indexes.</param>
            <returns>If found, the zero-based line index containing one of the markers in <paramref name="markerMask" />; otherwise, -1.</returns>
            <remarks>For example, the mask for marker index 10 is 1 shifted left 10 times (1 &lt;&lt; 10).</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Line.MarkerPrevious(System.UInt32)">
            <summary>
            Efficiently searches from the current line backward to the start of the document for the specified markers.
            </summary>
            <param name="markerMask">An unsigned 32-bit value with each bit cooresponding to one of the 32 zero-based <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Margin" /> indexes.</param>
            <returns>If found, the zero-based line index containing one of the markers in <paramref name="markerMask" />; otherwise, -1.</returns>
            <remarks>For example, the mask for marker index 10 is 1 shifted left 10 times (1 &lt;&lt; 10).</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Line.ToggleFold">
            <summary>
            Toggles the folding state of the line; expanding or contracting all child lines.
            </summary>
            <remarks>The line must be set as a <see cref="!:ScintillaNET.FoldLevelFlags.Header" />.</remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Classes.Line.ToggleFoldShowText(System.String)"/>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Line.ToggleFoldShowText(System.String)">
            <summary>
            Toggles the folding state of the line; expanding or contracting all child lines, and specifies the text tag to display to the right of the fold.
            </summary>
            <param name="text">The text tag to show to the right of the folded text.</param>
            <remarks>The display of fold text tags are determined by the <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.FoldDisplayTextSetStyle(ExtendedControls.Components.ScintillaNET.Enumerations.FoldDisplayText)" /> method.</remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.FoldDisplayTextSetStyle(ExtendedControls.Components.ScintillaNET.Enumerations.FoldDisplayText)" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.AnnotationLines">
            <summary>
            Gets the number of annotation lines of text.
            </summary>
            <returns>The number of annotation lines.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.AnnotationStyle">
            <summary>
            Gets or sets the style of the annotation text.
            </summary>
            <returns>
            The zero-based index of the annotation text <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Style" /> or 256 when <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.AnnotationStyles" />
            has been used to set individual character styles.
            </returns>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.AnnotationStyles" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.AnnotationStyles">
            <summary>
            Gets or sets an array of style indexes corresponding to each charcter in the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.AnnotationText" />
            so that each character may be individually styled.
            </summary>
            <returns>
            An array of <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Style" /> indexes corresponding with each annotation text character or an uninitialized
            array when <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.AnnotationStyle" /> has been used to set a single style for all characters.
            </returns>
            <remarks>
            <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.AnnotationText" /> must be set prior to setting this property.
            The <paramref name="value" /> specified should have a length equal to the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.AnnotationText" /> length to properly style all characters.
            </remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.AnnotationStyle" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.AnnotationText">
            <summary>
            Gets or sets the line annotation text.
            </summary>
            <returns>A String representing the line annotation text.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.ContractedFoldNext">
            <summary>
            Searches from the current line to find the index of the next contracted fold header.
            </summary>
            <returns>The zero-based line index of the next contracted folder header.</returns>
            <remarks>If the current line is contracted the current line index is returned.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.DisplayIndex">
            <summary>
            Gets the zero-based index of the line as displayed in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control
            taking into consideration folded (hidden) lines.
            </summary>
            <returns>The zero-based display line index.</returns>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DocLineFromVisible(System.Int32)" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.EndPosition">
            <summary>
            Gets the zero-based character position in the document where the line ends (exclusive).
            </summary>
            <returns>The equivalent of <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.Position" /> + <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.Length" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.Expanded">
            <summary>
            Gets or sets the expanded state (not the visible state) of the line.
            </summary>
            <remarks>
            For toggling the fold state of a single line the <see cref="M:ExtendedControls.Components.ScintillaNET.Classes.Line.ToggleFold" /> method should be used.
            This property is useful for toggling the state of many folds without updating the display until finished.
            </remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Classes.Line.ToggleFold" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.FoldLevel">
            <summary>
            Gets or sets the fold level of the line.
            </summary>
            <returns>The fold level ranging from 0 to 4095. The default is 1024.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.FoldLevelFlags">
            <summary>
            Gets or sets the fold level flags.
            </summary>
            <returns>A bitwise combination of the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.FoldLevelFlags" /> enumeration.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.FoldParent">
            <summary>
            Gets the zero-based line index of the first line before the current line that is marked as
            <see cref="!:ScintillaNET.FoldLevelFlags.Header" /> and has a <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.FoldLevel" /> less than the current line.
            </summary>
            <returns>The zero-based line index of the fold parent if present; otherwise, -1.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.Height">
            <summary>
            Gets the height of the line in pixels.
            </summary>
            <returns>The height in pixels of the line.</returns>
            <remarks>Currently all lines are the same height.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.Index">
            <summary>
            Gets the line index.
            </summary>
            <returns>The zero-based line index within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.LineCollection" /> that created it.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.Length">
            <summary>
            Gets the length of the line.
            </summary>
            <returns>The number of characters in the line including any end of line characters.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.MarginStyle">
            <summary>
            Gets or sets the style of the margin text in a <see cref="!:MarginType.Text" /> or <see cref="!:MarginType.RightText" /> margin.
            </summary>
            <returns>
            The zero-based index of the margin text <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Style" /> or 256 when <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.MarginStyles" />
            has been used to set individual character styles.
            </returns>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.MarginStyles" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.MarginStyles">
            <summary>
            Gets or sets an array of style indexes corresponding to each charcter in the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.MarginText" />
            so that each character may be individually styled.
            </summary>
            <returns>
            An array of <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Style" /> indexes corresponding with each margin text character or an uninitialized
            array when <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.MarginStyle" /> has been used to set a single style for all characters.
            </returns>
            <remarks>
            <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.MarginText" /> must be set prior to setting this property.
            The <paramref name="value" /> specified should have a length equal to the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.MarginText" /> length to properly style all characters.
            </remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.MarginStyle" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.MarginText">
            <summary>
            Gets or sets the text displayed in the line margin when the margin type is
            <see cref="!:MarginType.Text" /> or <see cref="!:MarginType.RightText" />.
            </summary>
            <returns>The text displayed in the line margin.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.Position">
            <summary>
            Gets the zero-based character position in the document where the line begins.
            </summary>
            <returns>The document position of the first character in the line.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.Text">
            <summary>
            Gets the line text.
            </summary>
            <returns>A string representing the document line.</returns>
            <remarks>The returned text includes any end of line characters.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.Indentation">
            <summary>
            Sets or gets the line indentation.
            </summary>
            <returns>The indentation measured in character columns, which corresponds to the width of space characters.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.Visible">
            <summary>
            Gets a value indicating whether the line is visible.
            </summary>
            <returns>true if the line is visible; otherwise, false.</returns>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ShowLines(System.Int32,System.Int32)" />
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HideLines(System.Int32,System.Int32)" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Line.WrapCount">
            <summary>
            Gets the number of display lines this line would occupy when wrapping is enabled.
            </summary>
            <returns>The number of display lines needed to wrap the current document line.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Line.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Line" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that created this line.</param>
            <param name="index">The index of this line within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.LineCollection" /> that created it.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.LineCollection">
            <summary>
            An immutable collection of lines of text in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.AdjustLineLength(System.Int32,System.Int32)">
            <summary>
            Adjust the number of CHARACTERS in a line.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.ByteToCharPosition(System.Int32)">
            <summary>
            Converts a BYTE offset to a CHARACTER offset.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.CharLineLength(System.Int32)">
            <summary>
            Returns the number of CHARACTERS in a line.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.CharPositionFromLine(System.Int32)">
            <summary>
            Returns the CHARACTER offset where the line begins.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.Dump">
            <summary>
            Dumps the line buffer to a string.
            </summary>
            <returns>A string representing the line buffer.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.Dump(System.IO.TextWriter)">
            <summary>
            Dumps the line buffer to the specified TextWriter.
            </summary>
            <param name="writer">The writer to use for dumping the line buffer.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.GetCharCount(System.Int32,System.Int32)">
            <summary>
            Gets the number of CHARACTERS int a BYTE range.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.GetCharCount(System.IntPtr,System.Int32,System.Text.Encoding)">
            <summary>
            Gets the number of CHARACTERS in a BYTE range.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.GetEnumerator">
            <summary>
            Provides an enumerator that iterates through the collection.
            </summary>
            <returns>An object that contains all <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Line" /> objects within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.LineCollection" />.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.LineFromCharPosition(System.Int32)">
            <summary>
            Returns the line index containing the CHARACTER position.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.InsertPerLine(System.Int32,System.Int32)">
            <summary>
            Tracks a new line with the given CHARACTER length.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.AllLinesVisible">
            <summary>
            Gets a value indicating whether all the document lines are visible (not hidden).
            </summary>
            <returns>true if all the lines are visible; otherwise, false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.Count">
            <summary>
            Gets the number of lines.
            </summary>
            <returns>The number of lines in the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.LineCollection" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.TextLength">
            <summary>
            Gets the number of CHARACTERS in the document.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Line" /> at the specified zero-based index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Line" /> to get.</param>
            <returns>The <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Line" /> at the specified index.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.LineCollection" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that created this collection.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.PerLine">
            <summary>
            Stuff we track for each line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.PerLine.Start">
            <summary>
            The CHARACTER position where the line begins.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.LineCollection.PerLine.ContainsMultibyte">
            <summary>
            1 if the line contains multibyte (Unicode) characters; -1 if not; 0 if undetermined.
            </summary>
            <remarks>Using an enum instead of Nullable because it uses less memory per line...</remarks>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Margin">
            <summary>
            Represents a margin displayed on the left edge of a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Margin.BackColor">
            <summary>
            Gets or sets the background color of the margin when the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Margin.Type" /> property is set to <see cref="!:MarginType.Color" />.
            </summary>
            <returns>A Color object representing the margin background color. The default is Black.</returns>
            <remarks>Alpha color values are ignored.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Margin.Cursor">
            <summary>
            Gets or sets the mouse cursor style when over the margin.
            </summary>
            <returns>One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.MarginCursor" /> enumeration values. The default is <see cref="!:MarginCursor.Arrow" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Margin.Index">
            <summary>
            Gets the zero-based margin index this object represents.
            </summary>
            <returns>The margin index within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Margin.Sensitive">
            <summary>
            Gets or sets whether the margin is sensitive to mouse clicks.
            </summary>
            <returns>true if the margin is sensitive to mouse clicks; otherwise, false. The default is false.</returns>
            <seealso cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MarginClick" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Margin.Type">
            <summary>
            Gets or sets the margin type.
            </summary>
            <returns>One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.MarginType" /> enumeration values. The default is <see cref="!:MarginType.Symbol" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Margin.Width">
            <summary>
            Gets or sets the width in pixels of the margin.
            </summary>
            <returns>The width of the margin measured in pixels.</returns>
            <remarks>Scintilla assigns various default widths.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Margin.Mask">
            <summary>
            Gets or sets a mask indicating which markers this margin can display.
            </summary>
            <returns>
            An unsigned 32-bit value with each bit cooresponding to one of the 32 zero-based <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Margin" /> indexes.
            The default is 0x1FFFFFF, which is every marker except folder markers (i.e. 0 through 24).
            </returns>
            <remarks>
            For example, the mask for marker index 10 is 1 shifted left 10 times (1 &lt;&lt; 10).
            <see cref="F:ExtendedControls.Components.ScintillaNET.Classes.Marker.MaskFolders" /> is a useful constant for working with just folder margin indexes.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Margin.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Margin" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that created this margin.</param>
            <param name="index">The index of this margin within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection" /> that created it.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection">
            <summary>
            An immutable collection of margins in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection.ClearAllText">
            <summary>
            Removes all text displayed in every <see cref="!:MarginType.Text" /> and <see cref="!:MarginType.RightText" /> margins.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection.GetEnumerator">
            <summary>
            Provides an enumerator that iterates through the collection.
            </summary>
            <returns>An object that contains all <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Margin" /> objects within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection.Capacity">
            <summary>
            Gets or sets the number of margins in the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection" />.
            </summary>
            <returns>The number of margins in the collection. The default is 5.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection.Count">
            <summary>
            Gets the number of margins in the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection" />.
            </summary>
            <returns>The number of margins in the collection.</returns>
            <remarks>This property is kept for convenience. The return value will always be equal to <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection.Capacity" />.</remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection.Capacity" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection.Left">
            <summary>
            Gets or sets the width in pixels of the left margin padding.
            </summary>
            <returns>The left margin padding measured in pixels. The default is 1.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection.Right">
            <summary>
            Gets or sets the width in pixels of the right margin padding.
            </summary>
            <returns>The right margin padding measured in pixels. The default is 1.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Margin" /> object at the specified index.
            </summary>
            <param name="index">The margin index.</param>
            <returns>An object representing the margin at the specified <paramref name="index" />.</returns>
            <remarks>By convention margin 0 is used for line numbers and the two following for symbols.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.MarginCollection" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that created this collection.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Marker">
            <summary>
            Represents a margin marker in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Marker.MaskAll">
            <summary>
            An unsigned 32-bit mask of all <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Margin" /> indexes where each bit cooresponds to a margin index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Marker.MaskFolders">
            <summary>
            An unsigned 32-bit mask of folder <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Margin" /> indexes (25 through 31) where each bit cooresponds to a margin index.
            </summary>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Classes.Margin.Mask" />
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Marker.FolderEnd">
            <summary>
            Folder end marker index. This marker is typically configured to display the <see cref="!:MarkerSymbol.BoxPlusConnected" /> symbol.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Marker.FolderOpenMid">
            <summary>
            Folder open marker index. This marker is typically configured to display the <see cref="!:MarkerSymbol.BoxMinusConnected" /> symbol.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Marker.FolderMidTail">
            <summary>
            Folder mid tail marker index. This marker is typically configured to display the <see cref="!:MarkerSymbol.TCorner" /> symbol.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Marker.FolderTail">
            <summary>
            Folder tail marker index. This marker is typically configured to display the <see cref="!:MarkerSymbol.LCorner" /> symbol.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Marker.FolderSub">
            <summary>
            Folder sub marker index. This marker is typically configured to display the <see cref="!:MarkerSymbol.VLine" /> symbol.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Marker.Folder">
            <summary>
            Folder marker index. This marker is typically configured to display the <see cref="!:MarkerSymbol.BoxPlus" /> symbol.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Marker.FolderOpen">
            <summary>
            Folder open marker index. This marker is typically configured to display the <see cref="!:MarkerSymbol.BoxMinus" /> symbol.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Marker.DefineRgbaImage(System.Drawing.Bitmap)">
            <summary>
            Sets the marker symbol to a custom image.
            </summary>
            <param name="image">The Bitmap to use as a marker symbol.</param>
            <remarks>Calling this method will also update the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Marker.Symbol" /> property to <see cref="!:MarkerSymbol.RgbaImage" />.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Marker.DeleteAll">
            <summary>
            Removes this marker from all lines.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Marker.SetAlpha(System.Int32)">
            <summary>
            Sets the foreground alpha transparency for markers that are drawn in the content area.
            </summary>
            <param name="alpha">The alpha transparency ranging from 0 (completely transparent) to 255 (no transparency).</param>
            <remarks>See the remarks on the <see cref="M:ExtendedControls.Components.ScintillaNET.Classes.Marker.SetBackColor(System.Drawing.Color)" /> method for a full explanation of when a marker can be drawn in the content area.</remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Classes.Marker.SetBackColor(System.Drawing.Color)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Marker.SetBackColor(System.Drawing.Color)">
            <summary>
            Sets the background color of the marker.
            </summary>
            <param name="color">The <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Marker" /> background Color. The default is White.</param>
            <remarks>
            The background color of the whole line will be drawn in the <paramref name="color" /> specified when the marker is not visible
            because it is hidden by a <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Margin.Mask" /> or the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Margin.Width" /> is zero.
            </remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Classes.Marker.SetAlpha(System.Int32)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Marker.SetForeColor(System.Drawing.Color)">
            <summary>
            Sets the foreground color of the marker.
            </summary>
            <param name="color">The <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Marker" /> foreground Color. The default is Black.</param>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Marker.Index">
            <summary>
            Gets the zero-based marker index this object represents.
            </summary>
            <returns>The marker index within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.MarkerCollection" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Marker.Symbol">
            <summary>
            Gets or sets the marker symbol.
            </summary>
            <returns>
            One of the <see cref="!:ScintillaNET.MarkerSymbol" /> enumeration values.
            The default is <see cref="!:ScintillaNET.MarkerSymbol.Circle" />.
            </returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Marker.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Marker" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that created this marker.</param>
            <param name="index">The index of this style within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.MarkerCollection" /> that created it.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.MarkerCollection">
            <summary>
            An immutable collection of markers in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.MarkerCollection.GetEnumerator">
            <summary>
            Provides an enumerator that iterates through the collection.
            </summary>
            <returns>An object for enumerating all <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Marker" /> objects within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.MarkerCollection" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.MarkerCollection.Count">
            <summary>
            Gets the number of markers in the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.MarkerCollection" />.
            </summary>
            <returns>This property always returns 32.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.MarkerCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Marker" /> object at the specified index.
            </summary>
            <param name="index">The marker index.</param>
            <returns>An object representing the marker at the specified <paramref name="index" />.</returns>
            <remarks>Markers 25 through 31 are used by Scintilla for folding.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.MarkerCollection.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.MarkerCollection" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that created this collection.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.NativeMemoryStream">
            <summary>
            Like an UnmanagedMemoryStream execpt it can grow.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.ProjectionEqualityComparer">
            <summary>
            Non-generic class to produce instances of the generic class,
            optionally using type inference.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ProjectionEqualityComparer.Create``2(System.Func{``0,``1})">
            <summary>
            Creates an instance of ProjectionEqualityComparer using the specified projection.
            </summary>
            <typeparam name="TSource">Type parameter for the elements to be compared</typeparam>
            <typeparam name="TKey">Type parameter for the keys to be compared,
            after being projected from the elements</typeparam>
            <param name="projection">Projection to use when determining the key of an element</param>
            <returns>A comparer which will compare elements by projecting 
            each element to its key, and comparing keys</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ProjectionEqualityComparer.Create``2(``0,System.Func{``0,``1})">
            <summary>
            Creates an instance of ProjectionEqualityComparer using the specified projection.
            The ignored parameter is solely present to aid type inference.
            </summary>
            <typeparam name="TSource">Type parameter for the elements to be compared</typeparam>
            <typeparam name="TKey">Type parameter for the keys to be compared,
            after being projected from the elements</typeparam>
            <param name="ignored">Value is ignored - type may be used by type inference</param>
            <param name="projection">Projection to use when determining the key of an element</param>
            <returns>A comparer which will compare elements by projecting
            each element to its key, and comparing keys</returns>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.ProjectionEqualityComparer`1">
            <summary>
            Class generic in the source only to produce instances of the 
            doubly generic class, optionally using type inference.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ProjectionEqualityComparer`1.Create``1(System.Func{`0,``0})">
            <summary>
            Creates an instance of ProjectionEqualityComparer using the specified projection.
            </summary>
            <typeparam name="TKey">Type parameter for the keys to be compared,
            after being projected from the elements</typeparam>
            <param name="projection">Projection to use when determining the key of an element</param>
            <returns>A comparer which will compare elements by projecting each element to its key,
            and comparing keys</returns>        
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.ProjectionEqualityComparer`2">
            <summary>
            Comparer which projects each element of the comparison to a key, and then compares
            those keys using the specified (or default) comparer for the key type.
            </summary>
            <typeparam name="TSource">Type of elements which this comparer 
            will be asked to compare</typeparam>
            <typeparam name="TKey">Type of the key projected
            from the element</typeparam>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ProjectionEqualityComparer`2.#ctor(System.Func{`0,`1})">
            <summary>
            Creates a new instance using the specified projection, which must not be null.
            The default comparer for the projected type is used.
            </summary>
            <param name="projection">Projection to use during comparisons</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ProjectionEqualityComparer`2.#ctor(System.Func{`0,`1},System.Collections.Generic.IEqualityComparer{`1})">
            <summary>
            Creates a new instance using the specified projection, which must not be null.
            </summary>
            <param name="projection">Projection to use during comparisons</param>
            <param name="comparer">The comparer to use on the keys. May be null, in
            which case the default comparer will be used.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ProjectionEqualityComparer`2.Equals(`0,`0)">
            <summary>
            Compares the two specified values for equality by applying the projection
            to each value and then using the equality comparer on the resulting keys. Null
            references are never passed to the projection.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ProjectionEqualityComparer`2.GetHashCode(`0)">
            <summary>
            Produces a hash code for the given value by projecting it and
            then asking the equality comparer to find the hash code of
            the resulting key.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.ScintillaReader">
            <summary>
            Implements a TextReader that reads from a Scintilla control.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.ScintillaReader.DefaultBufferSize">
            <summary>
            Arbitrarily chosen default buffer size
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.ScintillaReader.BufferRemaining">
            <summary>
            Returns the number of buffered characters left to be read.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.ScintillaReader.UnbufferedRemaining">
            <summary>
            Returns the number of unbuffered characters left to be read.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.ScintillaReader.TotalRemaining">
            <summary>
            Returns the total number of characters left to be read.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ScintillaReader.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla)">
            <summary>
            Initializes a new instance of the ScintillaReader class that reads all text from the specified Scintilla control.
            </summary>
            <param name="scintilla">The Scintilla control from which to read.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ScintillaReader.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the ScintillaReader class that reads all text from the specified Scintilla control.
            </summary>
            <param name="scintilla">The Scintilla control from which to read.</param>
            <param name="bufferSize">The number of characters to buffer at a time.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ScintillaReader.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ScintillaReader class that reads a subsection from the specified Scintilla control.
            </summary>
            <param name="scintilla">The Scintilla control from which to read.</param>
            <param name="start">The index of the first character to read.</param>
            <param name="end">The index just past the last character to read.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ScintillaReader.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ScintillaReader class that reads a subsection from the specified Scintilla control.
            </summary>
            <param name="scintilla">The Scintilla control from which to read.</param>
            <param name="start">The index of the first character to read.</param>
            <param name="end">The index just past the last character to read.</param>
            <param name="bufferSize">The number of characters to buffer at a time.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ScintillaReader.Peek">
            <summary>
            Returns the next character to be read from the reader without actually removing it from the stream. Returns -1 if no characters are available.
            </summary>
            <returns>The next character from the input stream, or -1 if no more characters are available.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ScintillaReader.Read">
            <summary>
            Removes a character from the stream and returns it. Returns -1 if no characters are available.
            </summary>
            <returns>The next character from the input stream, or -1 if no more characters are available.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ScintillaReader.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
             Reads a maximum of count characters from the current stream and writes the data to buffer, beginning at index.
            </summary>
            <param name="buffer">The buffer to receive the characters.</param>
            <param name="index">The position in buffer at which to begin writing.</param>
            <param name="count">The maximum number of characters to read.</param>
            <returns>The actual number of characters that have been read. The number will be less than or equal to count.</returns>
            <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
            <exception cref="T:System.ArgumentException">The buffer length minus index is less than count.</exception>
            <exception cref="T:System.ArgumentException">index or count is negative.</exception>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ScintillaReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
            <summary>
             Reads a maximum of count characters from the current stream and writes the data to buffer, beginning at index.
            </summary>
            <param name="buffer">The buffer to receive the characters.</param>
            <param name="index">The position in buffer at which to begin writing.</param>
            <param name="count">The maximum number of characters to read.</param>
            <returns>The actual number of characters that have been read. The number will be less than or equal to count.</returns>
            <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The buffer length minus index is less than count.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index or count is negative.</exception>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.ScintillaReader.BufferNextRegion">
            <summary>
            Fills the buffer with the next section of text.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Selection">
            <summary>
            Represents a selection when there are multiple active selections in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Selection.Anchor">
            <summary>
            Gets or sets the anchor position of the selection.
            </summary>
            <returns>The zero-based document position of the selection anchor.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Selection.AnchorVirtualSpace">
            <summary>
            Gets or sets the amount of anchor virtual space.
            </summary>
            <returns>The amount of virtual space past the end of the line offsetting the selection anchor.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Selection.Caret">
            <summary>
            Gets or sets the caret position of the selection.
            </summary>
            <returns>The zero-based document position of the selection caret.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Selection.CaretVirtualSpace">
            <summary>
            Gets or sets the amount of caret virtual space.
            </summary>
            <returns>The amount of virtual space past the end of the line offsetting the selection caret.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Selection.End">
            <summary>
            Gets or sets the end position of the selection.
            </summary>
            <returns>The zero-based document position where the selection ends.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Selection.Index">
            <summary>
            Gets the selection index.
            </summary>
            <returns>The zero-based selection index within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.SelectionCollection" /> that created it.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Selection.Start">
            <summary>
            Gets or sets the start position of the selection.
            </summary>
            <returns>The zero-based document position where the selection starts.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Selection.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Selection" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that created this selection.</param>
            <param name="index">The index of this selection within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.SelectionCollection" /> that created it.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.SelectionCollection">
            <summary>
            A multiple selection collection.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.SelectionCollection.GetEnumerator">
            <summary>
            Provides an enumerator that iterates through the collection.
            </summary>
            <returns>An object that contains all <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Selection" /> objects within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.SelectionCollection" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.SelectionCollection.Count">
            <summary>
            Gets the number of active selections.
            </summary>
            <returns>The number of selections in the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.SelectionCollection" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.SelectionCollection.IsEmpty">
            <summary>
            Gets a value indicating whether all selection ranges are empty.
            </summary>
            <returns>true if all selection ranges are empty; otherwise, false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.SelectionCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Selection" /> at the specified zero-based index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Selection" /> to get.</param>
            <returns>The <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Selection" /> at the specified index.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.SelectionCollection.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.SelectionCollection" /> class.
            </summary>
            <param name="scintilla"></param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style">
            <summary>
            A style definition in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Default">
            <summary>
            Default style index. This style is used to define properties that all styles receive when calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.StyleClearAll" />.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.LineNumber">
            <summary>
            Line number style index. This style is used for text in line number margins. The background color of this style also
            sets the background color for all margins that do not have any folding mask set.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.CallTip">
            <summary>
            Call tip style index. Only font name, size, foreground color, background color, and character set attributes
            can be used when displaying a call tip.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.IndentGuide">
            <summary>
            Indent guide style index. This style is used to specify the foreground and background colors of <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndentationGuides" />.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BraceLight">
            <summary>
            Brace highlighting style index. This style is used on a brace character when set with the <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BraceHighlight(System.Int32,System.Int32)" /> method
            or the indentation guide when used with the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HighlightGuide" /> property.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BraceBad">
            <summary>
            Bad brace style index. This style is used on an unmatched brace character when set with the <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BraceBadLight(System.Int32)" /> method.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FoldDisplayText">
            <summary>
            Fold text tag style index. This is the style used for drawing text tags attached to folded text when
            <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.FoldDisplayTextSetStyle(ExtendedControls.Components.ScintillaNET.Enumerations.FoldDisplayText)" /> and <see cref="M:ExtendedControls.Components.ScintillaNET.Classes.Line.ToggleFoldShowText(System.String)" /> are used.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Style.CopyTo(ExtendedControls.Components.ScintillaNET.Classes.Style)">
            <summary>
            Copies the current style to another style.
            </summary>
            <param name="destination">The <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Style" /> to which the current style should be copied.</param>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Style.BackColor">
            <summary>
            Gets or sets the background color of the style.
            </summary>
            <returns>A Color object representing the style background color. The default is White.</returns>
            <remarks>Alpha color values are ignored.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Bold">
            <summary>
            Gets or sets whether the style font is bold.
            </summary>
            <returns>true if bold; otherwise, false. The default is false.</returns>
            <remarks>Setting this property affects the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Weight" /> property.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Case">
            <summary>
            Gets or sets the casing used to display the styled text.
            </summary>
            <returns>One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.StyleCase" /> enum values. The default is <see cref="!:StyleCase.Mixed" />.</returns>
            <remarks>This does not affect how text is stored, only displayed.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Style.FillLine">
            <summary>
            Gets or sets whether the remainder of the line is filled with the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Style.BackColor" />
            when this style is used on the last character of a line.
            </summary>
            <returns>true to fill the line; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Font">
            <summary>
            Gets or sets the style font name.
            </summary>
            <returns>The style font name. The default is Verdana.</returns>
            <remarks>Scintilla caches fonts by name so font names and casing should be consistent.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Style.ForeColor">
            <summary>
            Gets or sets the foreground color of the style.
            </summary>
            <returns>A Color object representing the style foreground color. The default is Black.</returns>
            <remarks>Alpha color values are ignored.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Hotspot">
            <summary>
            Gets or sets whether hovering the mouse over the style text exhibits hyperlink behavior.
            </summary>
            <returns>true to use hyperlink behavior; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Index">
            <summary>
            Gets the zero-based style definition index.
            </summary>
            <returns>The style definition index within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.StyleCollection" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Italic">
            <summary>
            Gets or sets whether the style font is italic.
            </summary>
            <returns>true if italic; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Size">
            <summary>
            Gets or sets the size of the style font in points.
            </summary>
            <returns>The size of the style font as a whole number of points. The default is 8.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Style.SizeF">
            <summary>
            Gets or sets the size of the style font in fractoinal points.
            </summary>
            <returns>The size of the style font in fractional number of points. The default is 8.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Underline">
            <summary>
            Gets or sets whether the style is underlined.
            </summary>
            <returns>true if underlined; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Visible">
            <summary>
            Gets or sets whether the style text is visible.
            </summary>
            <returns>true to display the style text; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Weight">
            <summary>
            Gets or sets the style font weight.
            </summary>
            <returns>The font weight. The default is 400.</returns>
            <remarks>Setting this property affects the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Bold" /> property.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.Style.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32)">
            <summary>
            Initializes a new instances of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Style" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that created this style.</param>
            <param name="index">The index of this style within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.StyleCollection" /> that created it.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Ada">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Ada" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ada.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ada.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ada.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ada.Word">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ada.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ada.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ada.Delimiter">
            <summary>
            Delimiter style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ada.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ada.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ada.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ada.CharacterEol">
            <summary>
            Unclosed character EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ada.Illegal">
            <summary>
            Illegal identifier or keyword style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Asm" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.CommentBlock">
            <summary>
            Comment block style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.MathInstruction">
            <summary>
            Math instruction (keword list 1) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.CpuInstruction">
            <summary>
            CPU instruction (keyword list 0) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.Register">
            <summary>
            Register (keyword list 2) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.Directive">
            <summary>
            Directive (keyword list 3) string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.DirectiveOperand">
            <summary>
            Directive operand (keyword list 4) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.ExtInstruction">
            <summary>
            Extended instruction (keyword list 5) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Asm.CommentDirective">
            <summary>
            Comment directive style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic">
            <summary>
            Style constants for use with the <see cref="!:Lexer.BlitzBasic" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Keyword">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Date">
            <summary>
            Date style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Keyword2">
            <summary>
            Keyword list 2 (index 1) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Keyword3">
            <summary>
            Keyword list 3 (index 2) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Keyword4">
            <summary>
            Keyword list 4 (index 3) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Constant">
            <summary>
            Constant style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Asm">
            <summary>
            Inline assembler style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.HexNumber">
            <summary>
            Hexadecimal number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.BinNumber">
            <summary>
            Binary number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.CommentBlock">
            <summary>
            Block comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.DocLine">
            <summary>
            Documentation line style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.DocBlock">
            <summary>
            Documentation block style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BlitzBasic.DocKeyword">
            <summary>
            Documentation keyword style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Batch">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Batch" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Batch.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Batch.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Batch.Word">
            <summary>
            Keyword (list 0) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Batch.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Batch.Hide">
            <summary>
            Hide (@ECHO OFF/ON) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Batch.Command">
            <summary>
            External command (keyword list 1) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Batch.Identifier">
            <summary>
            Identifier string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Batch.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Cpp" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.CommentDoc">
            <summary>
            Documentation comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.Word">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.Uuid">
            <summary>
            UUID style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.Verbatim">
            <summary>
            Verbatim string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.Regex">
            <summary>
            Regular expression style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.CommentLineDoc">
            <summary>
            Documentation comment line style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.Word2">
            <summary>
            Keyword style 2 index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.CommentDocKeyword">
            <summary>
            Comment keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.CommentDocKeywordError">
            <summary>
            Comment keyword error style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.GlobalClass">
            <summary>
            Global class style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.StringRaw">
            <summary>
            Raw string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.TripleVerbatim">
            <summary>
            Triple-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.HashQuotedString">
            <summary>
            Hash-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.PreprocessorComment">
            <summary>
            Preprocessor comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.PreprocessorCommentDoc">
            <summary>
            Preprocessor documentation comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.UserLiteral">
            <summary>
            User-defined literal style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.TaskMarker">
            <summary>
            Task marker style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Cpp.EscapeSequence">
            <summary>
            Escape sequence style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Css">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Css" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Tag">
            <summary>
            Tag style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Class">
            <summary>
            Class style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.PseudoClass">
            <summary>
            Pseudo class style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.UnknownPseudoClass">
            <summary>
            Unknown pseudo class style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.UnknownIdentifier">
            <summary>
            Unknown identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Value">
            <summary>
            Value style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Id">
            <summary>
            ID style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Important">
            <summary>
            Important style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Directive">
            <summary>
            Directive style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.DoubleString">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.SingleString">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Identifier2">
            <summary>
            Identifier style 2 index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Attribute">
            <summary>
            Attribute style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Identifier3">
            <summary>
            Identifier style 3 index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.PseudoElement">
            <summary>
            Pseudo element style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.ExtendedIdentifier">
            <summary>
            Extended identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.ExtendedPseudoClass">
            <summary>
            Extended pseudo class style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.ExtendedPseudoElement">
            <summary>
            Extended pseudo element style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Media">
            <summary>
            Media style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Css.Variable">
            <summary>
            Variable style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Fortran" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.String1">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.String2">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.Word">
            <summary>
            Keyword (list 0) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.Word2">
            <summary>
            Keyword 2 (list 1) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.Word3">
            <summary>
            Keyword 3 (list 2) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.Operator2">
            <summary>
            Operator 2 style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.Label">
            <summary>
            Label string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Fortran.Continuation">
            <summary>
            Continuation style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic">
            <summary>
            Style constants for use with the <see cref="!:Lexer.FreeBasic" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Keyword">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Date">
            <summary>
            Date style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Keyword2">
            <summary>
            Keyword list 2 (index 1) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Keyword3">
            <summary>
            Keyword list 3 (index 2) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Keyword4">
            <summary>
            Keyword list 4 (index 3) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Constant">
            <summary>
            Constant style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Asm">
            <summary>
            Inline assembler style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.HexNumber">
            <summary>
            Hexadecimal number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.BinNumber">
            <summary>
            Binary number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.CommentBlock">
            <summary>
            Block comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.DocLine">
            <summary>
            Documentation line style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.DocBlock">
            <summary>
            Documentation block style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.FreeBasic.DocKeyword">
            <summary>
            Documentation keyword style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Html">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Html" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.Default">
            <summary>
            Content style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.Tag">
            <summary>
            Tag style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.TagUnknown">
            <summary>
            Unknown tag style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.Attribute">
            <summary>
            Attribute style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.AttributeUnknown">
            <summary>
            Unknown attribute style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.DoubleString">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.SingleString">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.Other">
            <summary>
            Other tag content (not elements or attributes) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.Entity">
            <summary>
            Entity ($nnn;) name style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.TagEnd">
            <summary>
            End-tag style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.XmlStart">
            <summary>
            Start of XML declaration (&lt;?xml&gt;) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.XmlEnd">
            <summary>
            End of XML declaration (?&gt;) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.Script">
            <summary>
            Script tag (&lt;script&gt;) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.Asp">
            <summary>
            ASP-like script engine block (&lt;%) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.AspAt">
            <summary>
            ASP-like language declaration (&lt;%@) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.CData">
            <summary>
            CDATA section style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.Question">
            <summary>
            Question mark style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.Value">
            <summary>
            Value style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Html.XcComment">
            <summary>
            Script engine comment (&lt;%--) style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.JavaScript">
            <summary>
            Embedded JavaScript style constants for use with the <see cref="!:Lexer.Html" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.JavaScript.Start">
            <summary>
            Start style index (allows EOL filled background to not start on same line as SCRIPT tag).
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.JavaScript.Default">
            <summary>
            Default style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.JavaScript.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.JavaScript.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.JavaScript.CommentDoc">
            <summary>
            Doc comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.JavaScript.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.JavaScript.Word">
            <summary>
            Word style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.JavaScript.Keyword">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.JavaScript.DoubleString">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.JavaScript.SingleString">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.JavaScript.Symbols">
            <summary>
            Symbols style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.JavaScript.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.JavaScript.Regex">
            <summary>
            Regular expression style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Json">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Json" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Json.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Json.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Json.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Json.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Json.PropertyName">
            <summary>
            Property name style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Json.EscapeSequence">
            <summary>
            Escape sequence style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Json.LineComment">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Json.BlockComment">
            <summary>
            Block comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Json.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Json.Uri">
            <summary>
            URI style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Json.CompactIRI">
            <summary>
            Compact Internationalized Resource Identifier (IRI) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Json.Keyword">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Json.LdKeyword">
            <summary>
            Linked data (LD) keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Json.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Lisp">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Lisp" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lisp.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lisp.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lisp.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lisp.Keyword">
            <summary>
            Functions and special operators (list 0) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lisp.KeywordKw">
            <summary>
            Keywords (list 1) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lisp.Symbol">
            <summary>
            Symbol style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lisp.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lisp.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lisp.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lisp.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lisp.Special">
            <summary>
            Special character style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lisp.MultiComment">
            <summary>
            Multi-line comment style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Lua" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Default">
            <summary>
            Default style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.CommentDoc">
            <summary>
            Documentation comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Word">
            <summary>
            Keyword list 1 (index 0) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.LiteralString">
            <summary>
            Literal string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Word2">
            <summary>
            Keywords list 2 (index 1) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Word3">
            <summary>
            Keywords list 3 (index 2) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Word4">
            <summary>
            Keywords list 4 (index 3) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Word5">
            <summary>
            Keywords list 5 (index 4) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Word6">
            <summary>
            Keywords list 6 (index 5) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Word7">
            <summary>
            Keywords list 7 (index 6) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Word8">
            <summary>
            Keywords list 8 (index 7) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Lua.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Matlab">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Matlab" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Matlab.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Matlab.Comment">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Matlab.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Matlab.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Matlab.Command">
            <summary>
            Command style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Matlab.Keyword">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Matlab.DoubleQuoteString">
            <summary>
            Double quote string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Matlab.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Matlab.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Pascal" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.Default">
            <summary>
            Default style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.Comment">
            <summary>
            Comment style '{' index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.Comment2">
            <summary>
            Comment style 2 "(*" index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.CommentLine">
            <summary>
            Comment line style "//" index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.Preprocessor">
            <summary>
            Preprocessor style "{$" index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.Preprocessor2">
            <summary>
            Preprocessor style 2 "(*$" index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.HexNumber">
            <summary>
            Hexadecimal number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.Word">
            <summary>
            Word (keyword set 0) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Pascal.Asm">
            <summary>
            Assembly style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Perl" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Pod">
            <summary>
            POD style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Word">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Punctuation">
            <summary>
            Punctuation style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Scalar">
            <summary>
            Scalar style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Array">
            <summary>
            Array style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Hash">
            <summary>
            Hash style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.SymbolTable">
            <summary>
            Symbol table style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.VariableIndexer">
            <summary>
            Variable indexer index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Regex">
            <summary>
            Regular expression style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.RegSubst">
            <summary>
            RegSubst style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.BackTicks">
            <summary>
            Backtick (grave accent, backquote) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.DataSection">
            <summary>
            Data section style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.HereDelim">
            <summary>
            HereDoc delimiter style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.HereQ">
            <summary>
            HereDoc single-quote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.HereQq">
            <summary>
            HereDoc double-quote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.HereQx">
            <summary>
            HereDoc backtick style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.StringQ">
            <summary>
            Q quote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.StringQq">
            <summary>
            QQ quote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.StringQx">
            <summary>
            QZ quote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.StringQr">
            <summary>
            QR quote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.StringQw">
            <summary>
            QW quote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.PodVerb">
            <summary>
            POD verbatim style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.SubPrototype">
            <summary>
            Subroutine prototype style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.FormatIdent">
            <summary>
            Format identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.Format">
            <summary>
            Format style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.StringVar">
            <summary>
            String variable style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.XLat">
            <summary>
            XLAT style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.RegexVar">
            <summary>
            Regular expression variable style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.RegSubstVar">
            <summary>
            RegSubst variable style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.BackticksVar">
            <summary>
            Backticks variable style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.HereQqVar">
            <summary>
            HereDoc QQ quote variable style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.HereQxVar">
            <summary>
            HereDoc QX quote variable style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.StringQqVar">
            <summary>
            QQ quote variable style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.StringQxVar">
            <summary>
            QX quote variable style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Perl.StringQrVar">
            <summary>
            QR quote variable style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.PhpScript">
            <summary>
            Style constants for use with the <see cref="!:Lexer.PhpScript" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PhpScript.ComplexVariable">
            <summary>
            Complex Variable style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PhpScript.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PhpScript.HString">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PhpScript.SimpleString">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PhpScript.Word">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PhpScript.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PhpScript.Variable">
            <summary>
            Variable style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PhpScript.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PhpScript.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PhpScript.HStringVariable">
            <summary>
            Double-quoted string variable style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PhpScript.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell">
            <summary>
            Style constants for use with the <see cref="!:Lexer.PowerShell" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.Comment">
            <summary>
            Line comment style index
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.Character">
            <summary>
            Character style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.Variable">
            <summary>
            Variable style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.Keyword">
            <summary>
            Keyword (set 0) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.Cmdlet">
            <summary>
            Cmdlet (set 1) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.Alias">
            <summary>
            Alias (set 2) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.Function">
            <summary>
            Function (set 3) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.User1">
            <summary>
            User word (set 4) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.CommentStream">
            <summary>
            Multi-line comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.HereString">
            <summary>
            Here string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.HereCharacter">
            <summary>
            Here character style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PowerShell.CommentDocKeyword">
            <summary>
            Comment based help keyword style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Properties">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Properties" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Properties.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Properties.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Properties.Section">
            <summary>
            Section style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Properties.Assignment">
            <summary>
            Assignment operator index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Properties.DefVal">
            <summary>
            Default (registry-only) value index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Properties.Key">
            <summary>
            Key style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic">
            <summary>
            Style constants for use with the <see cref="!:Lexer.PureBasic" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Keyword">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Date">
            <summary>
            Date style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Keyword2">
            <summary>
            Keyword list 2 (index 1) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Keyword3">
            <summary>
            Keyword list 3 (index 2) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Keyword4">
            <summary>
            Keyword list 4 (index 3) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Constant">
            <summary>
            Constant style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Asm">
            <summary>
            Inline assembler style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.HexNumber">
            <summary>
            Hexadecimal number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.BinNumber">
            <summary>
            Binary number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.CommentBlock">
            <summary>
            Block comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.DocLine">
            <summary>
            Documentation line style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.DocBlock">
            <summary>
            Documentation block style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.PureBasic.DocKeyword">
            <summary>
            Documentation keyword style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Python">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Python" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.Character">
            <summary>
            Single-quote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.Word">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.Triple">
            <summary>
            Triple single-quote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.TripleDouble">
            <summary>
            Triple double-quote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.ClassName">
            <summary>
            Class name style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.DefName">
            <summary>
            Function or method name style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.CommentBlock">
            <summary>
            Block comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.Word2">
            <summary>
            Keyword style 2 index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Python.Decorator">
            <summary>
            Decorator style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Ruby" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.Pod">
            <summary>
            POD style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.Word">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.ClassName">
            <summary>
            Class name style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.DefName">
            <summary>
            Definition style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.Regex">
            <summary>
            Regular expression style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.Global">
            <summary>
            Global style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.Symbol">
            <summary>
            Symbol style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.ModuleName">
            <summary>
            Module name style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.InstanceVar">
            <summary>
            Instance variable style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.ClassVar">
            <summary>
            Class variable style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.BackTicks">
            <summary>
            Backticks style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.DataSection">
            <summary>
            Data section style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.HereDelim">
            <summary>
            HereDoc delimiter style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.HereQ">
            <summary>
            HereDoc Q quote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.HereQq">
            <summary>
            HereDoc QQ quote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.HereQx">
            <summary>
            HereDoc QX quote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.StringQ">
            <summary>
            Q quote string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.StringQq">
            <summary>
            QQ quote string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.StringQx">
            <summary>
            QX quote string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.StringQr">
            <summary>
            QR quote string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.StringQw">
            <summary>
            QW quote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.WordDemoted">
            <summary>
            Demoted keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.StdIn">
            <summary>
            Standard-in style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.StdOut">
            <summary>
            Standard-out style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Ruby.StdErr">
            <summary>
            Standard-error style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Smalltalk" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.Symbol">
            <summary>
            Symbol style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.Binary">
            <summary>
            Binary style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.Bool">
            <summary>
            Bool style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.Self">
            <summary>
            Self style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.Super">
            <summary>
            Super style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.Nil">
            <summary>
            NIL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.Global">
            <summary>
            Global style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.Return">
            <summary>
            Return style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.Special">
            <summary>
            Special style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.KwsEnd">
            <summary>
            KWS End style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.Assign">
            <summary>
            Assign style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Smalltalk.SpecSel">
            <summary>
            Special selector style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Sql" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.CommentLine">
            <summary>
            Line comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.CommentDoc">
            <summary>
            Documentation comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.Word">
            <summary>
            Keyword list 1 (index 0) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.Character">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.SqlPlus">
            <summary>
            Keyword from the SQL*Plus list (index 3) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.SqlPlusPrompt">
            <summary>
            SQL*Plus prompt style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.SqlPlusComment">
            <summary>
            SQL*Plus comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.CommentLineDoc">
            <summary>
            Documentation line comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.Word2">
            <summary>
            Keyword list 2 (index 1) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.CommentDocKeyword">
            <summary>
            Documentation (Doxygen) keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.CommentDocKeywordError">
            <summary>
            Documentation (Doxygen) keyword error style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.User1">
            <summary>
            Keyword user-list 1 (index 4) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.User2">
            <summary>
            Keyword user-list 2 (index 5) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.User3">
            <summary>
            Keyword user-list 3 (index 6) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.User4">
            <summary>
            Keyword user-list 4 (index 7) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.QuotedIdentifier">
            <summary>
            Quoted identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Sql.QOperator">
            <summary>
            Q operator style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Markdown" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Default">
            <summary>
            Default text style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.LineBegin">
            <summary>
            Line begin style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Strong1">
            <summary>
            Strong type 1 style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Strong2">
            <summary>
            Strong type 2 style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Em1">
            <summary>
            Empasis type 1 style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Em2">
            <summary>
            Empasis type 2 style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Header1">
            <summary>
            Header type 1 style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Header2">
            <summary>
            Header type 2 style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Header3">
            <summary>
            Header type 3 style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Header4">
            <summary>
            Header type 4 style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Header5">
            <summary>
            Header type 5 style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Header6">
            <summary>
            Header type 6 style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.PreChar">
            <summary>
            Pre char style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.UListItem">
            <summary>
            Unordered list style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.OListItem">
            <summary>
            Ordered list style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.BlockQuote">
            <summary>
            Blockquote style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Strikeout">
            <summary>
            Strikeout style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.HRule">
            <summary>
            Horizontal rule style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Link">
            <summary>
            Link style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Code">
            <summary>
            Code type 1 style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.Code2">
            <summary>
            Code type 2 style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Markdown.CodeBk">
            <summary>
            Code block style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.R">
            <summary>
            Style constants for use with the <see cref="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.R" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.R.Default">
            <summary>
            Default style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.R.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.R.KWord">
            <summary>
            Keyword (set 0) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.R.BaseKWord">
            <summary>
            Base keyword (set 1) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.R.OtherKWord">
            <summary>
            Other keyword (set 2) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.R.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.R.String">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.R.String2">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.R.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.R.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.R.Infix">
            <summary>
            Infix style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.R.InfixEol">
            <summary>
            Unclosed infix EOL style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Vb" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Keyword">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Date">
            <summary>
            Date style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Keyword2">
            <summary>
            Keyword list 2 (index 1) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Keyword3">
            <summary>
            Keyword list 3 (index 2) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Keyword4">
            <summary>
            Keyword list 4 (index 3) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Constant">
            <summary>
            Constant style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Asm">
            <summary>
            Inline assembler style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.HexNumber">
            <summary>
            Hexadecimal number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.BinNumber">
            <summary>
            Binary number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.CommentBlock">
            <summary>
            Block comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.DocLine">
            <summary>
            Documentation line style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.DocBlock">
            <summary>
            Documentation block style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Vb.DocKeyword">
            <summary>
            Documentation keyword style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript">
            <summary>
            Style constants for use with the <see cref="!:Lexer.VbScript" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Keyword">
            <summary>
            Keyword style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Date">
            <summary>
            Date style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Keyword2">
            <summary>
            Keyword list 2 (index 1) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Keyword3">
            <summary>
            Keyword list 3 (index 2) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Keyword4">
            <summary>
            Keyword list 4 (index 3) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Constant">
            <summary>
            Constant style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Asm">
            <summary>
            Inline assembler style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Label">
            <summary>
            Label style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.Error">
            <summary>
            Error style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.HexNumber">
            <summary>
            Hexadecimal number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.BinNumber">
            <summary>
            Binary number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.CommentBlock">
            <summary>
            Block comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.DocLine">
            <summary>
            Documentation line style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.DocBlock">
            <summary>
            Documentation block style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.VbScript.DocKeyword">
            <summary>
            Documentation keyword style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Verilog" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.Default">
            <summary>
            Default (whitespace) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.CommentLine">
            <summary>
            Comment line style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.CommentLineBang">
            <summary>
            Comment line bang (exclamation) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.Word">
            <summary>
            Keyword (set 0) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.String">
            <summary>
            String style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.Word2">
            <summary>
            Keyword (set 1) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.Word3">
            <summary>
            Keyword (set 2) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.Preprocessor">
            <summary>
            Preprocessor style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.Operator">
            <summary>
            Operator style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.Identifier">
            <summary>
            Identifier style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.StringEol">
            <summary>
            Unclosed string EOL style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.User">
            <summary>
            User word (set 3) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.CommentWord">
            <summary>
            Comment word (set 4) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.Input">
            <summary>
            Input style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.Output">
            <summary>
            Output style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.InOut">
            <summary>
            In-out style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Verilog.PortConnect">
            <summary>
            Port connect style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml">
            <summary>
            Style constants for use with the <see cref="!:Lexer.Xml" /> lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.Default">
            <summary>
            Content style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.Tag">
            <summary>
            Tag style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.TagUnknown">
            <summary>
            Unknown tag style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.Attribute">
            <summary>
            Attribute style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.AttributeUnknown">
            <summary>
            Unknown attribute style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.Number">
            <summary>
            Number style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.DoubleString">
            <summary>
            Double-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.SingleString">
            <summary>
            Single-quoted string style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.Other">
            <summary>
            Other tag content (not elements or attributes) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.Comment">
            <summary>
            Comment style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.Entity">
            <summary>
            Entity ($nnn;) name style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.TagEnd">
            <summary>
            End-tag style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.XmlStart">
            <summary>
            Start of XML declaration (&lt;?xml&gt;) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.XmlEnd">
            <summary>
            End of XML declaration (?&gt;) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.Script">
            <summary>
            Script tag (&lt;script&gt;) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.Asp">
            <summary>
            ASP-like script engine block (&lt;%) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.AspAt">
            <summary>
            ASP-like language declaration (&lt;%@) style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.CData">
            <summary>
            CDATA section style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.Question">
            <summary>
            Question mark style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.Value">
            <summary>
            Value style index.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Xml.XcComment">
            <summary>
            Script engine comment (&lt;%--) style index.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Classes.StyleCollection">
            <summary>
            An immutable collection of style definitions in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.StyleCollection.GetEnumerator">
            <summary>
            Provides an enumerator that iterates through the collection.
            </summary>
            <returns>An object that contains all <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Style" /> objects within the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.StyleCollection" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.StyleCollection.Count">
            <summary>
            Gets the number of styles.
            </summary>
            <returns>The number of styles in the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.StyleCollection" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Classes.StyleCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Style" /> object at the specified index.
            </summary>
            <param name="index">The style definition index.</param>
            <returns>An object representing the style definition at the specified <paramref name="index" />.</returns>
            <remarks>Styles 32 through 39 have special significance.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Classes.StyleCollection.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.StyleCollection" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that created this collection.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla">
            <summary>
            Represents a Scintilla editor control.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TimeForever">
            <summary>
            A constant used to specify an infinite mouse dwell wait time.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.InvalidPosition">
            <summary>
            A constant used to specify an invalid document position.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AddRefDocument(ExtendedControls.Components.ScintillaNET.Classes.Document)">
            <summary>
            Increases the reference count of the specified document by 1.
            </summary>
            <param name="document">The document reference count to increase.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AddSelection(System.Int32,System.Int32)">
            <summary>
            Adds an additional selection range to the existing main selection.
            </summary>
            <param name="caret">The zero-based document position to end the selection.</param>
            <param name="anchor">The zero-based document position to start the selection.</param>
            <remarks>A main selection must first have been set by a call to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSelection(System.Int32,System.Int32)" />.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AddText(System.String)">
            <summary>
            Inserts the specified text at the current caret position.
            </summary>
            <param name="text">The text to insert at the current caret position.</param>
            <remarks>The caret position is set to the end of the inserted text, but it is not scrolled into view.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AnnotationClearAll">
            <summary>
            Removes the annotation text for every <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Line" /> in the document.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AppendText(System.String)">
            <summary>
            Adds the specified text to the end of the document.
            </summary>
            <param name="text">The text to add to the document.</param>
            <remarks>The current selection is not changed and the new text is not scrolled into view.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AssignCmdKey(System.Windows.Forms.Keys,ExtendedControls.Components.ScintillaNET.Enumerations.Command)">
            <summary>
            Assigns the specified key definition to a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> command.
            </summary>
            <param name="keyDefinition">The key combination to bind.</param>
            <param name="sciCommand">The command to assign.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCCancel">
            <summary>
            Cancels any displayed autocompletion list.
            </summary>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCStops(System.String)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCComplete">
            <summary>
            Triggers completion of the current autocompletion word.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCSelect(System.String)">
            <summary>
            Selects an item in the autocompletion list.
            </summary>
            <param name="select">
            The autocompletion word to select.
            If found, the word in the autocompletion list is selected and the index can be obtained by calling <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCCurrent" />.
            If not found, the behavior is determined by <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCAutoHide" />.
            </param>
            <remarks>
            Comparisons are performed according to the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCIgnoreCase" /> property
            and will match the first word starting with <paramref name="select" />.
            </remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCCurrent" />
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCAutoHide" />
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCIgnoreCase" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCSetFillUps(System.String)">
            <summary>
            Sets the characters that, when typed, cause the autocompletion item to be added to the document.
            </summary>
            <param name="chars">A string of characters that trigger autocompletion. The default is null.</param>
            <remarks>Common fillup characters are '(', '[', and '.' depending on the language.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCShow(System.Int32,System.String)">
            <summary>
            Displays an auto completion list.
            </summary>
            <param name="lenEntered">The number of characters already entered to match on.</param>
            <param name="list">A list of autocompletion words separated by the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCSeparator" /> character.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCStops(System.String)">
            <summary>
            Specifies the characters that will automatically cancel autocompletion without the need to call <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCCancel" />.
            </summary>
            <param name="chars">A String of the characters that will cancel autocompletion. The default is empty.</param>
            <remarks>Characters specified should be limited to printable ASCII characters.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BeginUndoAction">
            <summary>
            Marks the beginning of a set of actions that should be treated as a single undo action.
            </summary>
            <remarks>A call to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BeginUndoAction" /> should be followed by a call to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.EndUndoAction" />.</remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.EndUndoAction" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BraceBadLight(System.Int32)">
            <summary>
            Styles the specified character position with the <see cref="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BraceBad" /> style when there is an unmatched brace.
            </summary>
            <param name="position">The zero-based document position of the unmatched brace character or <seealso cref="F:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.InvalidPosition"/> to remove the highlight.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BraceHighlight(System.Int32,System.Int32)">
            <summary>
            Styles the specified character positions with the <see cref="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BraceLight" /> style.
            </summary>
            <param name="position1">The zero-based document position of the open brace character.</param>
            <param name="position2">The zero-based document position of the close brace character.</param>
            <remarks>Brace highlighting can be removed by specifying <see cref="F:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.InvalidPosition" /> for <paramref name="position1" /> and <paramref name="position2" />.</remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HighlightGuide" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BraceMatch(System.Int32)">
            <summary>
            Finds a corresponding matching brace starting at the position specified.
            The brace characters handled are '(', ')', '[', ']', '{', '}', '&lt;', and '&gt;'.
            </summary>
            <param name="position">The zero-based document position of a brace character to start the search from for a matching brace character.</param>
            <returns>The zero-based document position of the corresponding matching brace or <see cref="F:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.InvalidPosition" /> it no matching brace could be found.</returns>
            <remarks>A match only occurs if the style of the matching brace is the same as the starting brace. Nested braces are handled correctly.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CallTipCancel">
            <summary>
            Cancels the display of a call tip window.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CallTipSetForeHlt(System.Drawing.Color)">
            <summary>
            Sets the color of highlighted text in a call tip.
            </summary>
            <param name="color">The new highlight text Color. The default is dark blue.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CallTipSetHlt(System.Int32,System.Int32)">
            <summary>
            Sets the specified range of the call tip text to display in a highlighted style.
            </summary>
            <param name="hlStart">The zero-based index in the call tip text to start highlighting.</param>
            <param name="hlEnd">The zero-based index in the call tip text to stop highlighting (exclusive).</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CallTipSetPosition(System.Boolean)">
            <summary>
            Determines whether to display a call tip above or below text.
            </summary>
            <param name="above">true to display above text; otherwise, false. The default is false.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CallTipShow(System.Int32,System.String)">
            <summary>
            Displays a call tip window.
            </summary>
            <param name="posStart">The zero-based document position where the call tip window should be aligned.</param>
            <param name="definition">The call tip text.</param>
            <remarks>
            Call tips can contain multiple lines separated by '\n' characters. Do not include '\r', as this will most likely print as an empty box.
            The '\t' character is supported and the size can be set by using <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CallTipTabSize(System.Int32)" />.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CallTipTabSize(System.Int32)">
            <summary>
            Sets the call tip tab size in pixels.
            </summary>
            <param name="tabSize">The width in pixels of a tab '\t' character in a call tip. Specifying 0 disables special treatment of tabs.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ChangeLexerState(System.Int32,System.Int32)">
            <summary>
            Indicates to the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" /> that the internal lexer state has changed in the specified
            range and therefore may need to be redrawn.
            </summary>
            <param name="startPos">The zero-based document position at which the lexer state change starts.</param>
            <param name="endPos">The zero-based document position at which the lexer state change ends.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CharPositionFromPoint(System.Int32,System.Int32)">
            <summary>
            Finds the closest character position to the specified display point.
            </summary>
            <param name="x">The x pixel coordinate within the client rectangle of the control.</param>
            <param name="y">The y pixel coordinate within the client rectangle of the control.</param>
            <returns>The zero-based document position of the nearest character to the point specified.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CharPositionFromPointClose(System.Int32,System.Int32)">
            <summary>
            Finds the closest character position to the specified display point or returns -1
            if the point is outside the window or not close to any characters.
            </summary>
            <param name="x">The x pixel coordinate within the client rectangle of the control.</param>
            <param name="y">The y pixel coordinate within the client rectangle of the control.</param>
            <returns>The zero-based document position of the nearest character to the point specified when near a character; otherwise, -1.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ChooseCaretX">
            <summary>
            Explicitly sets the current horizontal offset of the caret as the X position to track
            when the user moves the caret vertically using the up and down keys.
            </summary>
            <remarks>
            When not set explicitly, Scintilla automatically sets this value each time the user moves
            the caret horizontally.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Clear">
            <summary>
            Removes the selected text from the document.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ClearAll">
            <summary>
            Deletes all document text, unless the document is read-only.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ClearCmdKey(System.Windows.Forms.Keys)">
            <summary>
            Makes the specified key definition do nothing.
            </summary>
            <param name="keyDefinition">The key combination to bind.</param>
            <remarks>This is equivalent to binding the keys to <see cref="!:Command.Null" />.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ClearAllCmdKeys">
            <summary>
            Removes all the key definition command mappings.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ClearDocumentStyle">
            <summary>
            Removes all styling from the document and resets the folding state.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ClearRegisteredImages">
            <summary>
            Removes all images registered for autocompletion lists.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ClearSelections">
            <summary>
            Sets a single empty selection at the start of the document.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Colorize(System.Int32,System.Int32)">
            <summary>
            Requests that the current lexer restyle the specified range.
            </summary>
            <param name="startPos">The zero-based document position at which to start styling.</param>
            <param name="endPos">The zero-based document position at which to stop styling (exclusive).</param>
            <remarks>This will also cause fold levels in the range specified to be reset.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ConvertEols(ExtendedControls.Components.ScintillaNET.Enumerations.EOL)">
            <summary>
            Changes all end-of-line characters in the document to the format specified.
            </summary>
            <param name="eolMode">One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.EOL" /> enumeration values.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Copy">
            <summary>
            Copies the selected text from the document and places it on the clipboard.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Copy(ExtendedControls.Components.ScintillaNET.Enumerations.CopyFormat)">
            <summary>
            Copies the selected text from the document and places it on the clipboard.
            </summary>
            <param name="format">One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.CopyFormat" /> enumeration values.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CopyAllowLine">
            <summary>
            Copies the selected text from the document and places it on the clipboard.
            If the selection is empty the current line is copied.
            </summary>
            <remarks>
            If the selection is empty and the current line copied, an extra "MSDEVLineSelect" marker is added to the
            clipboard which is then used in <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Paste" /> to paste the whole line before the current line.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CopyAllowLine(ExtendedControls.Components.ScintillaNET.Enumerations.CopyFormat)">
            <summary>
            Copies the selected text from the document and places it on the clipboard.
            If the selection is empty the current line is copied.
            </summary>
            <param name="format">One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.CopyFormat" /> enumeration values.</param>
            <remarks>
            If the selection is empty and the current line copied, an extra "MSDEVLineSelect" marker is added to the
            clipboard which is then used in <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Paste" /> to paste the whole line before the current line.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CopyRange(System.Int32,System.Int32)">
            <summary>
            Copies the specified range of text to the clipboard.
            </summary>
            <param name="start">The zero-based character position in the document to start copying.</param>
            <param name="end">The zero-based character position (exclusive) in the document to stop copying.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CopyRange(System.Int32,System.Int32,ExtendedControls.Components.ScintillaNET.Enumerations.CopyFormat)">
            <summary>
            Copies the specified range of text to the clipboard.
            </summary>
            <param name="start">The zero-based character position in the document to start copying.</param>
            <param name="end">The zero-based character position (exclusive) in the document to stop copying.</param>
            <param name="format">One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.CopyFormat" /> enumeration values.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CreateDocument">
            <summary>
            Create a new, empty document.
            </summary>
            <returns>A new <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Document" /> with a reference count of 1.</returns>
            <remarks>You are responsible for ensuring the reference count eventually reaches 0 or memory leaks will occur.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CreateLoader(System.Int32)">
            <summary>
            Creates an <see cref="T:ExtendedControls.Components.ScintillaNET.Interfaces.ILoader" /> object capable of loading a <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Document" /> on a background (non-UI) thread.
            </summary>
            <param name="length">The initial number of characters to allocate.</param>
            <returns>A new <see cref="T:ExtendedControls.Components.ScintillaNET.Interfaces.ILoader" /> object, or null if the loader could not be created.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Cut">
            <summary>
            Cuts the selected text from the document and places it on the clipboard.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DeleteRange(System.Int32,System.Int32)">
            <summary>
            Deletes a range of text from the document.
            </summary>
            <param name="position">The zero-based character position to start deleting.</param>
            <param name="length">The number of characters to delete.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DescribeKeywordSets">
            <summary>
            Retrieves a description of keyword sets supported by the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" />.
            </summary>
            <returns>A String describing each keyword set separated by line breaks for the current lexer.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DescribeProperty(System.String)">
            <summary>
            Retrieves a brief description of the specified property name for the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" />.
            </summary>
            <param name="name">A property name supported by the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" />.</param>
            <returns>A String describing the lexer property name if found; otherwise, String.Empty.</returns>
            <remarks>A list of supported property names for the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" /> can be obtained by calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.PropertyNames" />.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DirectMessage(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Sends the specified message directly to the native Scintilla window,
            bypassing any managed APIs.
            </summary>
            <param name="msg">The message ID.</param>
            <param name="wParam">The message <c>wparam</c> field.</param>
            <param name="lParam">The message <c>lparam</c> field.</param>
            <returns>An <see cref="T:System.IntPtr"/> representing the result of the message request.</returns>
            <remarks>This API supports the Scintilla infrastructure and is not intended to be used directly from your code.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Control and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DocLineFromVisible(System.Int32)">
            <summary>
            Returns the zero-based document line index from the specified display line index.
            </summary>
            <param name="displayLine">The zero-based display line index.</param>
            <returns>The zero-based document line index.</returns>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.DisplayIndex" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DropSelection(System.Int32)">
            <summary>
            If there are multiple selections, removes the specified selection.
            </summary>
            <param name="selection">The zero-based selection index.</param>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Selections" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.EmptyUndoBuffer">
            <summary>
            Clears any undo or redo history.
            </summary>
            <remarks>This will also cause <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSavePoint" /> to be called but will not raise the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SavePointReached" /> event.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.EndUndoAction">
            <summary>
            Marks the end of a set of actions that should be treated as a single undo action.
            </summary>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BeginUndoAction" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ExecuteCmd(ExtendedControls.Components.ScintillaNET.Enumerations.Command)">
            <summary>
            Performs the specified <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" />command.
            </summary>
            <param name="sciCommand">The command to perform.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.FoldAll(ExtendedControls.Components.ScintillaNET.Enumerations.FoldAction)">
            <summary>
            Performs the specified fold action on the entire document.
            </summary>
            <param name="action">One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.FoldAction" /> enumeration values.</param>
            <remarks>When using <see cref="!:FoldAction.Toggle" /> the first fold header in the document is examined to decide whether to expand or contract.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.FoldDisplayTextSetStyle(ExtendedControls.Components.ScintillaNET.Enumerations.FoldDisplayText)">
            <summary>
            Changes the appearance of fold text tags.
            </summary>
            <param name="style">One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.FoldDisplayText" /> enumeration values.</param>
            <remarks>The text tag to display on a folded line can be set using <see cref="M:ExtendedControls.Components.ScintillaNET.Classes.Line.ToggleFoldShowText(System.String)" />.</remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Classes.Line.ToggleFoldShowText(System.String)" />.
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetCharAt(System.Int32)">
            <summary>
            Returns the character as the specified document position.
            </summary>
            <param name="position">The zero-based document position of the character to get.</param>
            <returns>The character at the specified <paramref name="position" />.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetColumn(System.Int32)">
            <summary>
            Returns the column number of the specified document position, taking the width of tabs into account.
            </summary>
            <param name="position">The zero-based document position to get the column for.</param>
            <returns>The number of columns from the start of the line to the specified document <paramref name="position" />.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetEndStyled">
            <summary>
            Returns the last document position likely to be styled correctly.
            </summary>
            <returns>The zero-based document position of the last styled character.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetProperty(System.String)">
            <summary>
            Lookup a property value for the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" />.
            </summary>
            <param name="name">The property name to lookup.</param>
            <returns>
            A String representing the property value if found; otherwise, String.Empty.
            Any embedded property name macros as described in <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetProperty(System.String,System.String)" /> will not be replaced (expanded).
            </returns>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetPropertyExpanded(System.String)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetPropertyExpanded(System.String)">
            <summary>
            Lookup a property value for the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" /> and expand any embedded property macros.
            </summary>
            <param name="name">The property name to lookup.</param>
            <returns>
            A String representing the property value if found; otherwise, String.Empty.
            Any embedded property name macros as described in <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetProperty(System.String,System.String)" /> will be replaced (expanded).
            </returns>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetProperty(System.String)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetPropertyInt(System.String,System.Int32)">
            <summary>
            Lookup a property value for the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" /> and convert it to an integer.
            </summary>
            <param name="name">The property name to lookup.</param>
            <param name="defaultValue">A default value to return if the property name is not found or has no value.</param>
            <returns>
            An Integer representing the property value if found;
            otherwise, <paramref name="defaultValue" /> if not found or the property has no value;
            otherwise, 0 if the property is not a number.
            </returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetStyleAt(System.Int32)">
            <summary>
            Gets the style of the specified document position.
            </summary>
            <param name="position">The zero-based document position of the character to get the style for.</param>
            <returns>The zero-based <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Style" /> index used at the specified <paramref name="position" />.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetTag(System.Int32)">
            <summary>
            Returns the capture group text of the most recent regular expression search.
            </summary>
            <param name="tagNumber">The capture group (1 through 9) to get the text for.</param>
            <returns>A String containing the capture group text if it participated in the match; otherwise, an empty string.</returns>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SearchInTarget(System.String)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetTextRange(System.Int32,System.Int32)">
            <summary>
            Gets a range of text from the document.
            </summary>
            <param name="position">The zero-based starting character position of the range to get.</param>
            <param name="length">The number of characters to get.</param>
            <returns>A string representing the text range.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetTextRangeAsHtml(System.Int32,System.Int32)">
            <summary>
            Gets a range of text from the document formatted as Hypertext Markup Language (HTML).
            </summary>
            <param name="position">The zero-based starting character position of the range to get.</param>
            <param name="length">The number of characters to get.</param>
            <returns>A string representing the text range formatted as HTML.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetVersionInfo">
            <summary>
            Returns the version information of the native Scintilla library.
            </summary>
            <returns>An object representing the version information of the native Scintilla library.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetWordFromPosition(System.Int32)">
            <summary>
             Gets the word from the position specified.
             </summary>
             <param name="position">The zero-based document character position to get the word from.</param>
             <returns>The word at the specified position.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GotoPosition(System.Int32)">
            <summary>
            Navigates the caret to the document position specified.
            </summary>
            <param name="position">The zero-based document character position to navigate to.</param>
            <remarks>Any selection is discarded.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HideLines(System.Int32,System.Int32)">
            <summary>
            Hides the range of lines specified.
            </summary>
            <param name="lineStart">The zero-based index of the line range to start hiding.</param>
            <param name="lineEnd">The zero-based index of the line range to end hiding.</param>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ShowLines(System.Int32,System.Int32)" />
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.Visible" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorAllOnFor(System.Int32)">
            <summary>
            Returns a bitmap representing the 32 indicators in use at the specified position.
            </summary>
            <param name="position">The zero-based character position within the document to test.</param>
            <returns>A bitmap indicating which of the 32 indicators are in use at the specified <paramref name="position" />.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorClearRange(System.Int32,System.Int32)">
            <summary>
            Removes the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorCurrent" /> indicator (and user-defined value) from the specified range of text.
            </summary>
            <param name="position">The zero-based character position within the document to start clearing.</param>
            <param name="length">The number of characters to clear.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorFillRange(System.Int32,System.Int32)">
            <summary>
            Adds the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorCurrent" /> indicator and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorValue" /> value to the specified range of text.
            </summary>
            <param name="position">The zero-based character position within the document to start filling.</param>
            <param name="length">The number of characters to fill.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.InsertText(System.Int32,System.String)">
            <summary>
            Inserts text at the specified position.
            </summary>
            <param name="position">The zero-based character position to insert the text. Specify -1 to use the current caret position.</param>
            <param name="text">The text to insert into the document.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="position" /> less than zero and not equal to -1. -or-
            <paramref name="position" /> is greater than the document length.
            </exception>
            <remarks>No scrolling is performed.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IsRangeWord(System.Int32,System.Int32)">
            <summary>
            Determines whether the specified <paramref name="start" /> and <paramref name="end" /> positions are
            at the beginning and end of a word, respectively.
            </summary>
            <param name="start">The zero-based document position of the possible word start.</param>
            <param name="end">The zero-based document position of the possible word end.</param>
            <returns>
            true if <paramref name="start" /> and <paramref name="end" /> are at the beginning and end of a word, respectively;
            otherwise, false.
            </returns>
            <remarks>
            This method does not check whether there is whitespace in the search range,
            only that the <paramref name="start" /> and <paramref name="end" /> are at word boundaries.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.LineFromPosition(System.Int32)">
            <summary>
            Returns the line that contains the document position specified.
            </summary>
            <param name="position">The zero-based document character position.</param>
            <returns>The zero-based document line index containing the character <paramref name="position" />.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.LineScroll(System.Int32,System.Int32)">
            <summary>
            Scrolls the display the number of lines and columns specified.
            </summary>
            <param name="lines">The number of lines to scroll.</param>
            <param name="columns">The number of columns to scroll.</param>
            <remarks>
            Negative values scroll in the opposite direction.
            A column is the width in pixels of a space character in the <see cref="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Default" /> style.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.LoadLexerLibrary(System.String)">
            <summary>
            Loads a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> compatible lexer from an external DLL.
            </summary>
            <param name="path">The path to the external lexer DLL.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MarkerDeleteAll(System.Int32)">
            <summary>
            Removes the specified marker from all lines.
            </summary>
            <param name="marker">The zero-based <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Marker" /> index to remove from all lines, or -1 to remove all markers from all lines.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MarkerDeleteHandle(ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle)">
            <summary>
            Searches the document for the marker handle and deletes the marker if found.
            </summary>
            <param name="markerHandle">The <see cref="T:ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle" /> created by a previous call to <see cref="M:ExtendedControls.Components.ScintillaNET.Classes.Line.MarkerAdd(System.Int32)" /> of the marker to delete.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MarkerEnableHighlight(System.Boolean)">
            <summary>
            Enable or disable highlighting of the current folding block.
            </summary>
            <param name="enabled">true to highlight the current folding block; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MarkerLineFromHandle(ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle)">
            <summary>
            Searches the document for the marker handle and returns the line number containing the marker if found.
            </summary>
            <param name="markerHandle">The <see cref="T:ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle" /> created by a previous call to <see cref="M:ExtendedControls.Components.ScintillaNET.Classes.Line.MarkerAdd(System.Int32)" /> of the marker to search for.</param>
            <returns>If found, the zero-based line index containing the marker; otherwise, -1.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MultiEdgeAddLine(System.Int32,System.Drawing.Color)">
            <summary>
            Specifies the long line indicator column number and color when <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.EdgeMode" /> is <see cref="!:EdgeMode.MultiLine" />.
            </summary>
            <param name="column">The zero-based column number to indicate.</param>
            <param name="edgeColor">The color of the vertical long line indicator.</param>
            <remarks>A column is defined as the width of a space character in the <see cref="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Default" /> style.</remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MultiEdgeClearAll" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MultiEdgeClearAll">
            <summary>
            Removes all the long line column indicators specified using <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MultiEdgeAddLine(System.Int32,System.Drawing.Color)" />.
            </summary>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MultiEdgeAddLine(System.Int32,System.Drawing.Color)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MultipleSelectAddEach">
            <summary>
            Searches for all instances of the main selection within the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" />
            range and adds any matches to the selection.
            </summary>
            <remarks>
            The <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SearchFlags" /> property is respected when searching, allowing additional
            selections to match on different case sensitivity and word search options.
            </remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MultipleSelectAddNext" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MultipleSelectAddNext">
            <summary>
            Searches for the next instance of the main selection within the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" />
            range and adds any match to the selection.
            </summary>
            <remarks>
            The <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SearchFlags" /> property is respected when searching, allowing additional
            selections to match on different case sensitivity and word search options.
            </remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MultipleSelectAddNext" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnAutoCCancelled(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCCancelled" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnAutoCCharDeleted(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCCharDeleted" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnAutoCCompleted(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.AutoCSelectionEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCCompleted" /> event.
            </summary>
            <param name="e">An <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.AutoCSelectionEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnAutoCSelection(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.AutoCSelectionEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCSelection" /> event.
            </summary>
            <param name="e">An <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.AutoCSelectionEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnBeforeDelete(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.BeforeModificationEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BeforeDelete" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.BeforeModificationEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnBeforeInsert(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.BeforeModificationEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BeforeInsert" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.BeforeModificationEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnBorderStyleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BorderStyleChanged" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnChangeAnnotation(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ChangeAnnotationEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ChangeAnnotation" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ChangeAnnotationEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnCharAdded(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.CharAddedEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CharAdded" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.CharAddedEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnDelete(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ModificationEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Delete" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ModificationEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnDoubleClick(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DoubleClickEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DoubleClick" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DoubleClickEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnDwellEnd(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DwellEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DwellEnd" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DwellEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnDwellStart(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DwellEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DwellStart" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DwellEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnHotspotClick(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.HotspotClickEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HotspotClick" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.HotspotClickEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnHotspotDoubleClick(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.HotspotClickEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HotspotDoubleClick" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.HotspotClickEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnHotspotReleaseClick(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.HotspotClickEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HotspotReleaseClick" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.HotspotClickEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnIndicatorClick(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.IndicatorClickEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorClick" /> event.
            </summary>
            <param name="e">An <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.IndicatorClickEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnIndicatorRelease(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.IndicatorReleaseEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorRelease" /> event.
            </summary>
            <param name="e">An <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.IndicatorReleaseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnInsert(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ModificationEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Insert" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ModificationEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnInsertCheck(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.InsertCheckEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.InsertCheck" /> event.
            </summary>
            <param name="e">An <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.InsertCheckEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnMarginClick(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.MarginClickEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MarginClick" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.MarginClickEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnMarginRightClick(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.MarginClickEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MarginRightClick" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.MarginClickEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnModifyAttempt(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ModifyAttempt" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnNeedShown(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.NeedShownEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.NeedShown" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.NeedShownEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnPainted(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Painted" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnSavePointLeft(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SavePointLeft" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnSavePointReached(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SavePointReached" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnStyleNeeded(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.StyleNeededEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.StyleNeeded" /> event.
            </summary>
            <param name="e">A <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.StyleNeededEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnUpdateUI(ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.UpdateUIEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.UpdateUI" /> event.
            </summary>
            <param name="e">An <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.UpdateUIEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.OnZoomChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ZoomChanged" /> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Paste">
            <summary>
            Pastes the contents of the clipboard into the current selection.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.PointXFromPosition(System.Int32)">
            <summary>
            Returns the X display pixel location of the specified document position.
            </summary>
            <param name="pos">The zero-based document character position.</param>
            <returns>The x-coordinate of the specified <paramref name="pos" /> within the client rectangle of the control.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.PointYFromPosition(System.Int32)">
            <summary>
            Returns the Y display pixel location of the specified document position.
            </summary>
            <param name="pos">The zero-based document character position.</param>
            <returns>The y-coordinate of the specified <paramref name="pos" /> within the client rectangle of the control.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.PropertyNames">
            <summary>
            Retrieves a list of property names that can be set for the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" />.
            </summary>
            <returns>A String of property names separated by line breaks.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.PropertyType(System.String)">
            <summary>
            Retrieves the data type of the specified property name for the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" />.
            </summary>
            <param name="name">A property name supported by the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" />.</param>
            <returns>One of the <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.PropertyType(System.String)" /> enumeration values. The default is <see cref="!:ScintillaNET.PropertyType.Boolean" />.</returns>
            <remarks>A list of supported property names for the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" /> can be obtained by calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.PropertyNames" />.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Redo">
            <summary>
            Redoes the effect of an <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Undo" /> operation.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.RegisterRgbaImage(System.Int32,System.Drawing.Bitmap)">
            <summary>
            Maps the specified image to a type identifer for use in an autocompletion list.
            </summary>
            <param name="type">The numeric identifier for this image.</param>
            <param name="image">The Bitmap to use in an autocompletion list.</param>
            <remarks>
            The <paramref name="image" /> registered can be referenced by its <paramref name="type" /> identifer in an autocompletion
            list by suffixing a word with the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCTypeSeparator" /> character and the <paramref name="type" /> value. e.g.
            "int?2 long?3 short?1" etc....
            </remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCTypeSeparator" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ReleaseDocument(ExtendedControls.Components.ScintillaNET.Classes.Document)">
            <summary>
            Decreases the reference count of the specified document by 1.
            </summary>
            <param name="document">
            The document reference count to decrease.
            When a document's reference count reaches 0 it is destroyed and any associated memory released.
            </param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ReplaceSelection(System.String)">
            <summary>
            Replaces the current selection with the specified text.
            </summary>
            <param name="text">The text that should replace the current selection.</param>
            <remarks>
            If there is not a current selection, the text will be inserted at the current caret position.
            Following the operation the caret is placed at the end of the inserted text and scrolled into view.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ReplaceTarget(System.String)">
            <summary>
            Replaces the target defined by <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" /> with the specified <paramref name="text" />.
            </summary>
            <param name="text">The text that will replace the current target.</param>
            <returns>The length of the replaced text.</returns>
            <remarks>
            The <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" /> properties will be updated to the start and end positions of the replaced text.
            The recommended way to delete text in the document is to set the target range to be removed and replace the target with an empty string.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ReplaceTargetRe(System.String)">
            <summary>
            Replaces the target text defined by <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" /> with the specified value after first substituting
            "\1" through "\9" macros in the <paramref name="text" /> with the most recent regular expression capture groups.
            </summary>
            <param name="text">The text containing "\n" macros that will be substituted with the most recent regular expression capture groups and then replace the current target.</param>
            <returns>The length of the replaced text.</returns>
            <remarks>
            The "\0" macro will be substituted by the entire matched text from the most recent search.
            The <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" /> properties will be updated to the start and end positions of the replaced text.
            </remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetTag(System.Int32)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.RotateSelection">
            <summary>
            Makes the next selection the main selection.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ScrollCaret">
            <summary>
            Scrolls the current position into view, if it is not already visible.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ScrollRange(System.Int32,System.Int32)">
            <summary>
            Scrolls the specified range into view.
            </summary>
            <param name="start">The zero-based document start position to scroll to.</param>
            <param name="end">
            The zero-based document end position to scroll to if doing so does not cause the <paramref name="start" />
            position to scroll out of view.
            </param>
            <remarks>This may be used to make a search match visible.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SearchInTarget(System.String)">
            <summary>
            Searches for the first occurrence of the specified text in the target defined by <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" />.
            </summary>
            <param name="text">The text to search for. The interpretation of the text (i.e. whether it is a regular expression) is defined by the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SearchFlags" /> property.</param>
            <returns>The zero-based start position of the matched text within the document if successful; otherwise, -1.</returns>
            <remarks>
            If successful, the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" /> properties will be updated to the start and end positions of the matched text.
            Searching can be performed in reverse using a <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" /> greater than the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" />.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SelectAll">
            <summary>
            Selects all the text in the document.
            </summary>
            <remarks>The current position is not scrolled into view.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetAdditionalSelBack(System.Drawing.Color)">
            <summary>
            Sets the background color of additional selections.
            </summary>
            <param name="color">Additional selections background color.</param>
            <remarks>Calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSelectionBackColor(System.Boolean,System.Drawing.Color)" /> will reset the <paramref name="color" /> specified.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetAdditionalSelFore(System.Drawing.Color)">
            <summary>
            Sets the foreground color of additional selections.
            </summary>
            <param name="color">Additional selections foreground color.</param>
            <remarks>Calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSelectionForeColor(System.Boolean,System.Drawing.Color)" /> will reset the <paramref name="color" /> specified.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetEmptySelection(System.Int32)">
            <summary>
            Removes any selection and places the caret at the specified position.
            </summary>
            <param name="pos">The zero-based document position to place the caret at.</param>
            <remarks>The caret is not scrolled into view.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetFoldFlags(ExtendedControls.Components.ScintillaNET.Enumerations.FoldFlags)">
            <summary>
            Sets additional options for displaying folds.
            </summary>
            <param name="flags">A bitwise combination of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.FoldFlags" /> enumeration.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetFoldMarginColor(System.Boolean,System.Drawing.Color)">
            <summary>
            Sets a global override to the fold margin color.
            </summary>
            <param name="use">true to override the fold margin color; otherwise, false.</param>
            <param name="color">The global fold margin color.</param>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetFoldMarginHighlightColor(System.Boolean,System.Drawing.Color)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetFoldMarginHighlightColor(System.Boolean,System.Drawing.Color)">
            <summary>
            Sets a global override to the fold margin highlight color.
            </summary>
            <param name="use">true to override the fold margin highlight color; otherwise, false.</param>
            <param name="color">The global fold margin highlight color.</param>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetFoldMarginColor(System.Boolean,System.Drawing.Color)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetKeywords(System.Int32,System.String)">
            <summary>
            Updates a keyword set used by the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" />.
            </summary>
            <param name="set">The zero-based index of the keyword set to update.</param>
            <param name="keywords">
            A list of keywords pertaining to the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" /> separated by whitespace (space, tab, '\n', '\r') characters.
            </param>
            <remarks>The keywords specified will be styled according to the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" />.</remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DescribeKeywordSets" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetDestroyHandleBehavior(System.Boolean)">
            <summary>
            Sets the application-wide behavior for destroying <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> controls.
            </summary>
            <param name="reparent">
            true to reparent Scintilla controls to message-only windows when destroyed rather than actually destroying the control handle; otherwise, false.
            The default is true.
            </param>
            <remarks>This method must be called prior to the first <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control being created.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetModulePath(System.String)">
            <summary>
            Sets the application-wide default module path of the native Scintilla library.
            </summary>
            <param name="modulePath">The native Scintilla module path.</param>
            <remarks>
            This method must be called prior to the first <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control being created.
            The <paramref name="modulePath" /> can be relative or absolute.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetProperty(System.String,System.String)">
            <summary>
            Passes the specified property name-value pair to the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" />.
            </summary>
            <param name="name">The property name to set.</param>
            <param name="value">
            The property value. Values can refer to other property names using the syntax $(name), where 'name' is another property
            name for the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" />. When the property value is retrieved by a call to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetPropertyExpanded(System.String)" />
            the embedded property name macro will be replaced (expanded) with that current property value.
            </param>
            <remarks>Property names are case-sensitive.</remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSavePoint">
            <summary>
            Marks the document as unmodified.
            </summary>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Modified" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSel(System.Int32,System.Int32)">
            <summary>
            Sets the anchor and current position.
            </summary>
            <param name="anchorPos">The zero-based document position to start the selection.</param>
            <param name="currentPos">The zero-based document position to end the selection.</param>
            <remarks>
            A negative value for <paramref name="currentPos" /> signifies the end of the document.
            A negative value for <paramref name="anchorPos" /> signifies no selection (i.e. sets the <paramref name="anchorPos" />
            to the same position as the <paramref name="currentPos" />).
            The current position is scrolled into view following this operation.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSelection(System.Int32,System.Int32)">
            <summary>
            Sets a single selection from anchor to caret.
            </summary>
            <param name="caret">The zero-based document position to end the selection.</param>
            <param name="anchor">The zero-based document position to start the selection.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSelectionBackColor(System.Boolean,System.Drawing.Color)">
            <summary>
            Sets a global override to the selection background color.
            </summary>
            <param name="use">true to override the selection background color; otherwise, false.</param>
            <param name="color">The global selection background color.</param>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSelectionForeColor(System.Boolean,System.Drawing.Color)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSelectionForeColor(System.Boolean,System.Drawing.Color)">
            <summary>
            Sets a global override to the selection foreground color.
            </summary>
            <param name="use">true to override the selection foreground color; otherwise, false.</param>
            <param name="color">The global selection foreground color.</param>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSelectionBackColor(System.Boolean,System.Drawing.Color)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetStyling(System.Int32,System.Int32)">
            <summary>
            Styles the specified length of characters.
            </summary>
            <param name="length">The number of characters to style.</param>
            <param name="style">The <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Style" /> definition index to assign each character.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="length" /> or <paramref name="style" /> is less than zero. -or-
            The sum of a preceeding call to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.StartStyling(System.Int32)" /> or <see name="SetStyling" /> and <paramref name="length" /> is greater than the document length. -or-
            <paramref name="style" /> is greater than or equal to the number of style definitions.
            </exception>
            <remarks>
            The styling position is advanced by <paramref name="length" /> after each call allowing multiple
            calls to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetStyling(System.Int32,System.Int32)" /> for a single call to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.StartStyling(System.Int32)" />.
            </remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.StartStyling(System.Int32)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetTargetRange(System.Int32,System.Int32)">
            <summary>
            Sets the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" /> properties in a single call.
            </summary>
            <param name="start">The zero-based character position within the document to start a search or replace operation.</param>
            <param name="end">The zero-based character position within the document to end a search or replace operation.</param>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" />
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetWhitespaceBackColor(System.Boolean,System.Drawing.Color)">
            <summary>
            Sets a global override to the whitespace background color.
            </summary>
            <param name="use">true to override the whitespace background color; otherwise, false.</param>
            <param name="color">The global whitespace background color.</param>
            <remarks>When not overridden globally, the whitespace background color is determined by the current lexer.</remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ViewWhitespace" />
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetWhitespaceForeColor(System.Boolean,System.Drawing.Color)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetWhitespaceForeColor(System.Boolean,System.Drawing.Color)">
            <summary>
            Sets a global override to the whitespace foreground color.
            </summary>
            <param name="use">true to override the whitespace foreground color; otherwise, false.</param>
            <param name="color">The global whitespace foreground color.</param>
            <remarks>When not overridden globally, the whitespace foreground color is determined by the current lexer.</remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ViewWhitespace" />
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetWhitespaceBackColor(System.Boolean,System.Drawing.Color)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ShowLines(System.Int32,System.Int32)">
            <summary>
            Shows the range of lines specified.
            </summary>
            <param name="lineStart">The zero-based index of the line range to start showing.</param>
            <param name="lineEnd">The zero-based index of the line range to end showing.</param>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HideLines(System.Int32,System.Int32)" />
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Classes.Line.Visible" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.StartStyling(System.Int32)">
            <summary>
            Prepares for styling by setting the styling <paramref name="position" /> to start at.
            </summary>
            <param name="position">The zero-based character position in the document to start styling.</param>
            <remarks>
            After preparing the document for styling, use successive calls to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetStyling(System.Int32,System.Int32)" />
            to style the document.
            </remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetStyling(System.Int32,System.Int32)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.StyleClearAll">
            <summary>
            Resets all style properties to those currently configured for the <see cref="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Default" /> style.
            </summary>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.StyleResetDefault" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.StyleResetDefault">
            <summary>
            Resets the <see cref="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Default" /> style to its initial state.
            </summary>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.StyleClearAll" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SwapMainAnchorCaret">
            <summary>
            Moves the caret to the opposite end of the main selection.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetFromSelection">
            <summary>
            Sets the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" /> to the start and end positions of the selection.
            </summary>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetWholeDocument" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetWholeDocument">
            <summary>
            Sets the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" /> to the start and end positions of the document.
            </summary>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetFromSelection" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TextWidth(System.Int32,System.String)">
            <summary>
            Measures the width in pixels of the specified string when rendered in the specified style.
            </summary>
            <param name="style">The index of the <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Style" /> to use when rendering the text to measure.</param>
            <param name="text">The text to measure.</param>
            <returns>The width in pixels.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Undo">
            <summary>
            Undoes the previous action.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.UsePopup(System.Boolean)">
            <summary>
            Determines whether to show the right-click context menu.
            </summary>
            <param name="enablePopup">true to enable the popup window; otherwise, false.</param>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.UsePopup(ExtendedControls.Components.ScintillaNET.Enumerations.PopupMode)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.UsePopup(ExtendedControls.Components.ScintillaNET.Enumerations.PopupMode)">
            <summary>
            Determines the conditions for displaying the standard right-click context menu.
            </summary>
            <param name="popupMode">One of the <seealso cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.PopupMode" /> enumeration values.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process.</param>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.WordEndPosition(System.Int32,System.Boolean)">
            <summary>
            Returns the position where a word ends, searching forward from the position specified.
            </summary>
            <param name="position">The zero-based document position to start searching from.</param>
            <param name="onlyWordCharacters">
            true to stop searching at the first non-word character regardless of whether the search started at a word or non-word character.
            false to use the first character in the search as a word or non-word indicator and then search for that word or non-word boundary.
            </param>
            <returns>The zero-based document postion of the word boundary.</returns>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.WordStartPosition(System.Int32,System.Boolean)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.WordStartPosition(System.Int32,System.Boolean)">
            <summary>
            Returns the position where a word starts, searching backward from the position specified.
            </summary>
            <param name="position">The zero-based document position to start searching from.</param>
            <param name="onlyWordCharacters">
            true to stop searching at the first non-word character regardless of whether the search started at a word or non-word character.
            false to use the first character in the search as a word or non-word indicator and then search for that word or non-word boundary.
            </param>
            <returns>The zero-based document postion of the word boundary.</returns>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.WordEndPosition(System.Int32,System.Boolean)" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ZoomIn">
            <summary>
            Increases the zoom factor by 1 until it reaches 20 points.
            </summary>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Zoom" />
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ZoomOut">
            <summary>
            Decreases the zoom factor by 1 until it reaches -10 points.
            </summary>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Zoom" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AdditionalCaretForeColor">
            <summary>
            Gets or sets the caret foreground color for additional selections.
            </summary>
            <returns>The caret foreground color in additional selections. The default is (127, 127, 127).</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AdditionalCaretsBlink">
            <summary>
            Gets or sets whether the carets in additional selections will blink.
            </summary>
            <returns>true if additional selection carets should blink; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AdditionalCaretsVisible">
            <summary>
            Gets or sets whether the carets in additional selections are visible.
            </summary>
            <returns>true if additional selection carets are visible; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AdditionalSelAlpha">
            <summary>
            Gets or sets the alpha transparency of additional multiple selections.
            </summary>
            <returns>
            The alpha transparency ranging from 0 (completely transparent) to 255 (completely opaque).
            The value 256 will disable alpha transparency. The default is 256.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AdditionalSelectionTyping">
            <summary>
            Gets or sets whether additional typing affects multiple selections.
            </summary>
            <returns>true if typing will affect multiple selections instead of just the main selection; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AnchorPosition">
            <summary>
            Gets or sets the current anchor position.
            </summary>
            <returns>The zero-based character position of the anchor.</returns>
            <remarks>
            Setting the current anchor position will create a selection between it and the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CurrentPosition" />.
            The caret is not scrolled into view.
            </remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ScrollCaret" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AnnotationVisible">
            <summary>
            Gets or sets the display of annotations.
            </summary>
            <returns>One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.Annotation" /> enumeration values. The default is <see cref="F:ExtendedControls.Components.ScintillaNET.Enumerations.Annotation.HIDDEN" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCActive">
            <summary>
            Gets a value indicating whether there is an autocompletion list displayed.
            </summary>
            <returns>true if there is an active autocompletion list; otherwise, false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCAutoHide">
            <summary>
            Gets or sets whether to automatically cancel autocompletion when there are no viable matches.
            </summary>
            <returns>
            true to automatically cancel autocompletion when there is no possible match; otherwise, false.
            The default is true.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCCancelAtStart">
            <summary>
            Gets or sets whether to cancel an autocompletion if the caret moves from its initial location,
            or is allowed to move to the word start.
            </summary>
            <returns>
            true to cancel autocompletion when the caret moves.
            false to allow the caret to move to the beginning of the word without cancelling autocompletion.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCCurrent">
            <summary>
            Gets the index of the current autocompletion list selection.
            </summary>
            <returns>The zero-based index of the current autocompletion selection.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCChooseSingle">
            <summary>
            Gets or sets whether to automatically select an item when it is the only one in an autocompletion list.
            </summary>
            <returns>
            true to automatically choose the only autocompletion item and not display the list; otherwise, false.
            The default is false.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCDropRestOfWord">
            <summary>
            Gets or sets whether to delete any word characters following the caret after an autocompletion.
            </summary>
            <returns>
            true to delete any word characters following the caret after autocompletion; otherwise, false.
            The default is false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCIgnoreCase">
            <summary>
            Gets or sets whether matching characters to an autocompletion list is case-insensitive.
            </summary>
            <returns>true to use case-insensitive matching; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCMaxHeight">
            <summary>
            Gets or sets the maximum height of the autocompletion list measured in rows.
            </summary>
            <returns>The max number of rows to display in an autocompletion window. The default is 5.</returns>
            <remarks>If there are more items in the list than max rows, a vertical scrollbar is shown.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCMaxWidth">
            <summary>
            Gets or sets the width in characters of the autocompletion list.
            </summary>
            <returns>
            The width of the autocompletion list expressed in characters, or 0 to automatically set the width
            to the longest item. The default is 0.
            </returns>
            <remarks>Any items that cannot be fully displayed will be indicated with ellipsis.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCOrder">
            <summary>
            Gets or sets the autocompletion list sort order to expect when calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCShow(System.Int32,System.String)" />.
            </summary>
            <returns>One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.Order" /> enumeration values. The default is <see cref="!:Order.Presorted" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCPosStart">
            <summary>
            Gets the document position at the time <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCShow(System.Int32,System.String)" /> was called.
            </summary>
            <returns>The zero-based document position at the time <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCShow(System.Int32,System.String)" /> was called.</returns>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCShow(System.Int32,System.String)" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCSeparator">
            <summary>
            Gets or sets the delimiter character used to separate words in an autocompletion list.
            </summary>
            <returns>The separator character used when calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCShow(System.Int32,System.String)" />. The default is the space character.</returns>
            <remarks>The <paramref name="value" /> specified should be limited to printable ASCII characters.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCTypeSeparator">
            <summary>
            Gets or sets the delimiter character used to separate words and image type identifiers in an autocompletion list.
            </summary>
            <returns>The separator character used to reference an image registered with <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.RegisterRgbaImage(System.Int32,System.Drawing.Bitmap)" />. The default is '?'.</returns>
            <remarks>The <paramref name="value" /> specified should be limited to printable ASCII characters.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutomaticFold">
            <summary>
            Gets or sets the automatic folding flags.
            </summary>
            <returns>
            A bitwise combination of the <see cref="!:ScintillaNET.AutomaticFold" /> enumeration.
            The default is <see cref="!:ScintillaNET.AutomaticFold.NONE" />.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BackColor">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BackgroundImage">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BackgroundImageLayout">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BorderStyle">
            <summary>
            Gets or sets the border type of the <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
            <returns>A BorderStyle enumeration value that represents the border type of the control. The default is Fixed3D.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">A value that is not within the range of valid values for the enumeration was assigned to the property.</exception>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BufferedDraw">
            <summary>
            Gets or sets whether drawing is double-buffered.
            </summary>
            <returns>
            true to draw each line into an offscreen bitmap first before copying it to the screen; otherwise, false.
            The default is true.
            </returns>
            <remarks>Disabling buffer can improve performance but will cause flickering.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CallTipActive">
            <summary>
            Gets a value indicating whether there is a call tip window displayed.
            </summary>
            <returns>true if there is an active call tip window; otherwise, false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CanPaste">
            <summary>
            Gets a value indicating whether there is text on the clipboard that can be pasted into the document.
            </summary>
            <returns>true when there is text on the clipboard to paste; otherwise, false.</returns>
            <remarks>The document cannot be <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ReadOnly" />  and the selection cannot contain protected text.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CanRedo">
            <summary>
            Gets a value indicating whether there is an undo action to redo.
            </summary>
            <returns>true when there is something to redo; otherwise, false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CanUndo">
            <summary>
            Gets a value indicating whether there is an action to undo.
            </summary>
            <returns>true when there is something to undo; otherwise, false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CaretForeColor">
            <summary>
            Gets or sets the caret foreground color.
            </summary>
            <returns>The caret foreground color. The default is black.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CaretLineBackColor">
            <summary>
            Gets or sets the caret line background color.
            </summary>
            <returns>The caret line background color. The default is yellow.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CaretLineBackColorAlpha">
            <summary>
            Gets or sets the alpha transparency of the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CaretLineBackColor" />.
            </summary>
            <returns>
            The alpha transparency ranging from 0 (completely transparent) to 255 (completely opaque).
            The value 256 will disable alpha transparency. The default is 256.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CaretLineFrame">
            <summary>
            Gets or sets the width of the caret line frame.
            </summary>
            <returns><see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CaretLineVisible" /> must be set to true. A value of 0 disables the frame. The default is 0.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CaretLineVisible">
            <summary>
            Gets or sets whether the caret line is visible (highlighted).
            </summary>
            <returns>true if the caret line is visible; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CaretLineVisibleAlways">
            <summary>
            Gets or sets whether the caret line is always visible even when the window is not in focus.
            </summary>
            <returns>true if the caret line is always visible; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CaretPeriod">
            <summary>
            Gets or sets the caret blink rate in milliseconds.
            </summary>
            <returns>The caret blink rate measured in milliseconds. The default is 530.</returns>
            <remarks>A value of 0 will stop the caret blinking.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CaretStyle">
            <summary>
            Gets or sets the caret display style.
            </summary>
            <returns>
            One of the <see cref="!:ScintillaNET.CaretStyle" /> enumeration values.
            The default is <see cref="!:ScintillaNET.CaretStyle.Line" />.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CaretWidth">
            <summary>
            Gets or sets the width in pixels of the caret.
            </summary>
            <returns>The width of the caret in pixels. The default is 1 pixel.</returns>
            <remarks>
            The caret width can only be set to a value of 0, 1, 2 or 3 pixels and is only effective
            when the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CaretStyle" /> property is set to <see cref="!:ScintillaNET.CaretStyle.Line" />.
            </remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CreateParams">
            <summary>
            Gets the required creation parameters when the control handle is created.
            </summary>
            <returns>A CreateParams that contains the required creation parameters when the handle to the control is created.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CurrentLine">
            <summary>
            Gets the current line index.
            </summary>
            <returns>The zero-based line index containing the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CurrentPosition" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CurrentPosition">
            <summary>
            Gets or sets the current caret position.
            </summary>
            <returns>The zero-based character position of the caret.</returns>
            <remarks>
            Setting the current caret position will create a selection between it and the current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AnchorPosition" />.
            The caret is not scrolled into view.
            </remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ScrollCaret" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Cursor">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DefaultCursor">
            <summary>
            Gets or sets the default cursor for the control.
            </summary>
            <returns>An object of type Cursor representing the current default cursor.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <returns>The default Size of the control.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Document">
            <summary>
            Gets or sets the current document used by the control.
            </summary>
            <returns>The current <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Document" />.</returns>
            <remarks>
            Setting this property is equivalent to calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ReleaseDocument(ExtendedControls.Components.ScintillaNET.Classes.Document)" /> on the current document, and
            calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CreateDocument" /> if the new <paramref name="value" /> is <see cref="!:ScintillaNET.Document.Empty" /> or
            <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AddRefDocument(ExtendedControls.Components.ScintillaNET.Classes.Document)" /> if the new <paramref name="value" /> is not <see cref="!:ScintillaNET.Document.Empty" />.
            </remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.EdgeColor">
            <summary>
            Gets or sets the background color to use when indicating long lines with
            <see cref="!:ScintillaNET.EdgeMode.Background" />.
            </summary>
            <returns>The background Color. The default is Silver.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.EdgeColumn">
            <summary>
            Gets or sets the column number at which to begin indicating long lines.
            </summary>
            <returns>The number of columns in a long line. The default is 0.</returns>
            <remarks>
            When using <see cref="!:ScintillaNET.EdgeMode.Line"/>, a column is defined as the width of a space character in the <see cref="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Default" /> style.
            When using <see cref="!:ScintillaNET.EdgeMode.Background" /> a column is equal to a character (including tabs).
            </remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.EdgeMode">
            <summary>
            Gets or sets the mode for indicating long lines.
            </summary>
            <returns>
            One of the <see cref="!:ScintillaNET.EdgeMode" /> enumeration values.
            The default is <see cref="!:ScintillaNET.EdgeMode.None" />.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.EndAtLastLine">
            <summary>
            Gets or sets whether vertical scrolling ends at the last line or can scroll past.
            </summary>
            <returns>true if the maximum vertical scroll position ends at the last line; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.EolMode">
            <summary>
            Gets or sets the end-of-line mode, or rather, the characters added into
            the document when the user presses the Enter key.
            </summary>
            <returns>One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.EOL" /> enumeration values. The default is <see cref="F:ExtendedControls.Components.ScintillaNET.Enumerations.EOL.CRLF" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ExtraAscent">
            <summary>
            Gets or sets the amount of whitespace added to the ascent (top) of each line.
            </summary>
            <returns>The extra line ascent. The default is zero.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ExtraDescent">
            <summary>
            Gets or sets the amount of whitespace added to the descent (bottom) of each line.
            </summary>
            <returns>The extra line descent. The default is zero.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.FirstVisibleLine">
            <summary>
            Gets or sets the first visible line on screen.
            </summary>
            <returns>The zero-based index of the first visible screen line.</returns>
            <remarks>The value is a visible line, not a document line.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Font">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.FontQuality">
            <summary>
            Gets or sets font quality (anti-aliasing method) used to render fonts.
            </summary>
            <returns>
            One of the <see cref="!:ScintillaNET.FontQuality" /> enumeration values.
            The default is <see cref="!:ScintillaNET.FontQuality.Default" />.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ForeColor">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HighlightGuide">
            <summary>
            Gets or sets the column number of the indentation guide to highlight.
            </summary>
            <returns>The column number of the indentation guide to highlight or 0 if disabled.</returns>
            <remarks>Guides are highlighted in the <see cref="F:ExtendedControls.Components.ScintillaNET.Classes.Style.BraceLight" /> style. Column numbers can be determined by calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetColumn(System.Int32)" />.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HScrollBar">
            <summary>
            Gets or sets whether to display the horizontal scroll bar.
            </summary>
            <returns>true to display the horizontal scroll bar when needed; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IdleStyling">
            <summary>
            Gets or sets the strategy used to perform styling using application idle time.
            </summary>
            <returns>
            One of the <see cref="!:ScintillaNET.IdleStyling" /> enumeration values.
            The default is <see cref="!:ScintillaNET.IdleStyling.None" />.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndentWidth">
            <summary>
            Gets or sets the size of indentation in terms of space characters.
            </summary>
            <returns>The indentation size measured in characters. The default is 0.</returns>
            <remarks> A value of 0 will make the indent width the same as the tab width.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndentationGuides">
            <summary>
            Gets or sets whether to display indentation guides.
            </summary>
            <returns>One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.IndentView" /> enumeration values. The default is <see cref="!:IndentView.None" />.</returns>
            <remarks>The <see cref="F:ExtendedControls.Components.ScintillaNET.Classes.Style.IndentGuide" /> style can be used to specify the foreground and background color of indentation guides.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorCurrent">
            <summary>
            Gets or sets the indicator used in a subsequent call to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorFillRange(System.Int32,System.Int32)" /> or <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorClearRange(System.Int32,System.Int32)" />.
            </summary>
            <returns>The zero-based indicator index to apply when calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorFillRange(System.Int32,System.Int32)" /> or remove when calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorClearRange(System.Int32,System.Int32)" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Indicators">
            <summary>
            Gets a collection of objects for working with indicators.
            </summary>
            <returns>A collection of <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Indicator" /> objects.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorValue">
            <summary>
            Gets or sets the user-defined value used in a subsequent call to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorFillRange(System.Int32,System.Int32)" />.
            </summary>
            <returns>The indicator value to apply when calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorFillRange(System.Int32,System.Int32)" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer">
            <summary>
            Gets or sets the current lexer.
            </summary>
            <returns>One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer" /> enumeration values. The default is <see cref="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.CONTAINER" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.LexerLanguage">
            <summary>
            Gets or sets the current lexer by name.
            </summary>
            <returns>A String representing the current lexer.</returns>
            <remarks>Lexer names are case-sensitive.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.LineEndTypesActive">
            <summary>
            Gets the combined result of the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.LineEndTypesSupported" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.LineEndTypesAllowed" />
            properties to report the line end types actively being interpreted.
            </summary>
            <returns>A bitwise combination of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.LineEndType" /> enumeration.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.LineEndTypesAllowed">
            <summary>
            Gets or sets the line ending types interpreted by the <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
            <returns>
            A bitwise combination of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.LineEndType" /> enumeration.
            The default is <see cref="F:ExtendedControls.Components.ScintillaNET.Enumerations.LineEndType.DEFAULT" />.
            </returns>
            <remarks>The line ending types allowed must also be supported by the current lexer to be effective.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.LineEndTypesSupported">
            <summary>
            Gets the different types of line ends supported by the current lexer.
            </summary>
            <returns>A bitwise combination of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.LineEndType" /> enumeration.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lines">
            <summary>
            Gets a collection representing lines of text in the <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
            <returns>A collection of text lines.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.LinesOnScreen">
            <summary>
            Gets the number of lines that can be shown on screen given a constant
            line height and the space available.
            </summary>
            <returns>
            The number of screen lines which could be displayed (including any partial lines).
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MainSelection">
            <summary>
            Gets or sets the main selection when their are multiple selections.
            </summary>
            <returns>The zero-based main selection index.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Margins">
            <summary>
            Gets a collection representing margins in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
            <returns>A collection of margins.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Markers">
            <summary>
            Gets a collection representing markers in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
            <returns>A collection of markers.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Modified">
            <summary>
            Gets a value indicating whether the document has been modified (is dirty)
            since the last call to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSavePoint" />.
            </summary>
            <returns>true if the document has been modified; otherwise, false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MouseDwellTime">
            <summary>
            Gets or sets the time in milliseconds the mouse must linger to generate a <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DwellStart" /> event.
            </summary>
            <returns>
            The time in milliseconds the mouse must linger to generate a <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DwellStart" /> event
            or <see cref="F:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TimeForever" /> if dwell events are disabled.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MouseSelectionRectangularSwitch">
            <summary>
            Gets or sets the ability to switch to rectangular selection mode while making a selection with the mouse.
            </summary>
            <returns>
            true if the current mouse selection can be switched to a rectangular selection by pressing the ALT key; otherwise, false.
            The default is false.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MultipleSelection">
            <summary>
            Gets or sets whether multiple selection is enabled.
            </summary>
            <returns>
            true if multiple selections can be made by holding the CTRL key and dragging the mouse; otherwise, false.
            The default is false.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MultiPaste">
            <summary>
            Gets or sets the behavior when pasting text into multiple selections.
            </summary>
            <returns>One of the <see cref="!:ScintillaNET.MultiPaste" /> enumeration values. The default is <see cref="!:ScintillaNET.MultiPaste.Once" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Overtype">
            <summary>
            Gets or sets whether to write over text rather than insert it.
            </summary>
            <return>true to write over text; otherwise, false. The default is false.</return>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Padding">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.PasteConvertEndings">
            <summary>
            Gets or sets whether line endings in pasted text are convereted to the document <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.EolMode" />.
            </summary>
            <returns>true to convert line endings in pasted text; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.PhasesDraw">
            <summary>
            Gets or sets the number of phases used when drawing.
            </summary>
            <returns>One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.Phases" /> enumeration values. The default is <see cref="F:ExtendedControls.Components.ScintillaNET.Enumerations.Phases.TWO" />.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ReadOnly">
            <summary>
            Gets or sets whether the document is read-only.
            </summary>
            <returns>true if the document is read-only; otherwise, false. The default is false.</returns>
            <seealso cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ModifyAttempt" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.RectangularSelectionAnchor">
            <summary>
            Gets or sets the anchor position of the rectangular selection.
            </summary>
            <returns>The zero-based document position of the rectangular selection anchor.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.RectangularSelectionAnchorVirtualSpace">
            <summary>
            Gets or sets the amount of anchor virtual space in a rectangular selection.
            </summary>
            <returns>The amount of virtual space past the end of the line offsetting the rectangular selection anchor.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.RectangularSelectionCaret">
            <summary>
            Gets or sets the caret position of the rectangular selection.
            </summary>
            <returns>The zero-based document position of the rectangular selection caret.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.RectangularSelectionCaretVirtualSpace">
            <summary>
            Gets or sets the amount of caret virtual space in a rectangular selection.
            </summary>
            <returns>The amount of virtual space past the end of the line offsetting the rectangular selection caret.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ScrollWidth">
            <summary>
            Gets or sets the range of the horizontal scroll bar.
            </summary>
            <returns>The range in pixels of the horizontal scroll bar. The default is 2000.</returns>
            <remarks>The width will automatically increase as needed when <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ScrollWidthTracking" /> is enabled.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ScrollWidthTracking">
            <summary>
            Gets or sets whether the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ScrollWidth" /> is automatically increased as needed.
            </summary>
            <returns>
            true to automatically increase the horizontal scroll width as needed; otherwise, false.
            The default is true.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SearchFlags">
            <summary>
            Gets or sets the search flags used when searching text.
            </summary>
            <returns>A bitwise combination of <see cref="!:ScintillaNET.SearchFlags" /> values. The default is <see cref="!:ScintillaNET.SearchFlags.None" />.</returns>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SearchInTarget(System.String)" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SelectedText">
            <summary>
            Gets the selected text.
            </summary>
            <returns>The selected text if there is any; otherwise, an empty string.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SelectionEnd">
            <summary>
            Gets or sets the end position of the selection.
            </summary>
            <returns>The zero-based document position where the selection ends.</returns>
            <remarks>
            When getting this property, the return value is <code>Math.Max(<see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AnchorPosition" />, <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CurrentPosition" />)</code>.
            When setting this property, <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CurrentPosition" /> is set to the value specified and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AnchorPosition" /> set to <code>Math.Min(<see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AnchorPosition" />, <paramref name="value" />)</code>.
            The caret is not scrolled into view.
            </remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SelectionStart" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SelectionEolFilled">
            <summary>
            Gets or sets whether to fill past the end of a line with the selection background color.
            </summary>
            <returns>true to fill past the end of the line; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Selections">
            <summary>
            Gets a collection representing multiple selections in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
            <returns>A collection of selections.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SelectionStart">
            <summary>
            Gets or sets the start position of the selection.
            </summary>
            <returns>The zero-based document position where the selection starts.</returns>
            <remarks>
            When getting this property, the return value is <code>Math.Min(<see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AnchorPosition" />, <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CurrentPosition" />)</code>.
            When setting this property, <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AnchorPosition" /> is set to the value specified and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CurrentPosition" /> set to <code>Math.Max(<see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CurrentPosition" />, <paramref name="value" />)</code>.
            The caret is not scrolled into view.
            </remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SelectionEnd" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Status">
            <summary>
            Gets or sets the last internal error code used by Scintilla.
            </summary>
            <returns>
            One of the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Status" /> enumeration values.
            The default is <see cref="!:ScintillaNET.Status.Ok" />.
            </returns>
            <remarks>The status can be reset by setting the property to <see cref="!:ScintillaNET.Status.Ok" />.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Styles">
            <summary>
            Gets a collection representing style definitions in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
            <returns>A collection of style definitions.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TabDrawMode">
            <summary>
            Gets or sets how tab characters are represented when whitespace is visible.
            </summary>
            <returns>
            One of the <see cref="!:ScintillaNET.TabDrawMode" /> enumeration values.
            The default is <see cref="!:TabDrawMode.LongArrow" />.
            </returns>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ViewWhitespace" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TabWidth">
            <summary>
            Gets or sets the width of a tab as a multiple of a space character.
            </summary>
            <returns>The width of a tab measured in characters. The default is 4.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd">
            <summary>
            Gets or sets the end position used when performing a search or replace.
            </summary>
            <returns>The zero-based character position within the document to end a search or replace operation.</returns>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart"/>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SearchInTarget(System.String)" />
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ReplaceTarget(System.String)" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart">
            <summary>
            Gets or sets the start position used when performing a search or replace.
            </summary>
            <returns>The zero-based character position within the document to start a search or replace operation.</returns>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd"/>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SearchInTarget(System.String)" />
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ReplaceTarget(System.String)" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetText">
            <summary>
            Gets the current target text.
            </summary>
            <returns>A String representing the text between <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" />.</returns>
            <remarks>Targets which have a start position equal or greater to the end position will return an empty String.</remarks>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetStart" />
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TargetEnd" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Technology">
            <summary>
            Gets or sets the rendering technology used.
            </summary>
            <returns>
            One of the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Technology" /> enumeration values.
            The default is <see cref="!:ScintillaNET.Technology.Default" />.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Text">
            <summary>
            Gets or sets the current document text in the <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
            <returns>The text displayed in the control.</returns>
            <remarks>Depending on the length of text get or set, this operation can be expensive.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.TextLength">
            <summary>
            Gets the length of the text in the control.
            </summary>
            <returns>The number of characters in the document.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.UseTabs">
            <summary>
            Gets or sets whether to use a mixture of tabs and spaces for indentation or purely spaces.
            </summary>
            <returns>true to use tab characters; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.UseWaitCursor">
            <summary>
            Gets or sets a value indicating whether to use the wait cursor for the current control.
            </summary>
            <returns>true to use the wait cursor for the current control; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ViewEol">
            <summary>
            Gets or sets the visibility of end-of-line characters.
            </summary>
            <returns>true to display end-of-line characters; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ViewWhitespace">
            <summary>
            Gets or sets how to display whitespace characters.
            </summary>
            <returns>One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.WhitespaceMode" /> enumeration values. The default is <see cref="F:ExtendedControls.Components.ScintillaNET.Enumerations.WhitespaceMode.INVISIBLE" />.</returns>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetWhitespaceForeColor(System.Boolean,System.Drawing.Color)" />
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetWhitespaceBackColor(System.Boolean,System.Drawing.Color)" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.VirtualSpaceOptions">
            <summary>
            Gets or sets the ability for the caret to move into an area beyond the end of each line, otherwise known as virtual space.
            </summary>
            <returns>
            A bitwise combination of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.VirtualSpace" /> enumeration.
            The default is <see cref="F:ExtendedControls.Components.ScintillaNET.Enumerations.VirtualSpace.NONE" />.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.VScrollBar">
            <summary>
            Gets or sets whether to display the vertical scroll bar.
            </summary>
            <returns>true to display the vertical scroll bar when needed; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.WhitespaceSize">
            <summary>
            Gets or sets the size of the dots used to mark whitespace.
            </summary>
            <returns>The size of the dots used to mark whitespace. The default is 1.</returns>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ViewWhitespace" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.WordChars">
            <summary>
            Gets or sets the characters considered 'word' characters when using any word-based logic.
            </summary>
            <returns>A string of word characters.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.WrapIndentMode">
            <summary>
            Gets or sets the line wrapping indent mode.
            </summary>
            <returns>
            One of the <see cref="!:ScintillaNET.WrapIndentMode" /> enumeration values.
            The default is <see cref="!:ScintillaNET.WrapIndentMode.Fixed" />.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.WrapMode">
            <summary>
            Gets or sets the line wrapping mode.
            </summary>
            <returns>
            One of the <see cref="!:ScintillaNET.WrapMode" /> enumeration values.
            The default is <see cref="!:ScintillaNET.WrapMode.None" />.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.WrapStartIndent">
            <summary>
            Gets or sets the indented size in pixels of wrapped sublines.
            </summary>
            <returns>The indented size of wrapped sublines measured in pixels. The default is 0.</returns>
            <remarks>
            Setting <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.WrapVisualFlags" /> to <see cref="!:ScintillaNET.WrapVisualFlags.Start" /> will add an
            additional 1 pixel to the value specified.
            </remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.WrapVisualFlags">
            <summary>
            Gets or sets the wrap visual flags.
            </summary>
            <returns>
            A bitwise combination of the <see cref="!:ScintillaNET.WrapVisualFlags" /> enumeration.
            The default is <see cref="!:ScintillaNET.WrapVisualFlags.None" />.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.WrapVisualFlagLocation">
            <summary>
            Gets or sets additional location options when displaying wrap visual flags.
            </summary>
            <returns>
            One of the <see cref="!:ScintillaNET.WrapVisualFlagLocation" /> enumeration values.
            The default is <see cref="!:ScintillaNET.WrapVisualFlagLocation.Default" />.
            </returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.XOffset">
            <summary>
            Gets or sets the horizontal scroll offset.
            </summary>
            <returns>The horizontal scroll offset in pixels.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Zoom">
            <summary>
            Gets or sets the zoom factor.
            </summary>
            <returns>The zoom factor measured in points.</returns>
            <remarks>For best results, values should range from -10 to 20 points.</remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ZoomIn" />
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ZoomOut" />
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCCancelled">
            <summary>
            Occurs when an autocompletion list is cancelled.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCCharDeleted">
            <summary>
            Occurs when the user deletes a character while an autocompletion list is active.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCCompleted">
            <summary>
            Occurs after autocompleted text is inserted.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCSelection">
            <summary>
            Occurs when a user has selected an item in an autocompletion list.
            </summary>
            <remarks>Automatic insertion can be cancelled by calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCCancel" /> from the event handler.</remarks>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BackColorChanged">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BackgroundImageChanged">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BackgroundImageLayoutChanged">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BeforeDelete">
            <summary>
            Occurs when text is about to be deleted.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BeforeInsert">
            <summary>
            Occurs when text is about to be inserted.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BorderStyleChanged">
            <summary>
            Occurs when the value of the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BorderStyle" /> property has changed.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ChangeAnnotation">
            <summary>
            Occurs when an annotation has changed.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CharAdded">
            <summary>
            Occurs when the user enters a text character.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.CursorChanged">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Delete">
            <summary>
            Occurs when text has been deleted from the document.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DoubleClick">
            <summary>
            Occurs when the <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control is double-clicked.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DwellEnd">
            <summary>
            Occurs when the mouse moves or another activity such as a key press ends a <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DwellStart" /> event.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DwellStart">
            <summary>
            Occurs when the mouse is kept in one position (hovers) for the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MouseDwellTime" />.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.FontChanged">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ForeColorChanged">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HotspotClick">
            <summary>
            Occurs when the user clicks on text that is in a style with the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Hotspot" /> property set.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HotspotDoubleClick">
            <summary>
            Occurs when the user double clicks on text that is in a style with the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Hotspot" /> property set.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HotspotReleaseClick">
            <summary>
            Occurs when the user releases a click on text that is in a style with the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Style.Hotspot" /> property set.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorClick">
            <summary>
            Occurs when the user clicks on text that has an indicator.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorRelease">
            <summary>
            Occurs when the user releases a click on text that has an indicator.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Insert">
            <summary>
            Occurs when text has been inserted into the document.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.InsertCheck">
            <summary>
            Occurs when text is about to be inserted. The inserted text can be changed.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MarginClick">
            <summary>
            Occurs when the mouse was clicked inside a margin that was marked as sensitive.
            </summary>
            <remarks>The <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Margin.Sensitive" /> property must be set for a margin to raise this event.</remarks>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MarginRightClick">
            <summary>
            Occurs when the mouse was right-clicked inside a margin that was marked as sensitive.
            </summary>
            <remarks>The <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Margin.Sensitive" /> property and <see cref="!:PopupMode.Text" /> must be set for a margin to raise this event.</remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.UsePopup(ExtendedControls.Components.ScintillaNET.Enumerations.PopupMode)" />
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ModifyAttempt">
            <summary>
            Occurs when a user attempts to change text while the document is in read-only mode.
            </summary>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ReadOnly" />
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.NeedShown">
            <summary>
            Occurs when the control determines hidden text needs to be shown.
            </summary>
            <remarks>An example of when this event might be raised is if the end of line of a contracted fold point is deleted.</remarks>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Paint">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Painted">
            <summary>
            Occurs when painting has just been done.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SavePointLeft">
            <summary>
            Occurs when the document becomes 'dirty'.
            </summary>
            <remarks>The document 'dirty' state can be checked with the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Modified" /> property and reset by calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSavePoint" />.</remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSavePoint" />
            <seealso cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SavePointReached" />
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SavePointReached">
            <summary>
            Occurs when the document 'dirty' flag is reset.
            </summary>
            <remarks>The document 'dirty' state can be reset by calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSavePoint" /> or undoing an action that modified the document.</remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SetSavePoint" />
            <seealso cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SavePointLeft" />
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.StyleNeeded">
            <summary>
            Occurs when the control is about to display or print text and requires styling.
            </summary>
            <remarks>
            This event is only raised when <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Lexer" /> is set to <see cref="!:ScintillaNET.Lexer.Container" />.
            The last position styled correctly can be determined by calling <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetEndStyled" />.
            </remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetEndStyled" />
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.UpdateUI">
            <summary>
            Occurs when the control UI is updated as a result of changes to text (including styling),
            selection, and/or scroll positions.
            </summary>
        </member>
        <member name="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ZoomChanged">
            <summary>
            Occurs when the user zooms the display using the keyboard or the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Zoom" /> property is changed.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> class.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.Annotation">
            <summary>
            Visibility and location of annotations in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Annotation.HIDDEN">
            <summary>
            Annotations are not displayed. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Annotation.STANDARD">
            <summary>
            Annotations are drawn left justified with no adornment.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Annotation.BOXED">
            <summary>
            Annotations are indented to match the text and are surrounded by a box.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Annotation.INDENTED">
            <summary>
            Annotations are indented to match the text.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.AutomaticFold">
            <summary>
            Configuration options for automatic code folding.
            </summary>
            <remarks>This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</remarks>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.AutomaticFold.NONE">
            <summary>
            Automatic folding is disabled. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.AutomaticFold.SHOW">
            <summary>
            Automatically show lines as needed. The <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.NeedShown" /> event is not raised when this value is used.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.AutomaticFold.CLICK">
            <summary>
            Handle clicks in fold margin automatically. The <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MarginClick" /> event is not raised for folding margins when this value is used.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.AutomaticFold.CHANGE">
            <summary>
            Show lines as needed when the fold structure is changed.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.CaretStyle">
            <summary>
            The caret visual style.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.CaretStyle.INVISIBLE">
            <summary>
            The caret is not displayed.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.CaretStyle.LINE">
            <summary>
            The caret is drawn as a vertical line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.CaretStyle.BLOCK">
            <summary>
            The caret is drawn as a block.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.Command">
            <summary>
            Actions which can be performed by the application or bound to keys in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.DEFAULT">
            <summary>
            When bound to keys performs the standard platform behavior.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.NULL">
            <summary>
            Performs no action and when bound to keys prevents them from propagating to the parent window.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEDOWN">
            <summary>
            Moves the caret down one line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEDOWNEXTEND">
            <summary>
            Extends the selection down one line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEDOWNRECTEXTEND">
            <summary>
            Extends the rectangular selection down one line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINESCROLLDOWN">
            <summary>
            Scrolls down one line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEUP">
            <summary>
            Moves the caret up one line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEUPEXTEND">
            <summary>
            Extends the selection up one line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEUPRECTEXTEND">
            <summary>
            Extends the rectangular selection up one line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINESCROLLUP">
            <summary>
            Scrolls up one line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.PARADOWN">
            <summary>
            Moves the caret down one paragraph.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.PARADOWNEXTEND">
            <summary>
            Extends the selection down one paragraph.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.PARAUP">
            <summary>
            Moves the caret up one paragraph.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.PARAUPEXTEND">
            <summary>
            Extends the selection up one paragraph.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.CHARLEFT">
            <summary>
            Moves the caret left one character.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.CHARLEFTEXTEND">
            <summary>
            Extends the selection left one character.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.CHARLEFTRECTEXTEND">
            <summary>
            Extends the rectangular selection left one character.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.CHARRIGHT">
            <summary>
            Moves the caret right one character.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.CHARRIGHTEXTEND">
            <summary>
            Extends the selection right one character.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.CHARRIGHTRECTEXTEND">
            <summary>
            Extends the rectangular selection right one character.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.WORDLEFT">
            <summary>
            Moves the caret to the start of the previous word.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.WORDLEFTEXTEND">
            <summary>
            Extends the selection to the start of the previous word.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.WORDRIGHT">
            <summary>
            Moves the caret to the start of the next word.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.WORDRIGHTEXTEND">
            <summary>
            Extends the selection to the start of the next word.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.WORDLEFTEND">
            <summary>
            Moves the caret to the end of the previous word.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.WORDLEFTENDEXTEND">
            <summary>
            Extends the selection to the end of the previous word.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.WORDRIGHTEND">
            <summary>
            Moves the caret to the end of the next word.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.WORDRIGHTENDEXTEND">
            <summary>
            Extends the selection to the end of the next word.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.WORDPARTLEFT">
            <summary>
            Moves the caret to the previous word segment (case change or underscore).
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.WORDPARTLEFTEXTEND">
            <summary>
            Extends the selection to the previous word segment (case change or underscore).
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.WORDPARTRIGHT">
            <summary>
            Moves the caret to the next word segment (case change or underscore).
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.WORDPARTRIGHTEXTEND">
            <summary>
            Extends the selection to the next word segment (case change or underscore).
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.HOME">
            <summary>
            Moves the caret to the start of the line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.HOMEEXTEND">
            <summary>
            Extends the selection to the start of the line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.HOMERECTEXTEND">
            <summary>
            Extends the rectangular selection to the start of the line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.HOMEDISPLAY">
            <summary>
            Moves the caret to the start of the display line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.HOMEDISPLAYEXTEND">
            <summary>
            Extends the selection to the start of the display line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.HOMEWRAP">
            <summary>
            Moves the caret to the start of the display or document line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.HOMEWRAPEXTEND">
            <summary>
            Extends the selection to the start of the display or document line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.VCHOME">
            <summary>
            Moves the caret to the first non-whitespace character of the line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.VCHOMEEXTEND">
            <summary>
            Extends the selection to the first non-whitespace character of the line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.VCHOMERECTEXTEND">
            <summary>
            Extends the rectangular selection to the first non-whitespace character of the line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.VCHOMEWRAP">
            <summary>
            Moves the caret to the first non-whitespace character of the display or document line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.VCHOMEWRAPEXTEND">
            <summary>
            Extends the selection to the first non-whitespace character of the display or document line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.VCHOMEDISPLAY">
            <summary>
            Moves the caret to the first non-whitespace character of the display line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.VCHOMEDISPLAYEXTEND">
            <summary>
            Extends the selection to the first non-whitespace character of the display line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEEND">
            <summary>
            Moves the caret to the end of the document line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEENDEXTEND">
            <summary>
            Extends the selection to the end of the document line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEENDRECTEXTEND">
            <summary>
            Extends the rectangular selection to the end of the document line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEENDDISPLAY">
            <summary>
            Moves the caret to the end of the display line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEENDDISPLAYEXTEND">
            <summary>
            Extends the selection to the end of the display line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEENDWRAP">
            <summary>
            Moves the caret to the end of the display or document line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEENDWRAPEXTEND">
            <summary>
            Extends the selection to the end of the display or document line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.DOCUMENTSTART">
            <summary>
            Moves the caret to the start of the document.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.DOCUMENTSTARTEXTEND">
            <summary>
            Extends the selection to the start of the document.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.DOCUMENTEND">
            <summary>
            Moves the caret to the end of the document.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.DOCUMENTENDEXTEND">
            <summary>
            Extends the selection to the end of the document.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.PAGEUP">
            <summary>
            Moves the caret up one page.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.PAGEUPEXTEND">
            <summary>
            Extends the selection up one page.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.PAGEUPRECTEXTEND">
            <summary>
            Extends the rectangular selection up one page.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.PAGEDOWN">
            <summary>
            Moves the caret down one page.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.PAGEDOWNEXTEND">
            <summary>
            Extends the selection down one page.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.PAGEDOWNRECTEXTEND">
            <summary>
            Extends the rectangular selection down one page.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.STUTTEREDPAGEUP">
            <summary>
            Moves the caret up one window or page.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.STUTTEREDPAGEUPEXTEND">
            <summary>
            Extends the selection up one window or page.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.STUTTEREDPAGEDOWN">
            <summary>
            Moves the caret down one window or page.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.STUTTEREDPAGEDOWNEXTEND">
            <summary>
            Extends the selection down one window or page.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.DELETEBACK">
            <summary>
            Deletes the character left of the caret.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.DELETEBACKNOTLINE">
            <summary>
            Deletes the character (excluding line breaks) left of the caret.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.DELWORDLEFT">
            <summary>
            Deletes from the caret to the start of the previous word.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.DELWORDRIGHT">
            <summary>
            Deletes from the caret to the start of the next word.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.DELWORDRIGHTEND">
            <summary>
            Deletes from the caret to the end of the next word.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.DELLINELEFT">
            <summary>
            Deletes the characters left of the caret to the start of the line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.DELLINERIGHT">
            <summary>
            Deletes the characters right of the caret to the start of the line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEDELETE">
            <summary>
            Deletes the current line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINECUT">
            <summary>
            Removes the current line and places it on the clipboard.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINECOPY">
            <summary>
            Copies the current line and places it on the clipboard.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINETRANSPOSE">
            <summary>
            Transposes the current and previous lines.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LINEDUPLICATE">
            <summary>
            Duplicates the current line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.LOWERCASE">
            <summary>
            Converts the selection to lowercase.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.UPPERCASE">
            <summary>
            Converts the selection to uppercase.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.CANCEL">
            <summary>
            Cancels autocompletion, calltip display, and drops any additional selections.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.EDITTOGGLEOVERTYPE">
            <summary>
            Toggles overtype. See <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Overtype" />.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.NEWLINE">
            <summary>
            Inserts a newline character.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.FORMFEED">
            <summary>
            Inserts a form feed character.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.TAB">
            <summary>
            Adds a tab (indent) character.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.BACKTAB">
            <summary>
            Removes a tab (indent) character from the start of a line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.SELECTIONDUPLICATE">
            <summary>
            Duplicates the current selection.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.VERTICALCENTERCARET">
            <summary>
            Moves the caret vertically to the center of the screen.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.MOVESELECTEDLINESUP">
            <summary>
            Moves the selected lines up.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.MOVESELECTEDLINESDOWN">
            <summary>
            Moves the selected lines down.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.SCROLLTOSTART">
            <summary>
            Scrolls to the start of the document without changing the selection.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.SCROLLTOEND">
            <summary>
            Scrolls to the end of the document without changing the selection.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.ZOOMIN">
            <summary>
            Command equivalent to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ZoomIn" />.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.ZOOMOUT">
            <summary>
            Command equivalent to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.ZoomOut" />.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.UNDO">
            <summary>
            Command equivalent to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Undo" />.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.REDO">
            <summary>
            Command equivalent to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Redo" />.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.SWAPMAINANCHORCARET">
            <summary>
            Command equivalent to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SwapMainAnchorCaret" />
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.ROTATESELECTION">
            <summary>
            Command equivalent to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.RotateSelection" />
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.MULTIPLESELECTADDNEXT">
            <summary>
            Command equivalent to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MultipleSelectAddNext" />
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.MULTIPLESELECTADDEACH">
            <summary>
            Command equivalent to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MultipleSelectAddEach" />
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Command.SELECTALL">
            <summary>
            Command equivalent to <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.SelectAll" />
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.CopyFormat">
            <summary>
            Specifies the clipboard formats to copy.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.CopyFormat.TEXT">
            <summary>
            Copies text to the clipboard in Unicode format.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.CopyFormat.RTF">
            <summary>
            Copies text to the clipboard in Rich Text Format (RTF).
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.CopyFormat.HTML">
            <summary>
            Copies text to the clipboard in HyperText Markup Language (HTML) format.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.EdgeMode">
            <summary>
            The long line edge display mode.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.EdgeMode.NONE">
            <summary>
            Long lines are not indicated. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.EdgeMode.LINE">
            <summary>
            Long lines are indicated with a vertical line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.EdgeMode.BACKGROUND">
            <summary>
            Long lines are indicated with a background color.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.EdgeMode.MULTILINE">
            <summary>
            Similar to <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Line" /> except allows for multiple vertical lines to be visible using the <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MultiEdgeAddLine(System.Int32,System.Drawing.Color)" /> method.
            </summary>
            <remarks><see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Line" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.EdgeColumn" /> are completely independant of this mode.</remarks>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.EOL">
            <summary>
            End-of-line format.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.EOL.CRLF">
            <summary>
            Carriage Return, Line Feed pair "\r\n" (0x0D0A).
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.EOL.CR">
            <summary>
            Carriage Return '\r' (0x0D).
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.EOL.LF">
            <summary>
            Line Feed '\n' (0x0A).
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.FoldAction">
            <summary>
            Fold actions.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FoldAction.CONTRACT">
            <summary>
            Contract the fold.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FoldAction.EXPAND">
            <summary>
            Expand the fold.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FoldAction.TOGGLE">
            <summary>
            Toggle between contracted and expanded.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.FoldDisplayText">
            <summary>
            Display options for fold text tags.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FoldDisplayText.HIDDEN">
            <summary>
            Do not display the text tags. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FoldDisplayText.STANDARD">
            <summary>
            Display the text tags.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FoldDisplayText.BOXED">
            <summary>
            Display the text tags with a box drawn around them.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.FoldFlags">
            <summary>
            Additional display options for folds.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FoldFlags.LINEBEFOREEXPANDED">
            <summary>
            A line is drawn above if expanded.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FoldFlags.LINEBEFORECONTRACTED">
            <summary>
            A line is drawn above if not expanded.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FoldFlags.LINEAFTEREXPANDED">
            <summary>
            A line is drawn below if expanded.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FoldFlags.LINEAFTERCONTRACTED">
            <summary>
            A line is drawn below if not expanded.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FoldFlags.LEVELNUMBERS">
            <summary>
            Displays the hexadecimal fold levels in the margin to aid with debugging.
            This feature may change in the future.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FoldFlags.LINESTATE">
            <summary>
            Displays the hexadecimal line state in the margin to aid with debugging. This flag
            cannot be used at the same time as the <see cref="!:LevelNumbers" /> flag.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.FontQuality">
            <summary>
            The font quality (anti aliasing method) used to render text.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FontQuality.DEFAULT">
            <summary>
            Specifies that the character quality of the font does not matter; so the lowest quality can be used.
            This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FontQuality.NONANTIALIASED">
            <summary>
            Specifies that anti-aliasing should not be used when rendering text.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FontQuality.ANTIALIASED">
            <summary>
            Specifies that anti-aliasing should be used when rendering text, if the font supports it.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FontQuality.LCDOPTIMIZED">
            <summary>
            Specifies that ClearType anti-aliasing should be used when rendering text, if the font supports it.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.IdleStyling">
            <summary>
            Possible strategies for styling text using application idle time.
            </summary>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IdleStyling" />
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IdleStyling.NONE">
            <summary>
            Syntax styling is performed for all the currently visible text before displaying it.
            This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IdleStyling.TOVISIBLE">
            <summary>
            A small amount of styling is performed before display and then further styling is performed incrementally in the background as an idle-time task.
            This can improve initial display/scroll performance, but may result in the text initially appearing uncolored and then, some time later, it is colored.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IdleStyling.AFTERVISIBLE">
            <summary>
            Text after the currently visible portion may be styled as an idle-time task.
            This will not improve initial display/scroll performance, but may improve subsequent display/scroll performance.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IdleStyling.ALL">
            <summary>
            Text before and after the current visible text.
            This is a combination of <see cref="!:ToVisible" /> and <see cref="!:AfterVisible" />.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.IndentView">
            <summary>
            Options for displaying indentation guides in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
            <remarks>Indentation guides can be styled using the <see cref="F:ExtendedControls.Components.ScintillaNET.Classes.Style.IndentGuide" /> style.</remarks>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndentView.NONE">
            <summary>
            No indentation guides are shown. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndentView.REAL">
            <summary>
            Indentation guides are shown inside real indentation whitespace.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndentView.LOOKFORWARD">
            <summary>
            Indentation guides are shown beyond the actual indentation up to the level of the next non-empty line.
            If the previous non-empty line was a fold header then indentation guides are shown for one more level of indent than that line.
            This setting is good for Python.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndentView.LOOKBOTH">
            <summary>
            Indentation guides are shown beyond the actual indentation up to the level of the next non-empty line or previous non-empty line whichever is the greater.
            This setting is good for most languages.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorFlags">
            <summary>
            Flags associated with a <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Indicator" />.
            </summary>
            <remarks>This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</remarks>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorFlags.NONE">
            <summary>
            No flags. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorFlags.VALUEFORE">
            <summary>
            When set, will treat an indicator value as a RGB color that has been OR'd with <see cref="F:ExtendedControls.Components.ScintillaNET.Classes.Indicator.ValueBit" />
            and will use that instead of the value specified in the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.ForeColor" /> property. This allows
            an indicator to display more than one color.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle">
            <summary>
            The visual appearance of an indicator.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.PLAIN">
            <summary>
            Underlined with a single, straight line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.SQUIGGLE">
            <summary>
            A squiggly underline. Requires 3 pixels of descender space.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.TT">
            <summary>
            A line of small T shapes.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.DIAGONAL">
            <summary>
            Diagonal hatching.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.STRIKE">
            <summary>
            Strike out.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.HIDDEN">
            <summary>
            An indicator with no visual effect.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.BOX">
            <summary>
            A rectangle around the text.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.ROUNDBOX">
            <summary>
            A rectangle around the text with rounded corners. The rectangle outline and fill transparencies can be adjusted using
            <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.Alpha" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.OutlineAlpha" />.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.STRAIGHTBOX">
            <summary>
            A rectangle around the text. The rectangle outline and fill transparencies can be adjusted using
            <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.Alpha" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.OutlineAlpha"/>.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.DASH">
            <summary>
            A dashed underline.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.DOTS">
            <summary>
            A dotted underline.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.SQUIGGLELOW">
            <summary>
            Similar to <see cref="!:Squiggle" /> but only using 2 vertical pixels so will fit under small fonts.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.DOTBOX">
            <summary>
            A dotted rectangle around the text. The dots transparencies can be adjusted using
            <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.Alpha" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.OutlineAlpha" />.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.COMPOSITIONTHICK">
            <summary>
            A 2-pixel thick underline with 1 pixel insets on either side.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.COMPOSITIONTHIN">
            <summary>
            A 1-pixel thick underline with 1 pixel insets on either side.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.FULLBOX">
            <summary>
            A rectangle around the entire character area. The rectangle outline and fill transparencies can be adjusted using
            <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.Alpha" /> and <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Indicator.OutlineAlpha"/>.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.TEXTFORE">
            <summary>
            An indicator that will change the foreground color of text to the foreground color of the indicator.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.POINT">
            <summary>
            A triangle below the start of the indicator range.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.IndicatorStyle.POINTCHARACTER">
            <summary>
            A triangle below the center of the first character of the indicator range.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer">
            <summary>
            Specifies the lexer to use for syntax highlighting in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.CONTAINER">
            <summary>
            Lexing is performed by the <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control container (host) using
            the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.StyleNeeded" /> event.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.NULL">
            <summary>
            No lexing should be performed.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.ADA">
            <summary>
            The Ada (95) language lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.ASM">
            <summary>
            The assembly language lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.BATCH">
            <summary>
            The batch file lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.CPP">
            <summary>
            The C language family (C++, C, C#, Java, JavaScript, etc...) lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.CSS">
            <summary>
            The Cascading Style Sheets (CSS, SCSS) lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.FORTRAN">
            <summary>
            The Fortran language lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.FREEBASIC">
            <summary>
            The FreeBASIC language lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.HTML">
            <summary>
            The HyperText Markup Language (HTML) lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.JSON">
            <summary>
            JavaScript Object Notation (JSON) lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.LISP">
            <summary>
            The Lisp language lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.LUA">
            <summary>
            The Lua scripting language lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.MATLAB">
            <summary>
            The Matlab scripting language lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.PASCAL">
            <summary>
            The Pascal language lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.PERL">
            <summary>
            The Perl language lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.PHPSCRIPT">
            <summary>
            The PHP: Hypertext Preprocessor (PHP) script lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.POWERSHELL">
            <summary>
            PowerShell script lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.PROPERTIES">
            <summary>
            Properties file (INI) lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.PUREBASIC">
            <summary>
            The PureBasic language lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.PYTHON">
            <summary>
            The Python language lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.RUBY">
            <summary>
            The Ruby language lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.SMALLTALK">
            <summary>
            The SmallTalk language lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.SQL">
            <summary>
            The Structured Query Language (SQL) lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.VB">
            <summary>
            The Visual Basic (VB) lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.VBSCRIPT">
            <summary>
            The Visual Basic Script (VBScript) lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.VERILOG">
            <summary>
            The Verilog hardware description language lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.XML">
            <summary>
            The Extensible Markup Language (XML) lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.BLITZBASIC">
            <summary>
            The Blitz (Blitz3D, BlitzMax, etc...) variant of Basic lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.MARKDOWN">
            <summary>
            The Markdown syntax lexer.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Lexer.R">
            <summary>
            The R programming language lexer.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.FoldLevelFlags">
            <summary>
            Flags for additional line fold level behavior.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FoldLevelFlags.WHITE">
            <summary>
            Indicates that the line is blank and should be treated slightly different than its level may indicate;
            otherwise, blank lines should generally not be fold points.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.FoldLevelFlags.HEADER">
            <summary>
            Indicates that the line is a header (fold point).
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.LineEndType">
            <summary>
            Line endings types supported by lexers and allowed by a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.LineEndTypesSupported" />
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.LineEndTypesAllowed" />
            <seealso cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.LineEndTypesActive" />
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.LineEndType.DEFAULT">
            <summary>
            ASCII line endings. Carriage Return, Line Feed pair "\r\n" (0x0D0A); Carriage Return '\r' (0x0D); Line Feed '\n' (0x0A).
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.LineEndType.UNICODE">
            <summary>
            Unicode line endings. Next Line (0x0085); Line Separator (0x2028); Paragraph Separator (0x2029).
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.ListCompletionMethod">
            <summary>
            Indicates how an autocompletion occurred.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.ListCompletionMethod.FILLUP">
            <summary>
            A fillup character (see <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCSetFillUps(System.String)" />) triggered the completion.
            The character used is indicated by the <see cref="!:AutoCSelectionEventArgs.Char" /> property.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.ListCompletionMethod.DOUBLECLICK">
            <summary>
            A double-click triggered the completion.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.ListCompletionMethod.TAB">
            <summary>
            A tab key or the <see cref="!:ScintillaNET.Command.Tab" /> command triggered the completion.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.ListCompletionMethod.NEWLINE">
            <summary>
            A new line or <see cref="!:ScintillaNET.Command.NewLine" /> command triggered the completion.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.ListCompletionMethod.COMMAND">
            <summary>
            The <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCSelect(System.String)" /> method triggered the completion.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.MarginCursor">
            <summary>
            The display of a cursor when over a margin.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarginCursor.ARROW">
            <summary>
            A normal arrow.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarginCursor.REVERSEARROW">
            <summary>
            A reversed arrow.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.MarginOptions">
            <summary>
            Flags used to define margin options.
            </summary>
            <remarks>This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</remarks>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarginOptions.NONE">
            <summary>
            No options. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarginOptions.SUBLINESELECT">
            <summary>
            Lines selected by clicking on the margin will select only the subline of wrapped text.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.MarginType">
            <summary>
            The behavior and appearance of a margin.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarginType.SYMBOL">
            <summary>
            Margin can display symbols.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarginType.NUMBER">
            <summary>
            Margin displays line numbers.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarginType.BACKCOLOR">
            <summary>
            Margin can display symbols and has a background color equivalent to <see cref="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Default" /> background color.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarginType.FORECOLOR">
            <summary>
            Margin can display symbols and has a background color equivalent to <see cref="F:ExtendedControls.Components.ScintillaNET.Classes.Style.Default"/> foreground color.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarginType.TEXT">
            <summary>
            Margin can display application defined text.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarginType.RIGHTTEXT">
            <summary>
            Margin can display application defined text right-justified.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarginType.COLOR">
            <summary>
            Margin can display symbols and has a background color specified using the <see cref="P:ExtendedControls.Components.ScintillaNET.Classes.Margin.BackColor" /> property.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol">
            <summary>
            The symbol displayed by a <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Marker" />
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.CIRCLE">
            <summary>
            A circle. This symbol is typically used to indicate a breakpoint.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.ROUNDRECT">
            <summary>
            A rectangel with rounded edges.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.ARROW">
            <summary>
            An arrow (triangle) pointing right.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.SMALLRECT">
            <summary>
            A rectangle that is wider than it is tall.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.SHORTARROW">
            <summary>
            An arrow and tail pointing right. This symbol is typically used to indicate the current line of execution.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.EMPTY">
            <summary>
            An invisible symbol useful for tracking the movement of lines.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.ARROWDOWN">
            <summary>
            An arrow (triangle) pointing down.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.MINUS">
            <summary>
            A minus (-) symbol.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.PLUS">
            <summary>
            A plus (+) symbol.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.VLINE">
            <summary>
            A thin vertical line. This symbol is typically used on the middle line of an expanded fold block.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.LCORNER">
            <summary>
            A thin 'L' shaped line. This symbol is typically used on the last line of an expanded fold block.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.TCORNER">
            <summary>
            A thin 't' shaped line. This symbol is typically used on the last line of an expanded nested fold block.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.BOXPLUS">
            <summary>
            A plus (+) symbol with surrounding box. This symbol is typically used on the first line of a collapsed fold block.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.BOXPLUSCONNECTED">
            <summary>
            A plus (+) symbol with surrounding box and thin vertical line. This symbol is typically used on the first line of a collapsed nested fold block.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.BOXMINUS">
            <summary>
            A minus (-) symbol with surrounding box. This symbol is typically used on the first line of an expanded fold block.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.BOXMINUSCONNECTED">
            <summary>
            A minus (-) symbol with surrounding box and thin vertical line. This symbol is typically used on the first line of an expanded nested fold block.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.LCORNERCURVE">
            <summary>
            Similar to a <see cref="!:LCorner" />, but curved.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.TCORNERCURVE">
            <summary>
            Similar to a <see cref="!:TCorner" />, but curved.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.CIRCLEPLUS">
            <summary>
            Similar to a <see cref="!:BoxPlus" /> but surrounded by a circle.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.CIRCLEPLUSCONNECTED">
            <summary>
            Similar to a <see cref="!:BoxPlusConnected" />, but surrounded by a circle.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.CIRCLEMINUS">
            <summary>
            Similar to a <see cref="!:BoxMinus" />, but surrounded by a circle.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.CIRCLEMINUSCONNECTED">
            <summary>
            Similar to a <see cref="!:BoxMinusConnected" />, but surrounded by a circle.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.BACKGROUND">
            <summary>
            A special marker that displays no symbol but will affect the background color of the line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.DOTDOTDOT">
            <summary>
            Three dots (ellipsis).
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.ARROWS">
            <summary>
            Three bracket style arrows.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.FULLRECT">
            <summary>
            A rectangle occupying the entire marker space.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.LEFTRECT">
            <summary>
            A rectangle occupying only the left edge of the marker space.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.AVAILABLE">
            <summary>
            A special marker left available to plugins.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.UNDERLINE">
            <summary>
            A special marker that displays no symbol but will underline the current line text.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.RGBAIMAGE">
            <summary>
            A user-defined image. Images can be set using the <see cref="M:ExtendedControls.Components.ScintillaNET.Classes.Marker.DefineRgbaImage(System.Drawing.Bitmap)" /> method.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MarkerSymbol.BOOKMARK">
            <summary>
            A left-rotated bookmark.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.ModificationSource">
            <summary>
            The source of a modification
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.ModificationSource.USER">
            <summary>
            Modification is the result of a user operation.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.ModificationSource.UNDO">
            <summary>
            Modification is the result of an undo operation.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.ModificationSource.REDO">
            <summary>
            Modification is the result of a redo operation.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.MultiPaste">
            <summary>
            Specifies the behavior of pasting into multiple selections.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MultiPaste.ONCE">
            <summary>
            Pasting into multiple selections only pastes to the main selection. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.MultiPaste.EACH">
            <summary>
            Pasting into multiple selections pastes into each selection.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.Order">
            <summary>
            The sorting order for autocompletion lists.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Order.PRESORTED">
            <summary>
            Requires that an autocompletion lists be sorted in alphabetical order. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Order.PERFORMSORT">
            <summary>
            Instructs a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control to perform an alphabetical sort of autocompletion lists.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Order.CUSTOM">
            <summary>
            User-defined order.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.Phases">
            <summary>
            The number of phases used when drawing.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Phases.ONE">
            <summary>
            Drawing is done in a single phase. This is the fastest but provides no support for kerning.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Phases.TWO">
            <summary>
            Drawing is done in two phases; the background first and then the text. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Phases.MULTIPLE">
            <summary>
            Drawing is done in multiple phases; once for each feature. This is the slowest but allows
            extreme ascenders and descenders to overflow into adjacent lines.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.PopupMode">
            <summary>
            Behavior of the standard edit control context menu.
            </summary>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.UsePopup(ExtendedControls.Components.ScintillaNET.Enumerations.PopupMode)" />
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.PopupMode.NEVER">
            <summary>
            Never show the default editing menu.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.PopupMode.ALL">
            <summary>
            Show default editing menu if clicking on the control.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.PopupMode.TEXT">
            <summary>
            Show default editing menu only if clicking on text area.
            </summary>
            <remarks>To receive the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MarginRightClick" /> event, this value must be used.</remarks>
            <seealso cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MarginRightClick" />
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.PropertyType">
            <summary>
            Lexer property types.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.PropertyType.BOOLEAN">
            <summary>
            A Boolean property. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.PropertyType.INTEGER">
            <summary>
            An integer property.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.PropertyType.STRING">
            <summary>
            A string property.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.SearchFlags">
            <summary>
            Specifies the how patterns are matched when performing a search in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
            <remarks>This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</remarks>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.SearchFlags.NONE">
            <summary>
            Matches every instance of the search string.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.SearchFlags.MATCHCASE">
            <summary>
            A match only occurs with text that matches the case of the search string.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.SearchFlags.WHOLEWORD">
            <summary>
            A match only occurs if the characters before and after are not word characters.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.SearchFlags.WORDSTART">
            <summary>
            A match only occurs if the character before is not a word character.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.SearchFlags.REGEX">
            <summary>
            The search string should be interpreted as a regular expression.
            Regular expressions will only match ranges within a single line, never matching over multiple lines.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.SearchFlags.POSIX">
            <summary>
            Treat regular expression in a more POSIX compatible manner by interpreting bare '(' and ')' for tagged sections rather than "\(" and "\)".
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.SearchFlags.CXX11REGEX">
            <summary>
            The search string should be interpreted as a regular expression and use the C++11 &lt;regex&gt; standard library engine.
            The <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Status" /> property can queried to determine if the regular expression is invalid.
            The ECMAScript flag is set on the regex object and documents will exhibit Unicode-compliant behaviour.
            Regular expressions will only match ranges within a single line, never matching over multiple lines.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.Status">
            <summary>
            Possible status codes returned by the <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Status" /> property.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Status.OK">
            <summary>
            No failures.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Status.FAILURE">
            <summary>
            Generic failure.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Status.BADALLOC">
            <summary>
            Memory is exhausted.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Status.WARNREGEX">
            <summary>
            Regular expression is invalid.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.StyleCase">
            <summary>
            The possible casing styles of a style.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.StyleCase.MIXED">
            <summary>
            Display the text normally.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.StyleCase.UPPER">
            <summary>
            Display the text in upper case.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.StyleCase.LOWER">
            <summary>
            Display the text in lower case.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.StyleCase.CAMEL">
            <summary>
            Display the text in camel case.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.TabDrawMode">
            <summary>
            Specifies how tab characters are drawn when whitespace is visible.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.TabDrawMode.LONGARROW">
            <summary>
            The default mode of an arrow stretching until the tabstop.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.TabDrawMode.STRIKEOUT">
            <summary>
            A horizontal line stretching until the tabstop.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.Technology">
            <summary>
            The rendering technology used in a <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Technology.DEFAULT">
            <summary>
            Renders text using GDI. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.Technology.DIRECTWRITE">
            <summary>
            Renders text using Direct2D/DirectWrite. Since Direct2D buffers drawing,
            Scintilla's buffering can be turned off with <see cref="P:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BufferedDraw" />.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.UpdateChange">
            <summary>
            Specifies the change that triggered a <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.UpdateUI" /> event.
            </summary>
            <remarks>This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</remarks>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.UpdateChange.CONTENT">
            <summary>
            Contents, styling or markers have been changed.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.UpdateChange.SELECTION">
            <summary>
            Selection has been changed.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.UpdateChange.VSCROLL">
            <summary>
            Scrolled vertically.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.UpdateChange.HSCROLL">
            <summary>
            Scrolled horizontally.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.VirtualSpace">
            <summary>
            Enables virtual space for rectangular selections or in other circumstances or in both.
            </summary>
            <remarks>This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</remarks>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.VirtualSpace.NONE">
            <summary>
            Virtual space is not enabled. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.VirtualSpace.RECTANGULARSELECTION">
            <summary>
            Virtual space is enabled for rectangular selections.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.VirtualSpace.USERACCESSIBLE">
            <summary>
            Virtual space is user accessible.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.VirtualSpace.NOWRAPLINESTART">
            <summary>
            Prevents left arrow movement and selection from wrapping to the previous line.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.WhitespaceMode">
            <summary>
            Specifies the display mode of whitespace characters.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WhitespaceMode.INVISIBLE">
            <summary>
            The normal display mode with whitespace displayed as an empty background color.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WhitespaceMode.VISIBLEALWAYS">
            <summary>
            Whitespace characters are drawn as dots and arrows.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WhitespaceMode.VISIBLEAFTERINDENT">
            <summary>
            Whitespace used for indentation is displayed normally but after the first visible character,
            it is shown as dots and arrows.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WhitespaceMode.VISIBLEONLYINDENT">
            <summary>
            Whitespace used for indentation is displayed as dots and arrows.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.WrapIndentMode">
            <summary>
            Indenting behavior of wrapped sublines.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WrapIndentMode.FIXED">
            <summary>
            Wrapped sublines aligned to left of window plus the amount set by <see cref="!:ScintillaNET.Scintilla.WrapStartIndent" />.
            This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WrapIndentMode.SAME">
            <summary>
            Wrapped sublines are aligned to first subline indent.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WrapIndentMode.INDENT">
            <summary>
            Wrapped sublines are aligned to first subline indent plus one more level of indentation.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.WrapMode">
            <summary>
            The line wrapping strategy.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WrapMode.NONE">
            <summary>
            Line wrapping is disabled. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WrapMode.WORD">
            <summary>
            Lines are wrapped on word or style boundaries.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WrapMode.CHAR">
            <summary>
            Lines are wrapped between any character.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WrapMode.WHITESPACE">
            <summary>
            Lines are wrapped on whitespace.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.WrapVisualFlagLocation">
            <summary>
            Additional location options for line wrapping visual indicators.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WrapVisualFlagLocation.DEFAULT">
            <summary>
            Wrap indicators are drawn near the border. This is the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WrapVisualFlagLocation.ENDBYTEXT">
            <summary>
            Wrap indicators are drawn at the end of sublines near the text.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WrapVisualFlagLocation.STARTBYTEXT">
            <summary>
            Wrap indicators are drawn at the beginning of sublines near the text.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Enumerations.WrapVisualFlags">
            <summary>
            The visual indicator used on a wrapped line.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WrapVisualFlags.NONE">
            <summary>
            No visual indicator is displayed. This the default.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WrapVisualFlags.END">
            <summary>
            A visual indicator is displayed at th end of a wrapped subline.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WrapVisualFlags.START">
            <summary>
            A visual indicator is displayed at the beginning of a subline.
            The subline is indented by 1 pixel to make room for the display.
            </summary>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Enumerations.WrapVisualFlags.MARGIN">
            <summary>
            A visual indicator is displayed in the number margin.
            </summary>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.AutoCSelectionEventArgs">
            <summary>
            Provides data for the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCSelection" /> event.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.AutoCSelectionEventArgs.Char">
            <summary>
            Gets the fillup character that caused the completion.
            </summary>
            <returns>The fillup character used to cause the completion; otherwise, 0.</returns>
            <remarks>Only a <see cref="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.AutoCSelectionEventArgs.ListCompletionMethod" /> of <see cref="!:ScintillaNET.ListCompletionMethod.FillUp" /> will return a non-zero character.</remarks>
            <seealso cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.AutoCSetFillUps(System.String)" />
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.AutoCSelectionEventArgs.ListCompletionMethod">
            <summary>
            Gets a value indicating how the completion occurred.
            </summary>
            <returns>One of the <see cref="!:ScintillaNET.ListCompletionMethod" /> enumeration values.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.AutoCSelectionEventArgs.Position">
            <summary>
            Gets the start position of the word being completed.
            </summary>
            <returns>The zero-based document position of the word being completed.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.AutoCSelectionEventArgs.Text">
            <summary>
            Gets the text of the selected autocompletion item.
            </summary>
            <returns>The selected autocompletion item text.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.AutoCSelectionEventArgs.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32,System.IntPtr,System.Int32,ExtendedControls.Components.ScintillaNET.Enumerations.ListCompletionMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.AutoCSelectionEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that generated this event.</param>
            <param name="bytePosition">The zero-based byte position within the document of the word being completed.</param>
            <param name="text">A pointer to the selected autocompletion text.</param>
            <param name="ch">The character that caused the completion.</param>
            <param name="listCompletionMethod">A value indicating the way in which the completion occurred.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.BeforeModificationEventArgs">
            <summary>
            Provides data for the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BeforeInsert" /> and <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.BeforeDelete" /> events.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.BeforeModificationEventArgs.Position">
            <summary>
            Gets the zero-based document position where the modification will occur.
            </summary>
            <returns>The zero-based character position within the document where text will be inserted or deleted.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.BeforeModificationEventArgs.Source">
            <summary>
            Gets the source of the modification.
            </summary>
            <returns>One of the <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.ModificationSource" /> enum values.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.BeforeModificationEventArgs.Text">
            <summary>
            Gets the text being inserted or deleted.
            </summary>
            <returns>
            The text about to be inserted or deleted, or null when the the source of the modification is an undo/redo operation.
            </returns>
            <remarks>
            This property will return null when <see cref="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.BeforeModificationEventArgs.Source" /> is <see cref="F:ExtendedControls.Components.ScintillaNET.Enumerations.ModificationSource.UNDO" /> or <see cref="F:ExtendedControls.Components.ScintillaNET.Enumerations.ModificationSource.REDO" />.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.BeforeModificationEventArgs.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,ExtendedControls.Components.ScintillaNET.Enumerations.ModificationSource,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.BeforeModificationEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that generated this event.</param>
            <param name="source">The source of the modification.</param>
            <param name="bytePosition">The zero-based byte position within the document where text is being modified.</param>
            <param name="byteLength">The length in bytes of the text being modified.</param>
            <param name="text">A pointer to the text being inserted.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ChangeAnnotationEventArgs">
            <summary>
            Provides data for the <see cref="!:Scintilla.ChangeAnnotation" /> event.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ChangeAnnotationEventArgs.Line">
            <summary>
            Gets the line index where the annotation changed.
            </summary>
            <returns>The zero-based line index where the annotation change occurred.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ChangeAnnotationEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ChangeAnnotationEventArgs" /> class.
            </summary>
            <param name="line">The zero-based line index of the annotation that changed.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.CharAddedEventArgs">
            <summary>
            Provides data for the <see cref="!:Scintilla.CharAdded" /> event.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.CharAddedEventArgs.Char">
            <summary>
            Gets the text character added to a <see cref="!:Scintilla" /> control.
            </summary>
            <returns>The character added.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.CharAddedEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.CharAddedEventArgs" /> class.
            </summary>
            <param name="ch">The character added.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DoubleClickEventArgs">
            <summary>
            Provides data for the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DoubleClick" /> event.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DoubleClickEventArgs.Line">
            <summary>
            Gets the line double clicked.
            </summary>
            <returns>The zero-based index of the double clicked line.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DoubleClickEventArgs.Modifiers">
            <summary>
            Gets the modifier keys (SHIFT, CTRL, ALT) held down when double clicked.
            </summary>
            <returns>A bitwise combination of the Keys enumeration indicating the modifier keys.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DoubleClickEventArgs.Position">
            <summary>
            Gets the zero-based document position of the text double clicked.
            </summary>
            <returns>
            The zero-based character position within the document of the double clicked text;
            otherwise, -1 if not a document position.
            </returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DoubleClickEventArgs.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Windows.Forms.Keys,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DoubleClickEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that generated this event.</param>
            <param name="modifiers">The modifier keys that where held down at the time of the double click.</param>
            <param name="bytePosition">The zero-based byte position of the double clicked text.</param>
            <param name="line">The zero-based line index of the double clicked text.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DwellEventArgs">
            <summary>
            Provides data for the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DwellStart" /> and <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.DwellEnd" /> events.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DwellEventArgs.Position">
            <summary>
            Gets the zero-based document position where the mouse pointer was lingering.
            </summary>
            <returns>The nearest zero-based document position to where the mouse pointer was lingering.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DwellEventArgs.X">
            <summary>
            Gets the x-coordinate of the mouse pointer.
            </summary>
            <returns>The x-coordinate of the mouse pointer relative to the <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DwellEventArgs.Y">
            <summary>
            Gets the y-coordinate of the mouse pointer.
            </summary>
            <returns>The y-coordinate of the mouse pointer relative to the <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DwellEventArgs.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.DwellEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that generated this event.</param>
            <param name="bytePosition">The zero-based byte position within the document where the mouse pointer was lingering.</param>
            <param name="x">The x-coordinate of the mouse pointer relative to the <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.</param>
            <param name="y">The y-coordinate of the mouse pointer relative to the <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.HotspotClickEventArgs">
            <summary>
            Provides data for the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HotspotClick" />, <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HotspotDoubleClick" />,
            and <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HotspotReleaseClick" /> events.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.HotspotClickEventArgs.Modifiers">
            <summary>
            Gets the modifier keys (SHIFT, CTRL, ALT) held down when clicked.
            </summary>
            <returns>A bitwise combination of the Keys enumeration indicating the modifier keys.</returns>
            <remarks>Only the state of the CTRL key is reported in the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.HotspotReleaseClick" /> event.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.HotspotClickEventArgs.Position">
            <summary>
            Gets the zero-based document position of the text clicked.
            </summary>
            <returns>The zero-based character position within the document of the clicked text.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.HotspotClickEventArgs.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Windows.Forms.Keys,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.HotspotClickEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that generated this event.</param>
            <param name="modifiers">The modifier keys that where held down at the time of the click.</param>
            <param name="bytePosition">The zero-based byte position of the clicked text.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.IndicatorClickEventArgs">
            <summary>
            Provides data for the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorClick" /> event.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.IndicatorClickEventArgs.Modifiers">
            <summary>
            Gets the modifier keys (SHIFT, CTRL, ALT) held down when clicked.
            </summary>
            <returns>A bitwise combination of the Keys enumeration indicating the modifier keys.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.IndicatorClickEventArgs.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Windows.Forms.Keys,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.IndicatorClickEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that generated this event.</param>
            <param name="modifiers">The modifier keys that where held down at the time of the click.</param>
            <param name="bytePosition">The zero-based byte position of the clicked text.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.IndicatorReleaseEventArgs">
            <summary>
            Provides data for the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.IndicatorRelease" /> event.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.IndicatorReleaseEventArgs.Position">
            <summary>
            Gets the zero-based document position of the text clicked.
            </summary>
            <returns>The zero-based character position within the document of the clicked text.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.IndicatorReleaseEventArgs.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.IndicatorReleaseEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that generated this event.</param>
            <param name="bytePosition">The zero-based byte position of the clicked text.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.InsertCheckEventArgs">
            <summary>
            Provides data for the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.InsertCheck" /> event.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.InsertCheckEventArgs.Position">
            <summary>
            Gets the zero-based document position where text will be inserted.
            </summary>
            <returns>The zero-based character position within the document where text will be inserted.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.InsertCheckEventArgs.Text">
            <summary>
            Gets or sets the text being inserted.
            </summary>
            <returns>The text being inserted into the document.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.InsertCheckEventArgs.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.InsertCheckEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that generated this event.</param>
            <param name="bytePosition">The zero-based byte position within the document where text is being inserted.</param>
            <param name="byteLength">The length in bytes of the inserted text.</param>
            <param name="text">A pointer to the text being inserted.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.MarginClickEventArgs">
            <summary>
            Provides data for the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.MarginClick" /> event.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.MarginClickEventArgs.Margin">
            <summary>
            Gets the margin clicked.
            </summary>
            <returns>The zero-based index of the clicked margin.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.MarginClickEventArgs.Modifiers">
            <summary>
            Gets the modifier keys (SHIFT, CTRL, ALT) held down when the margin was clicked.
            </summary>
            <returns>A bitwise combination of the Keys enumeration indicating the modifier keys.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.MarginClickEventArgs.Position">
            <summary>
            Gets the zero-based document position where the line ajacent to the clicked margin starts.
            </summary>
            <returns>The zero-based character position within the document of the start of the line adjacent to the margin clicked.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.MarginClickEventArgs.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Windows.Forms.Keys,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.MarginClickEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that generated this event.</param>
            <param name="modifiers">The modifier keys that where held down at the time of the margin click.</param>
            <param name="bytePosition">The zero-based byte position within the document where the line adjacent to the clicked margin starts.</param>
            <param name="margin">The zero-based index of the clicked margin.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ModificationEventArgs">
            <summary>
            Provides data for the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Insert" /> and <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.Delete" /> events.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ModificationEventArgs.LinesAdded">
            <summary>
            Gets the number of lines added or removed.
            </summary>
            <returns>The number of lines added to the document when text is inserted, or the number of lines removed from the document when text is deleted.</returns>
            <remarks>When lines are deleted the return value will be negative.</remarks>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ModificationEventArgs.Text">
            <summary>
            Gets the text that was inserted or deleted.
            </summary>
            <returns>The text inserted or deleted from the document.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ModificationEventArgs.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,ExtendedControls.Components.ScintillaNET.Enumerations.ModificationSource,System.Int32,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.ModificationEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that generated this event.</param>
            <param name="source">The source of the modification.</param>
            <param name="bytePosition">The zero-based byte position within the document where text was modified.</param>
            <param name="byteLength">The length in bytes of the inserted or deleted text.</param>
            <param name="text">>A pointer to the text inserted or deleted.</param>
            <param name="linesAdded">The number of lines added or removed (delta).</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.NeedShownEventArgs">
            <summary>
            Provides data for the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.NeedShown" /> event.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.NeedShownEventArgs.Length">
            <summary>
            Gets the length of the text that needs to be shown.
            </summary>
            <returns>The length of text starting at <see cref="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.NeedShownEventArgs.Position" /> that needs to be shown.</returns>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.NeedShownEventArgs.Position">
            <summary>
            Gets the zero-based document position where text needs to be shown.
            </summary>
            <returns>The zero-based document position where the range of text to be shown starts.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.NeedShownEventArgs.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.NeedShownEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that generated this event.</param>
            <param name="bytePosition">The zero-based byte position within the document where text needs to be shown.</param>
            <param name="byteLength">The length in bytes of the text that needs to be shown.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.StyleNeededEventArgs">
            <summary>
            Provides data for the <see cref="E:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.StyleNeeded" /> event.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.StyleNeededEventArgs.Position">
            <summary>
            Gets the document position where styling should end. The <see cref="M:ExtendedControls.Components.ScintillaNET.Controls.Scintilla.GetEndStyled" /> method
            indicates the last position styled correctly and the starting place for where styling should begin.
            </summary>
            <returns>The zero-based position within the document to perform styling up to.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.StyleNeededEventArgs.#ctor(ExtendedControls.Components.ScintillaNET.Controls.Scintilla,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.StyleNeededEventArgs" /> class.
            </summary>
            <param name="scintilla">The <see cref="T:ExtendedControls.Components.ScintillaNET.Controls.Scintilla" /> control that generated this event.</param>
            <param name="bytePosition">The zero-based byte position within the document to stop styling.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.UpdateUIEventArgs">
            <summary>
            Provides data for the <see cref="!:Scintilla.UpdateUI" /> event.
            </summary>
        </member>
        <member name="P:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.UpdateUIEventArgs.Change">
            <summary>
            The UI update that occurred.
            </summary>
            <returns>A bitwise combination of <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.UpdateChange" /> values specifying the UI update that occurred.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.UpdateUIEventArgs.#ctor(ExtendedControls.Components.ScintillaNET.Enumerations.UpdateChange)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.Components.ScintillaNET.EventArgumentHandlers.UpdateUIEventArgs" /> class.
            </summary>
            <param name="change">A bitwise combination of <see cref="T:ExtendedControls.Components.ScintillaNET.Enumerations.UpdateChange" /> values specifying the reason to update the UI.</param>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Interfaces.ILoader">
            <summary>
            Provides methods for loading and creating a <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Document" /> on a background (non-UI) thread.
            </summary>
            <remarks>
            Internally an <see cref="T:ExtendedControls.Components.ScintillaNET.Interfaces.ILoader" /> maintains a <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Document" /> instance with a reference count of 1.
            You are responsible for ensuring the reference count eventually reaches 0 or memory leaks will occur.
            </remarks>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Interfaces.ILoader.AddData(System.Char[],System.Int32)">
            <summary>
            Adds the data specified to the internal document.
            </summary>
            <param name="data">The character buffer to copy to the new document.</param>
            <param name="length">The number of characters in <paramref name="data" /> to copy.</param>
            <returns>
            true if the data was added successfully; otherwise, false.
            A return value of false should be followed by a call to <see cref="M:ExtendedControls.Components.ScintillaNET.Interfaces.ILoader.Release" />.
            </returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Interfaces.ILoader.ConvertToDocument">
            <summary>
            Returns the internal document.
            </summary>
            <returns>A <see cref="T:ExtendedControls.Components.ScintillaNET.Classes.Document" /> containing the added text. The document has a reference count of 1.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Interfaces.ILoader.Release">
            <summary>
            Called to release the internal document when an error occurs using <see cref="M:ExtendedControls.Components.ScintillaNET.Interfaces.ILoader.AddData(System.Char[],System.Int32)" /> or to abandon loading.
            </summary>
            <returns>
            The internal document reference count.
            A return value of 0 indicates that the document has been destroyed and all associated memory released.
            </returns>
        </member>
        <member name="T:ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle">
            <summary>
            A <see cref="!:Marker" /> handle.
            </summary>
            <remarks>
            This is an opaque type, meaning it can be used by a <see cref="!:Scintilla" /> control but
            otherwise has no public members of its own.
            </remarks>
        </member>
        <member name="F:ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle.Zero">
            <summary>
            A read-only field that represents an uninitialized handle.
            </summary>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An object to compare with this instance or null.</param>
            <returns>true if <paramref name="obj" /> is an instance of <see cref="T:ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle" /> and equals the value of this instance; otherwise, false.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle.op_Equality(ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle,ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle)">
            <summary>
            Determines whether two specified instances of <see cref="T:ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle" /> are equal.
            </summary>
            <param name="a">The first handle to compare.</param>
            <param name="b">The second handle to compare.</param>
            <returns>true if <paramref name="a" /> equals <paramref name="b" />; otherwise, false.</returns>
        </member>
        <member name="M:ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle.op_Inequality(ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle,ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle)">
            <summary>
            Determines whether two specified instances of <see cref="T:ExtendedControls.Components.ScintillaNET.Structs.MarkerHandle" /> are not equal.
            </summary>
            <param name="a">The first handle to compare.</param>
            <param name="b">The second handle to compare.</param>
            <returns>true if <paramref name="a" /> does not equal <paramref name="b" />; otherwise, false.</returns>
        </member>
        <member name="T:ExtendedControls.Enumerations.TextAlignment">
            <summary>
            Text alignment options.
            </summary>
        </member>
        <member name="F:ExtendedControls.Enumerations.TextAlignment.LEFT">
            <summary>
            Align text to the left.
            </summary>
        </member>
        <member name="F:ExtendedControls.Enumerations.TextAlignment.RIGHT">
            <summary>
            Align text to the right.
            </summary>
        </member>
        <member name="F:ExtendedControls.Enumerations.TextAlignment.CENTRE">
            <summary>
            Centre the text.
            </summary>
        </member>
        <member name="F:ExtendedControls.Enumerations.TextAlignment.JUSTIFY">
            <summary>
            Justify the text.
            </summary>
        </member>
        <member name="T:ExtendedControls.Enumerations.ColourLookupElement">
            <summary>
            The elements to look up when setting a color.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.CalendarLibrary.Calendar.ShowWeekNumbers">
            <summary>
            Shows the week numbers
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.CalendarLibrary.Calendar.ShowDayTimes">
            <summary>
            Shows a Row with the time
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.CalendarLibrary.Calendar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.CalendarLibrary.Calendar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.CalendarLibrary.Calendar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable">
            <summary>
            Provides the colour information to the graphical elements.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.Combine(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Returns the result of combining the specified colours
            </summary>
            <param name="colour1">First colour to combine</param>
            <param name="colour2">Second colour to combine</param>
            <returns>Average of both colours</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.FromHex(System.String)">
            <summary>
            Converts the hex formatted colour to a <see cref="T:System.Drawing.Color"/>
            </summary>
            <param name="hexadecimal"></param>
            <returns></returns>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.Background">
            <summary>
            Background color of calendar
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.DayBackgroundEven">
            <summary>
            Background color of days in even months
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.DayBackgroundOdd">
            <summary>
            Background color of days in odd months
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.DayBackgroundSelected">
            <summary>
            Background color of selected days
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.DayBorder">
            <summary>
            Border of 
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.DayHeaderBackground">
            <summary>
            Background color of day headers.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.DayHeaderText">
            <summary>
            Color of text of day headers
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.DayHeaderSecondaryText">
            <summary>
            Color of secondary text in headers
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.DayTopBorder">
            <summary>
            Color of border of the top part of the days
            </summary>
            <remarks>
            The DayTop is the zone of the calendar where items that lasts all or more are placed.
            </remarks>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.DayTopSelectedBorder">
            <summary>
            Color of border of the top parth of the days when selected
            </summary>
            <remarks>
            The DayTop is the zone of the calendar where items that lasts all or more are placed.
            </remarks>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.DayTopBackground">
            <summary>
            Background color of day tops.
            </summary>
            <remarks>
            The DayTop is the zone of the calendar where items that lasts all or more are placed.
            </remarks>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.DayTopSelectedBackground">
            <summary>
            Background color of selected day tops.
            </summary>
            <remarks>
            The DayTop is the zone of the calendar where items that lasts all or more are placed.
            </remarks>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.ItemBorder">
            <summary>
            Color of items borders
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.ItemBackground">
            <summary>
            Background color of items
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.ItemText">
            <summary>
            Forecolor of items
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.ItemSecondaryText">
            <summary>
            Color of secondary text on items (Dates and times)
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.ItemShadow">
            <summary>
            Color of items shadow
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.ItemSelectedBorder">
            <summary>
            Color of items selected border
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.ItemSelectedBackground">
            <summary>
            Background color of selected items
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.ItemSelectedText">
            <summary>
            Forecolor of selected items
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.WeekHeaderBackground">
            <summary>
            Background color of week headers
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.WeekHeaderBorder">
            <summary>
            Border color of week headers
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.WeekHeaderText">
            <summary>
            Forecolor of week headers
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.WeekDayName">
            <summary>
            Forecolor of day names
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.TodayBorder">
            <summary>
            Border color of today day
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.TodayTopBackground">
            <summary>
            Background color of today's DayTop
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.TimeScaleLine">
            <summary>
            Color of lines in timescale
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.TimeScaleHours">
            <summary>
            Color of text representing hours on the timescale
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.TimeScaleMinutes">
            <summary>
            Color of text representing minutes on the timescale
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.TimeUnitBackground">
            <summary>
            Background color of time units
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.TimeUnitHighlightedBackground">
            <summary>
            Background color of highlighted time units
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.TimeUnitSelectedBackground">
            <summary>
            Background color of selected time units
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.TimeUnitBorderLight">
            <summary>
            Color of light border of time units
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.TimeUnitBorderDark">
            <summary>
            Color of dark border of time units
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.DayOverflowBorder">
            <summary>
            Border color of the overflow indicators
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.DayOverflowBackground">
            <summary>
            Background color of the overflow indicators
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable.DayOverflowSelectedBackground">
            <summary>
            Background color of selected overflow indicators
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay">
            <summary>
            Represents a day present on the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar"/> control's view.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar,System.DateTime,System.Int32)">
            <summary>
            Creates a new Day
            </summary>
            <param name="calendar">Calendar this day belongs to</param>
            <param name="date">Date of the day</param>
            <param name="index">Index of the day on the current calendar's view</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.ContainedItems">
            <summary>
            Gets a list of items contained on the day
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.DayTop">
            <summary>
            Gets the DayTop of the day, the place where multi-day and all-day items are placed
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.BodyBounds">
            <summary>
            Gets the bounds of the body of the day (where time-based CalendarItems are placed)
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.Date">
            <summary>
            Gets the date this day represents
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.HeaderBounds">
            <summary>
            Gets the bounds of the header of the day
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.Index">
            <summary>
            Gets the index of this day on the calendar
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.SpecifiedOnView">
            <summary>
            Gets a value indicating if the day is specified on the view (See remarks).
            </summary>
            <remarks>
            A day may not be specified on the view, but still present to make up a square calendar.
            This days should be drawn in a way that indicates it's necessary but unrequested presence.
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.TimeUnits">
            <summary>
            Gets the time units contained on the day
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowStart">
            <summary>
            /// <summary>
            Gets a value indicating if the day contains items not shown through the start of the day
            </summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowStartBounds">
            <summary>
            Gets the bounds of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowStart"/> indicator
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowStartSelected">
            <summary>
            Gets a value indicating if the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowStart"/> indicator is currently selected
            </summary>
            <remarks>
            This value set to <c>true</c> when user hovers the mouse on the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowStartBounds"/> area
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowEnd">
            <summary>
            Gets a value indicating if the day contains items not shown through the end of the day
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowEndBounds">
            <summary>
            Gets the bounds of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowEnd"/> indicator
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowEndSelected">
            <summary>
            Gets a value indicating if the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowEnd"/> indicator is currently selected
            </summary>
            <remarks>
            This value set to <c>true</c> when user hovers the mouse on the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowStartBounds"/> area
            </remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.AddContainedItem(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem)">
            <summary>
            Adds an item to the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.ContainedItems"/> list if not in yet
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.SetOverflowEnd(System.Boolean)">
            <summary>
            Sets the value of he <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowEnd"/> property
            </summary>
            <param name="overflow">Value of the property</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.SetOverflowEndSelected(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowEndSelected"/> property
            </summary>
            <param name="selected">Value to pass to the property</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.SetOverflowStart(System.Boolean)">
            <summary>
            Sets the value of he <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowStart"/> property
            </summary>
            <param name="overflow">Value of the property</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.SetOverflowStartSelected(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.OverflowStartSelected"/> property
            </summary>
            <param name="selected">Value to pass to the property</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.UpdateUnits">
            <summary>
            Updates the value of <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.TimeUnits"/> property
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay.UpdateHighlights">
            <summary>
            Updates the highlights of the units
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDayEventArgs">
            <summary>
            Event data with a <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDayEventArgs.CalendarDay"/> element
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDayEventArgs.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay)">
            <summary>
            Creates a new event with the specified day
            </summary>
            <param name="day">Day of the event</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDayEventArgs.CalendarDay">
            <summary>
            Gets the day related to the event
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDayTop">
            <summary>
            Represents the top area of a day, where multiday and all day items are stored
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDayTop.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay)">
            <summary>
            Creates a new DayTop for the specified day
            </summary>
            <param name="day"></param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDayTop.Day">
            <summary>
            Gets the Day of this DayTop
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDayTop.PassingItems">
            <summary>
            Gets the list of items passing on this daytop
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarHighlightRange">
            <summary>
            Represents a range of time that is highlighted as work-time
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarHighlightRange.#ctor">
            <summary>
            Creates a new empty range
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarHighlightRange.#ctor(System.DayOfWeek,System.TimeSpan,System.TimeSpan)">
            <summary>
            Creates a new range with the specified information
            </summary>
            <param name="day"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarHighlightRange.Calendar">
            <summary>
            Gets the calendar that this range is assigned to. (If any)
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarHighlightRange.DayOfWeek">
            <summary>
            Gets or sets the day of the week for this range
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarHighlightRange.StartTime">
            <summary>
            Gets or sets the start time of the range
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarHighlightRange.EndTime">
            <summary>
            Gets or sets the end time of the range
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarHighlightRange.Update">
            <summary>
            Tells the calendar to update the highlights
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarHighlightRange.SetCalendar(ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar)">
            <summary>
            Sets the value of the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar"/> property
            </summary>
            <param name="calendar">Calendar that this range belongs to</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem">
            <summary>
            Represents an item of the calendar with a date and timespan
            </summary>
            <remarks>
            <para>CalendarItem provides a graphical representation of tasks within a date range.</para>
            </remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar)">
            <summary>
            Creates a new Item that belongs to the specified calendar
            </summary>
            <param name="calendar">Calendar to reference item</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar,System.DateTime,System.DateTime,System.String)">
            <summary>
            Creates a new item with the specified date range and text
            </summary>
            <param name="calendar">Calendar to reference item</param>
            <param name="startDate">Start date of the item</param>
            <param name="endDate">End date of the item</param>
            <param name="text">Text of the item</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar,System.DateTime,System.TimeSpan,System.String)">
            <summary>
            Creates a new item with the specified date, duration and text
            </summary>
            <param name="calendar">Calendar to reference item</param>
            <param name="startDate">Start date of the item</param>
            <param name="duration">Duration of the item</param>
            <param name="text">Text of the item</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.AditionalBounds">
            <summary>
            Gets or sets an array of rectangles containing bounds additional to <see cref="!:Bounds"/> property.
            </summary>
            <remarks>
            Items may contain additional bounds because of several graphical occourences, mostly when <see cref="N:ExtendedControls.ExtendedToolkit.Calendar"/> in 
            <see cref="!:CalendarDaysMode.Short"/> mode, due to the duration of the item; e.g. when an all day item lasts several weeks, 
            one rectangle for week must be drawn to indicate the presence of the item.
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.BackgroundColour">
            <summary>
            Gets or sets the a background color for the object. If Color.Empty, renderer default's will be used.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.BackgroundColourLighter">
            <summary>
            Gets or sets the lighter background color of the item
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.BorderColour">
            <summary>
            Gets or sets the bordercolor of the item. If Color.Empty, renderer default's will be used.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.Date">
            <summary>
            Gets the StartDate of the item. Implemented
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.DayEnd">
            <summary>
            Gets the day on the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar"/> where this item ends
            </summary>
            <remarks>
            This day is not necesarily the day corresponding to the day on <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.EndDate"/>, 
            since this date can be out of the range of the current view.
            <para>If Item is not on view date range this property will return null.</para>
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.DayStart">
            <summary>
            Gets the day on the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar"/> where this item starts
            </summary>
            <remarks>
            This day is not necesarily the day corresponding to the day on <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.StartDate"/>, 
            since start date can be out of the range of the current view.
            <para>If Item is not on view date range this property will return null.</para>
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.Duration">
            <summary>
            Gets the duration of the item
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.EndDate">
            <summary>
            Gets or sets the end time of the item
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.EndDateText">
            <summary>
            Gets the text of the end date
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.ForeColour">
            <summary>
            Gets or sets the forecolor of the item. If Color.Empty, renderer default's will be used.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.Image">
            <summary>
            Gets or sets an image for the item
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.ImageAlign">
            <summary>
            Gets or sets the alignment of the image relative to the text
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.IsDragging">
            <summary>
            Gets a value indicating if the item is being dragged
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.IsEditing">
            <summary>
            Gets a value indicating if the item is currently being edited by the user
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.IsOnDayTop">
            <summary>
            Gets a value indicating if the item goes on the DayTop area of the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay"/>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.IsOnView">
            <summary>
            Gets a value indicating if the item is currently on view.
            </summary>
            <remarks>
            The item may not be on view because of scrolling
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.IsOnViewDateRange">
            <summary>
            Gets a value indicating if the item is on the range specified by <see cref="!:Calendar.ViewStart"/> and <see cref="!:Calendar.ViewEnd"/>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.IsOpenStart">
            <summary>
            Gets a value indicating if the item's <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.StartDate"/> is before the <see cref="!:Calendar.ViewStart"/> date.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.IsOpenEnd">
            <summary>
            Gets a value indicating if the item's <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.EndDate"/> is aftter the <see cref="!:Calendar.ViewEnd"/> date.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.IsResizingStartDate">
            <summary>
            Gets a value indicating if item is being resized by the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.StartDate"/>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.IsResizingEndDate">
            <summary>
            Gets a value indicating if item is being resized by the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.EndDate"/>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.Locked">
            <summary>
            Gets a value indicating if this item is locked.
            </summary>
            <remarks>
            When an item is locked, the user can't drag it or change it's text
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.MinuteEndTop">
            <summary>
            Gets the top correspoinding to the ending minute
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.MinuteStartTop">
            <summary>
            Gets the top corresponding to the starting minute
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.UnitsPassing">
            <summary>
            Gets or sets the units that this item passes by
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.Pattern">
            <summary>
            Gets or sets the pattern style to use in the background of item.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.PatternColor">
            <summary>
            Gets or sets the pattern's color
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.TopsPassing">
            <summary>
            Gets the list of DayTops that this item passes thru
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.ShowStartTime">
            <summary>
            Gets a value indicating if the item should show the time of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.StartDate"/>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.ShowEndTime">
            <summary>
            Gets a value indicating if the item should show the time of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.EndDate"/>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.StartDateText">
            <summary>
            Gets the text of the start date
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.StartDate">
            <summary>
            Gets or sets the start time of the item
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.Tag">
            <summary>
            Gets or sets a tag object for the item
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.Text">
            <summary>
            Gets or sets the text of the item
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.ApplyColor(System.Drawing.Color)">
            <summary>
            Applies color to background, border, and forecolor, from the specified color.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.GetAllBounds">
            <summary>
            Gets all the bounds related to the item.
            </summary>
            <remarks>
             Items that are broken on two or more weeks may have more than one rectangle bounds.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.RemoveColors">
            <summary>
            Removes all specific coloring for the item.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.ResizeStartDateZone(System.Drawing.Point)">
            <summary>
            Gets a value indicating if the specified point is in a resize zone of <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.StartDate"/>
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.ResizeEndDateZone(System.Drawing.Point)">
            <summary>
            Gets a value indicating if the specified point is in a resize zone of <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.EndDate"/>
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the item
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.IntersectsWith(System.TimeSpan,System.TimeSpan)">
            <summary>
            Indicates if the time of the item intersects with the provided time
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.AddBounds(System.Drawing.Rectangle)">
            <summary>
            Adds bounds for the item
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.AddUnitPassing(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit)">
            <summary>
            Adds the specified unit as a passing unit
            </summary>
            <param name="calendarTimeScaleUnit"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.AddTopPassing(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDayTop)">
            <summary>
            Adds the specified <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDayTop"/> as a passing one
            </summary>
            <param name="top"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.ClearPassings">
            <summary>
            Clears the item's existance off passing units and tops
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.ClearBounds">
            <summary>
            Clears all bounds of the item
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.FirstAndLastRectangleGapping">
            <summary>
            It pushes the left and the right to the center of the item
            to visually indicate start and end time
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.SetIsDragging(System.Boolean)">
            <summary>
            Sets the value of the <see cref="!:Dragging"/> property
            </summary>
            <param name="dragging">Value indicating if the item is currently being dragged</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.SetIsEditing(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.IsEditing"/> property
            </summary>
            <param name="editing">Value indicating if user is currently being editing</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.SetIsOnView(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.IsOnView"/> property
            </summary>
            <param name="onView">Indicates if the item is currently on view</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.SetIsResizingStartDate(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.IsResizingStartDate"/> property
            </summary>
            <param name="resizing"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.SetIsResizingEndDate(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.IsResizingEndDate"/> property
            </summary>
            <param name="resizing"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.SetMinuteStartTop(System.Int32)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.MinuteStartTop"/> property
            </summary>
            <param name="top"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.SetMinuteEndTop(System.Int32)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.MinuteEndTop"/> property
            </summary>
            <param name="top"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemCancelEventArgs.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem)">
            <summary>
            Creates a new <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemEventArgs"/>
            </summary>
            <param name="item">Related Item</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemCancelEventArgs.Item">
            <summary>
            Gets the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem"/> related to the event
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemCollection.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar)">
            <summary>
            Creates a new collection that will belong to the specified calendar.
            </summary>
            <param name="c">Calendar this collection will belong to.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemCollection.Calendar">
            <summary>
            Gets the calendar this collection belongs to
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemCollection.Add(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem)">
            <summary>
            Adds an item to the end of the list
            </summary>
            <param name="item">The object to be added to the end of the collection. The value can be null for reference types.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemCollection.AddRange(System.Collections.Generic.IEnumerable{ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem})">
            <summary>
            Adds the items of the specified collection to the end of the list.
            </summary>
            <param name="items">The items whose elements should be added to the end of the collection. The collection itself cannont be null, but it can contain elements that are null.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemCollection.Insert(System.Int32,ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemCollection.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem})">
            <summary>
            Inserts the items of a collection into this collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <param name="items"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemCollection.Remove(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The item to remove from the collection. The value can be null for reference types.</param>
            <returns><c>true</c> if item is successfully removed; otherwise, <c>false</c>. This method also returns false if item was not found in the collection.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemCollection.RemoveAll(System.Predicate{ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem})">
            <summary>
            Removes the all the items that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the items to remove.</param>
            <returns>The number of items removed from the collection.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of elements from the collection
            </summary>
            <param name="index">The zero-based starting index of the range of items to remove.</param>
            <param name="count">The number of items to remove</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemCollection.CollectionChanged">
            <summary>
            Handles what to do when this collection changes
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemEventArgs.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem)">
            <summary>
            Creates a new <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemEventArgs"/>
            </summary>
            <param name="item">Related Item</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItemEventArgs.Item">
            <summary>
            Gets the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem"/> related to the event
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarKryptonRenderer.OnInitialize(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs)">
            ' <summary>
            ' Shortcut to one on CalendarColourTable
            ' </summary>
            ' <param name="color"></param>
            ' <returns></returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarLoadEventArgs">
            <summary>
            Holds data of a Calendar Loading Items of certain date range
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarLoadEventArgs.Calendar">
            <summary>
            Gets the calendar that originated the event
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarLoadEventArgs.DateStart">
            <summary>
            Gets the start date of the load
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarLoadEventArgs.DateEnd">
            <summary>
            Gets the end date of the load
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarProfessionalRenderer.FromHex(System.String)">
            <summary>
            Shortcut to one on CalendarColorTable
            </summary>
            <param name="colour"></param>
            <returns></returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer">
            <summary>
            Base class that renders visual elements of Calendar control
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.Corners">
            <summary>
            Possible corners to pass to the <see cref="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.RoundRectangle(System.Drawing.Rectangle,System.Int32)"/> method
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.CompareItems(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem,ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem)">
            <summary>
            Comparison delegate to sort items
            </summary>
            <param name="item1"></param>
            <param name="item2"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.CompareUnits(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit,ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit)">
            <summary>
            Comparison delegate to sort units
            </summary>
            <param name="item1"></param>
            <param name="item2"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.CompareTops(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDayTop,ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDayTop)">
            <summary>
            Compares both <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDayTop"/> items by Date
            </summary>
            <param name="top1"></param>
            <param name="top2"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.RoundRectangle(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Creates a rectangle with rounded corners
            </summary>
            <param name="r"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.RoundRectangle(System.Drawing.Rectangle,System.Int32,ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.Corners)">
            <summary>
            Creates a rectangle with the specified corners rounded
            </summary>
            <param name="r"></param>
            <param name="radius"></param>
            <param name="corners"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar)">
            <summary>
            Creates a new renderer for the specified calendar
            </summary>
            <param name="calendar"></param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.DayTopItemsPadding">
            <summary>
            Gets or sets the padding of the items that goes on the top part of the days,
            when in <see cref="!:CalendarDaysMode.Expanded"/>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.DayTopHeight">
            <summary>
            Gets the current height of the all day items area
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.StandardItemHeight">
            <summary>
            Gets the height of items on day tops
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.DayTopMinHeight">
            <summary>
            Gets the minimum height for day tops
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.Calendar">
            <summary>
            Gets the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.Calendar"/> this renderer belongs to
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.DayNameHeaderColumns">
            <summary>
            Gets the bounds for day name headers
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.DayHeaderHeight">
            <summary>
            Gets the height of the header of days
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.DayNameHeadersVisible">
            <summary>
            Gets a value indicating if the day names headers are visible (e.g. Monday, Tuesday, Wednesday ...)
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.DayNameHeadersHeight">
            <summary>
            Gets the height of the day name headers
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.ItemTextMargin">
            <summary>
            Gets the margin of the text in the items
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.ItemShadowPadding">
            <summary>
            Gets or sets the amount of pixels that the item's shadow is dropped
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.ItemInvalidateMargin">
            <summary>
            Gets or sets the extra margin for invalidating and redrawing items
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.ItemsPadding">
            <summary>
            Gets or sets the padding of items on expanded mode
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.ItemRoundness">
            <summary>
            Gets or sets the roundness of the item
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.TimeScaleBounds">
            <summary>
            Gets or sets the bounds of the timescale
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.TimeScaleUnitHeight">
            <summary>
            Gets the height of the rows on of the timescale
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.TimeScaleVisible">
            <summary>
            Gets if the <see cref="!:TimeScale"/> is currently visible.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.TimeScaleWidth">
            <summary>
            Gets the width of the timescale
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.WeekHeaderWidth">
            <summary>
            Gets the width of the header of weeks, when <see cref="!:Calendar.DaysMode"/> in <see cref="!:CalendarDaysMode.Short"/>
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.GetTimeY(System.TimeSpan)">
            <summary>
            Gets the exact Y coordinate that corresponds to the specified time.
            This only works when <see cref="!:Calendar.DaysMode"/> is in <c>Expanded</c> mode.
            </summary>
            <param name="time">Time of day to get Y coordinate</param>
            <returns>Y coordinate corresponding to the specified <para>time</para></returns>
            <exception cref="T:System.InvalidOperationException">When calendar is not in <c>Expaned</c> mode.</exception>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.ItemRectangle(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemBoundsEventArgs,System.Drawing.Rectangle)">
            <summary>
            Creates a rectangle with item roundess
            </summary>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.ItemFill(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemBoundsEventArgs,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Fills the specified rectangle with item border roundness
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
            <param name="north"></param>
            <param name="south"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.ItemBorder(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemBoundsEventArgs,System.Drawing.Rectangle,System.Drawing.Color,System.Single)">
            <summary>
            Draws the specified rectangle with item border roundnesss
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
            <param name="color"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.PerformLayout">
            <summary>
            Peform layout of elements and items of the calendar
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.PerformLayout(System.Boolean)">
            <summary>
            Updates the bounds of graphical elements.
            Optionally calls <see cref="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.PerformItemsLayout"/> to update bounds of items.
            </summary>
            <remarks>
            This method is called every time the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.Calendar"/> control is resized.
            </remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.PerformItemsLayout">
            <summary>
            Updates the bounds of CalendarItems
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.PlaceInMatrix(System.Int32[0:,0:]@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Places the specified item in the matrix for the layout engine purposes
            </summary>
            <param name="m"></param>
            <param name="index"></param>
            <param name="startX"></param>
            <param name="endX"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.GetVisibleTimeUnits">
            <summary>
            Gets the amout of units that can be displayed on the calendar viewport
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.SetDayTopHeight(System.Int32)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.DayTopHeight"/> property
            </summary>
            <param name="height">Height of all <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDayTop"/> elements</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.SetDayHeaderHeight(System.Int32)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.DayHeaderHeight"/> property
            </summary>
            <param name="height">Height of the day header</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.SetDayNameHeadersHeight(System.Int32)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.DayNameHeadersHeight"/> property
            </summary>
            <param name="height">Height of the day name headers</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.SetTimeScaleUnitHeight(System.Int32)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.TimeScaleUnitHeight"/> property
            </summary>
            <param name="height">Height of the time scale unit</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.SetTimeScaleWidth(System.Int32)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.TimeScaleWidth"/> property
            </summary>
            <param name="width">New width for the time scale</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.DrawStandarBoxText(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs)">
            <summary>
            Draws text using the information of the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs"/>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.FindInMatrix(System.Int32[0:,0:],System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Outs the location of the specified number in the matrix
            </summary>
            <param name="m">Matrix to search in</param>
            <param name="number">Number to find</param>
            <param name="left">Result left</param>
            <param name="top">Result top</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.GetGroupBoundUnits(System.Collections.Generic.List{ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem},System.Int32@,System.Int32@)">
            <summary>
            Outs the startIndex and the endIndex of units in the group
            </summary>
            <param name="group"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.CollectIntersectingGroup(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem,System.Collections.Generic.List{ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem},System.Collections.Generic.List{ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem})">
            <summary>
            Recursive method that collects items intersecting on time, to graphically represent-them on the layout
            </summary>
            <param name="calendarItem"></param>
            <param name="items"></param>
            <param name="grouped"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.PrintMatrix(System.Int32[0:,0:])">
            <summary>
            Prints the specified matrix on debug
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnInitialize(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs)">
            <summary>
            Initializes the Calendar
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawBackground(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs)">
            <summary>
            Paints the background of the calendar
            </summary>
            <param name="e">Paint info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawTimeScale(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs)">
            <summary>
            Paints the timescale of the calendar
            </summary>
            <param name="e">Paint info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawTimeScaleHour(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs)">
            <summary>
            Paints an hour of a timescale unit
            </summary>
            <param name="e">Paint Info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawTimeScaleMinutes(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs)">
            <summary>
            Paints minutes of a timescale unit
            </summary>
            <param name="e">Paint Info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawDays(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs)">
            <summary>
            Paints the days on the current calendar view
            </summary>
            <param name="e">Paint Info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawDay(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererDayEventArgs)">
            <summary>
            Paints the specified day on the calendar
            </summary>
            <param name="e">Paint info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawDayBorder(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererDayEventArgs)">
            <summary>
            Paints the border of the specified day
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawDayTop(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererDayEventArgs)">
            <summary>
            Draws the all day items area
            </summary>
            <param name="e">Paint Info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawDayHeaderBackground(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererDayEventArgs)">
            <summary>
            Paints the background of the specified day's header
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawDayHeaderText(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs)">
            <summary>
            Paints the header of the specified day
            </summary>
            <param name="e">Paint info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawDayTimeUnits(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererDayEventArgs)">
            <summary>
            Paints the body of the day. Usually timeline unit indicator lines or a solid color if 
            <see cref="!:Calendar.DaysMode"/> is <see cref="!:CalendarDaysMode.Short"/>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawDayTimeUnit(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererTimeUnitEventArgs)">
            <summary>
            Draws a time unit of a day
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawDayNameHeaders(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs)">
            <summary>
            Paints the name of the day columns when <see cref="!:Calendar.DaysMode"/> is <see cref="!:CalendarDaysMode.Short"/>
            </summary>
            <param name="e">Paint Info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawDayNameHeader(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs)">
            <summary>
            Paints a name of the day column when <see cref="!:Calendar.DaysMode"/> is <see cref="!:CalendarDaysMode.Short"/>
            </summary>
            <param name="e">Paint info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawItems(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs)">
            <summary>
            Draws the items of the calendar
            </summary>
            <param name="e">Event info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawItem(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemEventArgs)">
            <summary>
            Draws an item of the calendar
            </summary>
            <param name="e">Event Info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawItemBackground(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemBoundsEventArgs)">
            <summary>
            Draws the background of the specified item
            </summary>
            <param name="e">Event Info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawItemContent(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemBoundsEventArgs)">
            <summary>
            Draws the strings of an item. Strings inlude StartTime, EndTime and Text
            </summary>
            <param name="e">Event Info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawItemText(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs)">
            <summary>
            Draws the text of an item
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawItemImage(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemBoundsEventArgs)">
            <summary>
            Draws the image of an item
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawItemStartTime(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs)">
            <summary>
            Draws the starttime of the item if applicable
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawItemEndTime(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs)">
            <summary>
            Draws the end time of the item if applicable
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawItemBorder(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemBoundsEventArgs)">
            <summary>
            Draws the border of the specified item
            </summary>
            <param name="e">Event Info</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawItemShadow(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemBoundsEventArgs)">
            <summary>
            Draws the shadow of the specified item
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawOverflows(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs)">
            <summary>
            Draws the overflows of days
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawDayOverflowStart(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererDayEventArgs)">
            <summary>
            Draws the overflow to start of specified day
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawDayOverflowEnd(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererDayEventArgs)">
            <summary>
            Draws the overflow to end of specified day
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawWeekHeaders(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs)">
            <summary>
            Paints the headers of the week rows when <see cref="!:Calendar.DaysMode"/> is <see cref="!:CalendarDaysMode.Short"/>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer.OnDrawWeekHeader(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs)">
            <summary>
            Paints the header of a week row when <see cref="!:Calendar.DaysMode"/> is <see cref="!:CalendarDaysMode.Short"/>
            </summary>
            <param name="e">Paint info</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs">
            <summary>
            Contains information about something's bounds and text to draw on the calendar
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs.#ctor">
            <summary>
            Initializes some fields
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs.BackgroundColour">
            <summary>
            Gets or sets the background color of the text
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs.Bounds">
            <summary>
            Gets or sets the bounds to draw the text
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs.Font">
            <summary>
            Gets or sets the font of the text to be rendered
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs.Format">
            <summary>
            Gets or sets the format to draw the text
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs.Text">
            <summary>
            Gets or sets the text to draw
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs.TextSize">
            <summary>
            Gets the result of measuring the text
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererBoxEventArgs.TextColour">
            <summary>
            Gets or sets the color to draw the text
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererDayEventArgs">
            <summary>
            Contains information about a day to draw on the calendar
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererDayEventArgs.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs,ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay)">
            <summary>
            Creates a new <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererDayEventArgs"/> object
            </summary>
            <param name="original">Orignal object to copy basic paramters</param>
            <param name="day">Day to render</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererDayEventArgs.Day">
            <summary>
            Gets the day to paint
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs">
            <summary>
            Contains basic information about a drawing event for <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer"/>
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs.#ctor">
            <summary>
            Use it wisely just to initialize some stuff
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Creates a new <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs"/>
            </summary>
            <param name="calendar">Calendar where painting</param>
            <param name="g">Device where to paint</param>
            <param name="clip">Paint event clip area</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar,System.Drawing.Graphics,System.Drawing.Rectangle,System.Object)">
            <summary>
            Creates a new <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs"/>
            </summary>
            <param name="calendar">Calendar where painting</param>
            <param name="g">Device where to paint</param>
            <param name="clip">Paint event clip area</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs)">
            <summary>
            Copies the parameters from the specified <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs"/>
            </summary>
            <param name="original"></param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs.Calendar">
            <summary>
            Gets the calendar where painting
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs.ClipRectangle">
            <summary>
            Gets the clip of the paint event
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs.Graphics">
            <summary>
            Gets the device where to paint
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererEventArgs.Tag">
            <summary>
            Gets or sets a tag for the event
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemBoundsEventArgs.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemEventArgs,System.Drawing.Rectangle,System.Boolean,System.Boolean)">
            <summary>
            Creates a new Event
            </summary>
            <param name="original"></param>
            <param name="bounds"></param>
            <param name="isFirst"></param>
            <param name="isLast"></param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemBoundsEventArgs.Bounds">
            <summary>
            Gets the bounds of the item to be rendered.
            </summary>
            <remarks>
            Items may have more than one bounds due to week segmentation.
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemBoundsEventArgs.IsFirst">
            <summary>
            Gets a value indicating if the bounds are the first of the item.
            </summary>
            <remarks>
            Items may have more than one bounds due to week segmentation.
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemBoundsEventArgs.IsLast">
            <summary>
            Gets a value indicating if the bounds are the last of the item.
            </summary>
            <remarks>
            Items may have more than one bounds due to week segmentation.
            </remarks>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemEventArgs">
            <summary>
            Contains information to render an item
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererItemEventArgs.Item">
            <summary>
            Gets the Item being rendered
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererTimeUnitEventArgs">
            <summary>
            Contains information about a <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit"/> that is about to be painted
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRendererTimeUnitEventArgs.Unit">
            <summary>
            Gets the unit that is about to be painted
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarSelectableElement">
            <summary>
            Implements a basic <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Interfaces.ICalendarSelectableElement"/>
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarSelectableElement.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar)">
            <summary>
            Creates a new Element
            </summary>
            <param name="calendar"></param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarSelectableElement.Calendar">
            <summary>
            Gets the Calendar this element belongs to
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarSelectableElement.Bounds">
            <summary>
            Gets the Bounds of the element on the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarSelectableElement.Calendar"/> window
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarSelectableElement.Selected">
            <summary>
            Gets a value indicating if the element is currently selected
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarSelectableElement.CompareTo(ExtendedControls.ExtendedToolkit.Calendar.Interfaces.ICalendarSelectableElement)">
            <summary>
            Compares this element with other using date as comparer
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarSelectableElement.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarSelectableElement.Bounds"/> property
            </summary>
            <param name="bounds">Bounds of the element</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarSelectableElement.SetSelected(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarSelectableElement.Selected"/> property
            </summary>
            <param name="selected">Value indicating if the element is currently selected</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarSystemRenderer">
            <summary>
            CalendarRenderer that renders low-intensity calendar for slow computers
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarSystemRenderer.ColourTable">
            <summary>
            Gets or sets the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarColourTable"/> for this renderer
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarSystemRenderer.SelectedItemBorder">
            <summary>
            Gets or sets the size of the border of selected items
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit">
            <summary>
            Represents a selectable timescale unit on a <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay"/>
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit"/>
            </summary>
            <param name="day"><see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay"/> this unit belongs to</param>
            <param name="index">Index of the unit relative to the container day</param>
            <param name="hours">Hour of the unit</param>
            <param name="minutes">Minutes of the unit</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.Date">
            <summary>
            Gets the exact date when the unit starts
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.Day">
            <summary>
            Gets the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay"/> this unit belongs to
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.Duration">
            <summary>
            Gets the duration of the unit.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.Highlighted">
            <summary>
            Gets if the unit is highlighted because it fits in some of the calendar's highlight ranges
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.Hours">
            <summary>
            Gets the hour when this unit starts
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.Index">
            <summary>
            Gets the index of the unit relative to the day
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.Minutes">
            <summary>
            Gets the minute when this unit starts
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.PassingItems">
            <summary>
            Gets or sets the amount of items that pass over the unit
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.Visible">
            <summary>
            Gets a value indicating if the unit is currently visible on viewport
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.CheckHighlighted">
            <summary>
            Gets a value indicating if the unit should be higlighted
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.SetHighlighted(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.Highlighted"/> property
            </summary>
            <param name="highlighted">Value of the property</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.SetVisible(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.Visible"/> property
            </summary>
            <param name="visible">Value indicating if the unit is currently visible on viewport</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.ClearItemExistance(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem)">
            <summary>
            Clears existance of item from this unit and it's corresponding day.
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarWeek">
            <summary>
            Represents a week displayed on the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar"/>
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarWeek.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar,System.DateTime)">
            <summary>
            Creates a new week for the specified calendar
            </summary>
            <param name="calendar">Calendar this week belongs to</param>
            <param name="sunday">Start day of the week</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarWeek.Bounds">
            <summary>
            Gets the bounds of the week
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarWeek.Calendar">
            <summary>
            Gets the calendar this week belongs to
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarWeek.HeaderBounds">
            <summary>
            Gets the bounds of the week header
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarWeek.StartDate">
            <summary>
            Gets the sunday that starts the week
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarWeek.ToStringShort">
            <summary>
            Gets the short version of week's string representation
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarWeek.ToStringLarge">
            <summary>
            Gets the large version of string representation
            </summary>
            <returns>The week in a string format</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarWeek.ToString">
            <summary>
            Returns a string representation of the week
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarWeek.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarWeek.Bounds"/> property
            </summary>
            <param name="r"></param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewBoxEventArgs">
            <summary>
            Holds data about a box of text to be rendered on the month view
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewBoxEventArgs.Bounds">
            <summary>
            Gets or sets the bounds of the box
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewBoxEventArgs.Font">
            <summary>
            Gets or sets the font of the text. If null, default will be used.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewBoxEventArgs.Graphics">
            <summary>
            Gets or sets the Graphics object where to draw
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewBoxEventArgs.BorderColour">
            <summary>
            Gets or sets the border color of the box
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewBoxEventArgs.Text">
            <summary>
            Gets or sets the text of the box
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewBoxEventArgs.BackgroundColour">
            <summary>
            Gets or sets the background color of the box
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewBoxEventArgs.TextColour">
            <summary>
            Gets or sets the text color of the box
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewBoxEventArgs.TextFlags">
            <summary>
            Gets or sets the flags of the text
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewDay.MonthView">
            <summary>
            Gets the parent MonthView
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewDay.Month">
            <summary>
            Gets the parent MonthViewMonth
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewDay.Bounds">
            <summary>
            Gets the bounds of the day
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewDay.Date">
            <summary>
            Gets the date this day represents
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewDay.Selected">
            <summary>
            Gets or sets if the day is currently selected
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewDay.Grayed">
            <summary>
            Gets if the day is grayed
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewDay.Visible">
            <summary>
            Gets a value indicating if the day instance is visible on the calendar
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewDay.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewDay.Bounds"/> property
            </summary>
            <param name="bounds"></param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewMonth">
            <summary>
            Represents a month displayed on <see cref="!:CalendarMonth"/>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewMonth.Date">
            <summary>
            Gets or sets the date of the first day of the month
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewMonth.SetLocation(System.Drawing.Point)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewMonth.Location"/> property
            </summary>
            <param name="location"></param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.CalendarState">
            <summary>
            Possible states of the calendar
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.CalendarState.Idle">
            <summary>
            Nothing happening
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.CalendarState.DraggingTimeSelection">
            <summary>
            User is currently dragging on view to select a time range
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.CalendarState.DraggingItem">
            <summary>
            User is currently dragging an item among the view
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.CalendarState.EditingItemText">
            <summary>
            User is editing an item's Text
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.CalendarState.ResizingItem">
            <summary>
            User is currently resizing an item
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.DateIntersects(System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Returns a value indicating if two date ranges intersect
            </summary>
            <param name="startA"></param>
            <param name="endA"></param>
            <param name="startB"></param>
            <param name="endB"></param>
            <returns></returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.CalendarLoadEventHandler">
            <summary>
            Delegate that supports <see cref="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.LoadItems"/> event
            </summary>
            <param name="sender">Sender of the event</param>
            <param name="e">Event Data</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.CalendarItemEventHandler">
            <summary>
            Delegate that supports item-related events
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.CalendarItemCancelEventHandler">
            <summary>
            Delegate that supports cancelable item-related events
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.CalendarDayEventHandler">
            <summary>
            Delegate that supports <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay"/>-related events
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.LoadItems">
            <summary>
            Occurs when items are load into view
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.DayHeaderClick">
            <summary>
            Occurs when a day header is clicked
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemCreating">
            <summary>
            Occurs when an item is about to be created.
            </summary>
            <remarks>
            Event can be cancelled
            </remarks>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemCreated">
            <summary>
            Occurs when an item has been created.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemDeleting">
            <summary>
            Occurs before an item is deleted
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemDeleted">
            <summary>
            Occurs when an item has been deleted
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemTextEditing">
            <summary>
            Occurs when an item text is about to be edited
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemTextEdited">
            <summary>
            Occurs when an item text is edited
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemDatesChanged">
            <summary>
            Occurs when an item time range has changed
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemClick">
            <summary>
            Occurs when an item is clicked
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemDoubleClick">
            <summary>
            Occurs when an item is double-clicked
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemSelected">
            <summary>
            Occurs when an item is selected
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemsPositioned">
            <summary>
            Occurs after the items are positioned
            </summary>
            <remarks>
            Items bounds can be altered using the <see cref="M:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem.SetBounds(System.Drawing.Rectangle)"/> method.
            </remarks>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemMouseHover">
            <summary>
            Occurs when the mouse is moved over an item
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.#ctor">
            <summary>
            Creates a new <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar"/> control
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.AllowNew">
            <summary>
            Gets or sets a value indicating if the control let's the user create new items.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.AllowItemEdit">
            <summary>
            Gets or sets a value indicating if the user can edit the item using the mouse or keyboard
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.AllowItemResize">
            <summary>
            Gets or sets a value indicating if calendar allows user to resize the calendar.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.Days">
            <summary>
            Gets the days visible on the ccurrent view
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.DaysMode">
            <summary>
            Gets the mode in which days are drawn.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.DaysBodyRectangle">
            <summary>
            Gets the union of day body rectangles
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.EditMode">
            <summary>
            Gets if the calendar is currently in edit mode of some item
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.EditModeItem">
            <summary>
            Gets the item being edited (if any)
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.FirstDayOfWeek">
            <summary>
            Gets or sets the first day of weeks
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.HighlightRanges">
            <summary>
            Gets or sets the time ranges that should be highlighted as work-time.
            This ranges are week based.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.Items">
            <summary>
            Gets the collection of items currently on the view.
            </summary>
            <remarks>
            This collection changes every time the view is changed
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemsDateFormat">
            <summary>
            Gets or sets the format in which time is shown in the items, when applicable
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemsTimeFormat">
            <summary>
            Gets or sets the format in which time is shown in the items, when applicable
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.MaximumFullDays">
            <summary>
            Gets or sets the maximum full days shown on the view. 
            After this amount of days, they will be shown as short days.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.MaximumViewDays">
            <summary>
            Gets or sets the maximum amount of days supported by the view.
            Value must be multiple of 7
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.Renderer">
            <summary>
            Gets or sets the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarRenderer"/> of the <see cref="N:ExtendedControls.ExtendedToolkit.Calendar"/>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.SelectedElementEnd">
            <summary>
            Gets the last selected element
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.SelectedElementStart">
            <summary>
            Gets the first selected element
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.SelectionEnd">
            <summary>
            Gets or sets the end date-time of the view's selection.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.SelectionStart">
            <summary>
            Gets or sets the start date-time of the view's selection.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.State">
            <summary>
            Gets or sets the state of the calendar
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.TextBox">
            <summary>
            Gets the TextBox of the edit mode
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.TimeScale">
            <summary>
            Gets or sets the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarTimeScale"/> for visualization.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.TimeUnitsOffset">
            <summary>
            Gets or sets the offset of scrolled units
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ViewEnd">
            <summary>
            Gets or sets the end date-time of the current view.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ViewStart">
            <summary>
            Gets or sets the start date-time of the current view.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.Weeks">
            <summary>
            Gets the weeks currently visible on the calendar, if <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.DaysMode"/> is <see cref="!:CalendarDaysMode.Short"/>
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ActivateEditMode">
            <summary>
            Activates the edit mode on the first selected item
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ActivateEditMode(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem)">
            <summary>
            Activates the edit mode on the specified item
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.CreateItemOnSelection(System.String,System.Boolean)">
            <summary>
            Creates a new item on the current selection. 
            If there's no selection, this will be ignored.
            </summary>
            <param name="itemText">Text of the item</param>
            <param name="editMode">If <c>true</c> activates the edit mode so user can edit the text of the item.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.EnsureVisible(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit)">
            <summary>
            Ensures the scrolling shows the specified time unit. It doesn't affect View date ranges.
            </summary>
            <param name="unit">Unit to ensure visibility</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.FinalizeEditMode(System.Boolean)">
            <summary>
            Finalizes editing the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.EditModeItem"/>.
            </summary>
            <param name="cancel">Value indicating if edition of item should be canceled.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.FindDay(System.DateTime)">
            <summary>
            Finds the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay"/> for the specified date, if in the view.
            </summary>
            <param name="d">Date to find day</param>
            <returns><see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay"/> object that matches the date, <c>null</c> if day was not found.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.GetSelectedItems">
            <summary>
            Gets the items that are currently selected
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.GetTimeUnit(System.DateTime)">
            <summary>
            Gets the time unit that starts with the specified date
            </summary>
            <param name="dateTime">Date and time of the unit you want to extract</param>
            <returns>Matching time unit. <c>null</c> If out of range.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.HitTest(System.Drawing.Point)">
            <summary>
            Searches for the first hitted <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Interfaces.ICalendarSelectableElement"/>
            </summary>
            <param name="p">Point to check for hit test</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.HitTest(System.Drawing.Point,System.Boolean)">
            <summary>
            Searches for the first hitted <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Interfaces.ICalendarSelectableElement"/>
            </summary>
            <param name="p">Point to check for hit test</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemAt(System.Drawing.Point)">
            <summary>
            Returns the item hitted at the specified location. Null if no item hitted.
            </summary>
            <param name="p">Location to serach for items</param>
            <returns>Hitted item at the location. Null if no item hitted.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.Invalidate(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarDay)">
            <summary>
            Invalidates the bounds of the specified day
            </summary>
            <param name="day"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.Invalidate(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit)">
            <summary>
            Ivalidates the bounds of the specified unit
            </summary>
            <param name="unit"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.Invalidate(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem)">
            <summary>
            Invalidates the area of the specified item
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.SetSelectionRange(ExtendedControls.ExtendedToolkit.Calendar.Interfaces.ICalendarSelectableElement,ExtendedControls.ExtendedToolkit.Calendar.Interfaces.ICalendarSelectableElement)">
            <summary>
            Establishes the selection range with only one graphical update.
            </summary>
            <param name="selectionStart">Fisrt selected element</param>
            <param name="selectionEnd">Last selection element</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.SetViewRange(System.DateTime,System.DateTime)">
            <summary>
            Sets the value of <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ViewStart"/> and <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ViewEnd"/> properties
            triggering only one repaint process
            </summary>
            <param name="dateStart">Start date of view</param>
            <param name="dateEnd">End date of view</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ViewIntersects(System.DateTime,System.DateTime)">
            <summary>
            Returns a value indicating if the view range intersects the specified date range.
            </summary>
            <param name="dateStart"></param>
            <param name="dateEnd"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ViewIntersects(ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem)">
            <summary>
            Returns a value indicating if the view range intersect the date range of the specified item
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ClearItems">
            <summary>
            Removes all the items currently on the calendar
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ClearSelectedItems">
            <summary>
            Unselects the selected items
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.DeleteSelectedItems">
            <summary>
            Deletes the currently selected item
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ReloadItems">
            <summary>
            Clears current items and reloads for specified view
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.GrowSquare(System.Drawing.Rectangle)">
            <summary>
            Grows the rectangle to repaint currently selected elements
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ClearSelectedComponents">
            <summary>
            Clears selection of currently selected components (As quick as possible)
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ScrollCalendar(System.Int32)">
            <summary>
            Scrolls the calendar using the specified delta
            </summary>
            <param name="delta"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.RaiseItemsPositioned">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ItemsPositioned"/> event
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.ScrollTimeUnits(System.Int32)">
            <summary>
            Scrolls the time units using the specified delta
            </summary>
            <param name="delta"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.SetDaysMode(ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarDaysMode)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.DaysMode"/> property.
            </summary>
            <param name="mode">Mode in which days will be rendered</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.SetState(ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.CalendarState)">
            <summary>
            Sets the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.State"/> property
            </summary>
            <param name="state">Current state of the calendar</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.TextBox_LostFocus(System.Object,System.EventArgs)">
            <summary>
            Handles the LostFocus event of the TextBox that edit items
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.TextBox_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the Keydown event of the TextBox that edit items
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.UpdateDaysAndWeeks">
            <summary>
            Updates the 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.UpdateHighlights">
            <summary>
            Updates the value of the <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarTimeScaleUnit.Highlighted"/> property on the time units of days.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar.UpdateSelectionElements">
            <summary>
            Informs elements who's selected and who's not, and repaints <see cref="F:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar._selectedElementSquare"/>
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendarTextBox.#ctor(ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar)">
            <summary>
            Creates a new <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendarTextBox"/> for the specified <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar"/>
            </summary>
            <param name="calendar">Calendar where this control lives</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendarTextBox.Calendar">
            <summary>
            Gets the calendar where this control lives
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView">
            <summary>
            Hosts a month-level calendar where user can select day-based dates
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.MonthViewSelection">
            <summary>
            Represents the different kinds of selection in MonthView
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.MonthViewSelection.Manual">
            <summary>
            User can select whatever date available to mouse reach
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.MonthViewSelection.Day">
            <summary>
            Selection is limited to just one day
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.MonthViewSelection.WorkWeek">
            <summary>
            Selecion is limited to <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.WorkWeekStart"/> and <see cref="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.WorkWeekEnd"/> weekly ranges
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.MonthViewSelection.Week">
            <summary>
            Selection is limited to a full week
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.MonthViewSelection.Month">
            <summary>
            Selection is limited to a full month
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.SelectionChanged">
            <summary>
            Occurs when selection has changed.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.DaySize">
            <summary>
            Gets the size of days rectangles
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.DayNamesFormat">
            <summary>
            Gets or sets the format of day names
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.DayNamesVisible">
            <summary>
            Gets or sets a value indicating if day names should be visible
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.DayNamesLength">
            <summary>
            Gets or sets how many characters of day names should be displayed
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.FirstDayOfWeek">
            <summary>
            Gets or sets what the first day of weeks should be
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.BackwardButtonSelected">
            <summary>
            Gets a value indicating if the backward button is selected
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.BackwardButtonBounds">
            <summary>
            Gets the bounds of the backward button
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.ForwardButtonSelected">
            <summary>
            Gets a value indicating if the forward button is selected
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.ForwardButtonBounds">
            <summary>
            Gets the bounds of the forward button
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.Font">
            <summary>
            Gets or sets the Font of the Control
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.ItemPadding">
            <summary>
            Gets or sets the internal padding of items (Days, day names, month names)
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.MaxSelectionCount">
            <summary>
            Gets or sets the maximum selection count of days
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.Months">
            <summary>
            Gets the Months currently displayed on the calendar
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.MonthSize">
            <summary>
            Gets the size of an entire month inside the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView"/>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.MonthTitleFormat">
            <summary>
            Gets or sets the format of month titles
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.SelectionStart">
            <summary>
            Gets or sets the start of selection
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.SelectionEnd">
            <summary>
            Gets or sets the end of selection
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.SelectionMode">
            <summary>
            Gets or sets the selection mode of <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView"/>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.ViewStart">
            <summary>
            Gets or sets the date of the first displayed month
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.ViewEnd">
            <summary>
            Gets the last day of the last month showed on the view.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.WorkWeekStart">
            <summary>
            Gets or sets the day that starts a work-week
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.WorkWeekEnd">
            <summary>
            Gets or sets the day that ends a work-week
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.TodayBorderColour">
            <summary>
            Gets or sets the color of the today day border color
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.HitTest(System.Drawing.Point)">
            <summary>
            Checks if a day is hitted on the specified point
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.GoForward">
            <summary>
            Moves the view one month forward
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.GoBackward">
            <summary>
            Moves the view one month backward
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.SetForwardButtonBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the value of the <see cref="!:"/> property
            </summary>
            <param name="bounds">Bounds of the button</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.SetBackwardButtonBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the value of the <see cref="!:"/> property
            </summary>
            <param name="bounds">Bounds of the button</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.SetForwardButtonSelected(System.Boolean)">
            <summary>
            Sets the value of the <see cref="!:"/> property
            </summary>
            <param name="bounds">Value indicating if button is selected</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.SetBackwardButtonSelected(System.Boolean)">
            <summary>
            Sets the value of the <see cref="!:"/> property
            </summary>
            <param name="bounds">Value indicating if button is selected</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.SelectWeek(System.DateTime)">
            <summary>
            Selects the week where the hit is contained
            </summary>
            <param name="hit"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.SelectWorkWeek(System.DateTime)">
            <summary>
            Selecs the work-week where the hit is contanied
            </summary>
            <param name="hit"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.SelectMonth(System.DateTime)">
            <summary>
            Selecs the month where the hit is contanied
            </summary>
            <param name="hit"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView.DrawBox(ExtendedControls.ExtendedToolkit.Calendar.Classes.MonthViewBoxEventArgs)">
            <summary>
            Draws a box of text
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarDaysMode">
            <summary>
            Enumerates the possible modes of the days visualization on the <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar"/>
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarDaysMode.SHORT">
            <summary>
            A short version of the day is visible without time scale.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarDaysMode.EXPANDED">
            <summary>
            The day is fully visible with time scale.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarItemImageAlign">
            <summary>
            Possible alignment for <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Classes.CalendarItem"/> images
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarItemImageAlign.NORTH">
            <summary>
            Image is drawn at north of text
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarItemImageAlign.SOUTH">
            <summary>
            Image is drawn at south of text
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarItemImageAlign.EAST">
            <summary>
            Image is drawn at east of text
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarItemImageAlign.WEST">
            <summary>
            Image is drawn at west of text
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarTimeScale">
            <summary>
            Enumerates possible timescales for <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.KryptonCalendar"/> control
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarTimeScale.SIXTYMINUTES">
            <summary>
            Makes calendar show intervals of 60 minutes
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarTimeScale.THIRTYMINUTES">
            <summary>
            Makes calendar show intervals of 30 minutes
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarTimeScale.FIFTEENMINUTES">
            <summary>
            Makes calendar show intervals of 15 minutes
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarTimeScale.TENMINUTES">
            <summary>
            Makes calendar show intervals of 10 minutes
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarTimeScale.SIXMINUTES">
            <summary>
            Makes calendar show intervals of 6 minutes
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Calendar.Enumerations.CalendarTimeScale.FIVEMINUTES">
            <summary>
            Makes calendar show intervals of 5 minutes
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Interfaces.ICalendarSelectableElement">
            <summary>
            Interface implemented by every selectable element of the calendar
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Interfaces.ICalendarSelectableElement.Calendar">
            <summary>
            Gets the calendar this element belongs to
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Interfaces.ICalendarSelectableElement.Date">
            <summary>
            Gets the calendar
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Calendar.Interfaces.ISelectableElement">
            <summary>
            Represents a clickable element of <see cref="T:ExtendedControls.ExtendedToolkit.Calendar.Controls.MonthView"/> control
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Interfaces.ISelectableElement.Bounds">
            <summary>
            Gets the bounds of the element
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Calendar.Interfaces.ISelectableElement.Selected">
            <summary>
            Gets if the element is currently selected
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.Adobe2DColourBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.Adobe2DColourBox"/> class.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.Adobe2DColourBox.BaseColourComponent">
            <summary>
            Gets or sets the base color component which is fixed.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.Adobe2DColourBox.HSB">
            <summary>
            Gets or sets the color in HSB mode. <see cref="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.Adobe2DColourBox.RGB"/> property will be accordingly updated.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.Adobe2DColourBox.RGB">
            <summary>
            Gets or sets the color in RGB mode. <see cref="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.Adobe2DColourBox.HSB"/> property will be accordingly updated.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.Adobe2DColourBox.WebSafeColoursOnly">
            <summary>
            Gets or sets a boolean value that indicates where only the web colors are available.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.Adobe2DColourBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.Adobe2DColourBox.SelectionChanged">
            <summary>
            Occurs when the selected color has been changed.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.Adobe2DColourBox.OnSelectionChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.Adobe2DColourBox.SelectionChanged"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider">
            <summary>
            A vertical slider control that shows a range for a colour property (a.k.a. Hue, Saturation, Brightness,
            Red, Green, Blue) and sends an event when the slider is changed.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.BaseColourComponent">
            <summary>
            Gets or sets the base color component which is fixed.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.HSB">
            <summary>
            Gets or sets the color in HSB mode. <see cref="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.RGB"/> property will be accordingly updated.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.RGB">
            <summary>
            Gets or sets the color in RGB mode. <see cref="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.HSB"/> property will be accordingly updated.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.WebSafeColoursOnly">
            <summary>
            Gets or sets a boolean value that indicates where only the web colors are available.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.SelectionChanged">
            <summary>
            Occurs when the selected color has been changed.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.OnSelectionChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.SelectionChanged"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.ClearSlider">
            <summary>
            Redraws the background over the slider area on both sides of the control
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.DrawSlider(System.Int32,System.Boolean)">
            <summary>
            Draws the slider arrows on both sides of the control.
            </summary>
            <param name="position">position value of the slider, lowest being at the bottom.  The range
            is between 0 and the controls height-9.  The values will be adjusted if too large/small</param>
            <param name="Unconditional">If Unconditional is true, the slider is drawn, otherwise some logic 
            is performed to determine is drawing is really neccessary.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.DrawBorder">
            <summary>
            Draws the border around the control, in this case the border around the content area between
            the slider arrows.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.DrawContent">
            <summary>
            Evaluates the DrawStyle of the control and calls the appropriate
            drawing function for content
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.ResetSlider(System.Boolean)">
            <summary>
            Resets the vertical position of the slider to match the controls colour.  Gives the option of redrawing the slider.
            </summary>
            <param name="redraw">Set to true if you want the function to redraw the slider after determining the best position</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.AdobeVerticalColourSlider.ResetHSLRGB">
            <summary>
            Resets the controls colour (both HSL and RGB variables) based on the current slider position
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel"/> class.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.ColourStep">
            <summary>
            Gets or sets the increment for rendering the color wheel.
            </summary>
            <value>The color step.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Value must be between 1 and 359</exception>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.HSLColour">
            <summary>
            Gets or sets the component color.
            </summary>
            <value>The component color.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the <see cref="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.Colour"/> property when the wheel selection is moved a large distance.
            </summary>
            <value>A numeric value. The default value is 5.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.SelectionSize">
            <summary>
            Gets or sets the size of the selection handle.
            </summary>
            <value>The size of the selection handle.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.SmallChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the <see cref="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.Colour"/> property when the wheel selection is moved a small distance.
            </summary>
            <value>A numeric value. The default value is 1.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.AllowPainting">
            <summary>
              Gets a value indicating whether painting of the control is allowed.
            </summary>
            <value>
              <c>true</c> if painting of the control is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.BeginUpdate">
            <summary>
              Disables any redrawing of the image box
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.EndUpdate">
            <summary>
              Enables the redrawing of the image box
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.CalculateWheel">
            <summary>
            Calculates wheel attributes.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.CreateGradientBrush">
            <summary>
            Creates the gradient brush used to paint the wheel.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.CreateSelectionGlyph">
            <summary>
            Creates the selection glyph.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control" /> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.GetColourLocation(System.Drawing.Color)">
            <summary>
            Gets the point within the wheel representing the source color.
            </summary>
            <param name="colour">The color.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.GetColourLocation(ExtendedControls.Base.Structures.HSLColour)">
            <summary>
            Gets the point within the wheel representing the source color.
            </summary>
            <param name="colour">The color.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</param>
            <returns>true if the specified key is a regular input key; otherwise, false.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.IsPointInWheel(System.Drawing.Point)">
            <summary>
            Determines whether the specified point is within the bounds of the color wheel.
            </summary>
            <param name="point">The point.</param>
            <returns><c>true</c> if the specified point is within the bounds of the color wheel; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnColourChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.ColourChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnColourStepChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.ColourStepChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnHSLColourChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.HSLColourChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnLargeChangeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.LargeChangeChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data. </param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.PaddingChanged" /> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnSelectionSizeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.SelectionSizeChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.OnSmallChangeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.SmallChangeChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.RefreshWheel">
            <summary>
            Refreshes the wheel attributes and then repaints the control
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel.Colour">
            <summary>
            Gets or sets the component colour.
            </summary>
            <value>The component colour.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheel"/> class.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.ColourStep">
            <summary>
            Gets or sets the increment for rendering the color wheel.
            </summary>
            <value>The color step.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Value must be between 1 and 359</exception>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.HSLColour">
            <summary>
            Gets or sets the component color.
            </summary>
            <value>The component color.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the <see cref="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.Colour"/> property when the wheel selection is moved a large distance.
            </summary>
            <value>A numeric value. The default value is 5.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.SelectionSize">
            <summary>
            Gets or sets the size of the selection handle.
            </summary>
            <value>The size of the selection handle.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.SmallChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the <see cref="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.Colour"/> property when the wheel selection is moved a small distance.
            </summary>
            <value>A numeric value. The default value is 1.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.AllowPainting">
            <summary>
              Gets a value indicating whether painting of the control is allowed.
            </summary>
            <value>
              <c>true</c> if painting of the control is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.BeginUpdate">
            <summary>
              Disables any redrawing of the image box
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.EndUpdate">
            <summary>
              Enables the redrawing of the image box
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.CalculateWheel">
            <summary>
            Calculates wheel attributes.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.CreateGradientBrush">
            <summary>
            Creates the gradient brush used to paint the wheel.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.CreateSelectionGlyph">
            <summary>
            Creates the selection glyph.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control" /> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.GetColourLocation(System.Drawing.Color)">
            <summary>
            Gets the point within the wheel representing the source color.
            </summary>
            <param name="colour">The color.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.GetColourLocation(ExtendedControls.Base.Structures.HSLColour)">
            <summary>
            Gets the point within the wheel representing the source color.
            </summary>
            <param name="colour">The color.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</param>
            <returns>true if the specified key is a regular input key; otherwise, false.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.IsPointInWheel(System.Drawing.Point)">
            <summary>
            Determines whether the specified point is within the bounds of the color wheel.
            </summary>
            <param name="point">The point.</param>
            <returns><c>true</c> if the specified point is within the bounds of the color wheel; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnColourChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.ColourChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnColourStepChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.ColourStepChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnHSLColourChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.HSLColourChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnLargeChangeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.LargeChangeChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data. </param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.PaddingChanged" /> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnSelectionSizeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.SelectionSizeChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.OnSmallChangeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.SmallChangeChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.RefreshWheel">
            <summary>
            Refreshes the wheel attributes and then repaints the control
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.Controls.ColourWheelExtended.Colour">
            <summary>
            Gets or sets the component colour.
            </summary>
            <value>The component colour.</value>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Colours.BrowserSafeColourEditorUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.BrowserSafeColourEditorUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.BrowserSafeColourEditorUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.BrowserSafeColourEditorUserControl.SelectedColour">
            <summary>
            Gets the color of the selected.
            </summary>
            <value>The color of the selected.</value>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.BrowserSafeColourEditorUserControl.NeedUpdateUI">
            <summary>
            Occurs when the parent needs to update command states.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.BrowserSafeColourEditorUserControl.DoSelectItem(System.Windows.Forms.ListViewItem)">
            <summary>
            Does the select item.
            </summary>
            <param name="listViewItem">The list view item.</param>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaAndSliderUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaAndSliderUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaAndSliderUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaAndSliderUserControl.ColorChanged">
            <summary>
            Occurs when the user changed the color.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaAndSliderUserControl.ValueChangedByUser">
            <summary>
            Occurs when a value has been changed.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaAndSliderUserControl.SelectedColour">
            <summary>
            Gets or sets the color of the selected.
            </summary>
            <value>The color of the selected.</value>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaUserControl.ColourAreaUserControl_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the Paint event of the <see cref="!:ColorAreaUserControl"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaUserControl.DrawCaret">
            <summary>
            Draws the caret.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaUserControl.DrawCaret(System.Drawing.Graphics)">
            <summary>
            Draws the caret.
            </summary>
            <param name="g">The g.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaUserControl.DrawColourBitmap">
            <summary>
            Draws the color bitmap.
            </summary>
            <returns></returns>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaUserControl.HueSaturationChanged">
            <summary>
            Occurs when the user changed the hue and/or saturation.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourAreaUserControl.ValueChangedByUser">
            <summary>
            Occurs when a value has been changed.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourEditorUserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourEditorUserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourEditorUserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourEditorUserControl.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourEditorUserControl"/> class.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourEditorUserControl.NeedUpdateUI">
            <summary>
            Occurs when the parent needs to update command states.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourEditorUserControl.ExternalColourEditorInformationProvider">
            <summary>
            Gets or sets the external provider.
            </summary>
            <value>The external provider.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourEditorUserControl.SelectedColour">
            <summary>
            Gets or sets the selected color.
            </summary>
            <value>The color of the selected.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourEditorUserControl.TryToSetCorrectTabPage(System.Drawing.Color)">
            <summary>
            Tries to set correct tab page.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourEditorUserControl.StoreID">
            <summary>
            Gets the store ID.
            </summary>
            <value>The store ID.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourEditorUserControl.AllowColourSchemes">
            <summary>
            Gets a value indicating whether [allow color schemes].
            </summary>
            <value><c>true</c> if [allow color schemes]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourEditorUserControl.ColourEditorUserControl_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourEditorUserControl"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderPanel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderPanel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderPanel.ValueChangedByUser">
            <summary>
            Occurs when a value has been changed.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderPanel.ValueChanged">
            <summary>
            Occurs when a value has been changed.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderPanel.GetColourAtY(System.Int32)">
            <summary>
            Gets the color at Y.
            </summary>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderUserControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderUserControl"/> class.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderUserControl.LightChanged">
            <summary>
            Occurs when the user changed the light.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderUserControl.ValueChangedByUser">
            <summary>
            Occurs when a value has been changed.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderUserControl.NotifyValueChangedByUser">
            <summary>
            Notifies the value changed.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderUserControl.GetSelectedColour">
            <summary>
            Gets the color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderUserControl.SetHueSaturation(System.Double,System.Double)">
            <summary>
            Sets the hue saturation.
            </summary>
            <param name="h">The h.</param>
            <param name="s">The s.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourSliderUserControl.RepositionArrow(System.Int32)">
            <summary>
            Repositions the arrow.
            </summary>
            <param name="offsetY">The offset Y.</param>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.ColourUI.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Colours.CustomColourEditorUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.CustomColourEditorUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.CustomColourEditorUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.Colours.CustomColourEditorUserControl.LeadingInputElement">
            <summary>
            To get rid of rounding inaccuracies etc.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.CustomColourEditorUserControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.Colours.CustomColourEditorUserControl"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.CustomColourEditorUserControl.CustomColourEditorUserControl_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.Colours.CustomColourEditorUserControl"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.CustomColourEditorUserControl.ColourControl_ColourChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ColorChanged event of the colorSliderControl control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.CustomColourEditorUserControl.NeedUpdateUI">
            <summary>
            Occurs when the parent needs to update command states.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.CustomColourEditorUserControl.UpdateTextFields">
            <summary>
            Updates the text fields.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.CustomColourEditorUserControl.SelectedColour">
            <summary>
            Gets or sets the selected color.
            </summary>
            <value>The color of the selected.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.CustomColourEditorUserControl.NotifyValueChangedByUser(ExtendedControls.ExtendedToolkit.Controls.Colours.CustomColourEditorUserControl.LeadingInputElement)">
            <summary>
            Notifies that the value has been changed by the user.
            </summary>
            <param name="inputElement">The input element.</param>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Colours.SchemesColourEditorUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.SchemesColourEditorUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.SchemesColourEditorUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.SchemesColourEditorUserControl.NeedUpdateUI">
            <summary>
            Occurs when the parent needs to update command states.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.SchemesColourEditorUserControl.SelectedColour">
            <summary>
            Gets the color of the selected.
            </summary>
            <value>The color of the selected.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.SchemesColourEditorUserControl.DoSelectItem(System.Windows.Forms.ListViewItem)">
            <summary>
            Does the select item.
            </summary>
            <param name="listViewItem">The list view item.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.SchemesColourEditorUserControl.ExternalColourEditorInformationProvider">
            <summary>
            Gets the external provider.
            </summary>
            <value>The external provider.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.SchemesColourEditorUserControl.ColourSchemes">
            <summary>
            Gets the color schemes.
            </summary>
            <value>The color schemes.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.SchemesColourEditorUserControl.StoreID">
            <summary>
            Gets the store ID.
            </summary>
            <value>The store ID.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.SchemesColourEditorUserControl.SchemesComboBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the schemesComboBox 
            control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.SchemesColourEditorUserControl.ConvertColourToHtmlColour(System.Drawing.Color)">
            <summary>
            Converts the color to a HTML color.
            </summary>
            <param name="colour">The color.</param>
            <returns>Returns a format "#RRGGBB".</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.SchemesColourEditorUserControl.ConvertHtmlColourToColour(System.String)">
            <summary>
            Converts a HTML color to a color structure.
            </summary>
            <param name="htmlColour">the HTML color.</param>
            <returns>Returns the color structure.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.SchemesColourEditorUserControl.GetComplementaryColour(System.Drawing.Color)">
            <summary>
            Gets the color of the complementary.
            </summary>
            <param name="colour">The color.</param>
            <returns></returns>
            <remarks>
            http://www.markus-keppeler.de/programme/komplement/
            </remarks>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Colours.SystemColourEditorUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.SystemColourEditorUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.SystemColourEditorUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.SystemColourEditorUserControl.SelectedColour">
            <summary>
            Gets the color of the selected.
            </summary>
            <value>The color of the selected.</value>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.SystemColourEditorUserControl.NeedUpdateUI">
            <summary>
            Occurs when the parent needs to update command states.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.SystemColourEditorUserControl.DoSelectItem(System.Windows.Forms.ListViewItem)">
            <summary>
            Does the select item.
            </summary>
            <param name="listViewItem">The list view item.</param>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Colours.WebColourEditorUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.WebColourEditorUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.WebColourEditorUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Colours.WebColourEditorUserControl.SelectedColour">
            <summary>
            Gets the color of the selected.
            </summary>
            <value>The color of the selected.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Colours.WebColourEditorUserControl.DoSelectItem(System.Windows.Forms.ListViewItem)">
            <summary>
            Does the select item.
            </summary>
            <param name="listViewItem">The list view item.</param>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Colours.WebColourEditorUserControl.NeedUpdateUI">
            <summary>
            Occurs when the parent needs to update command states.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.AnimationFunction">
            <summary>
                Sets a known animation function.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.AnimationSpeed">
            <summary>
                Gets or sets the animation speed in milliseconds.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.CustomAnimationFunction">
            <summary>
                Sets a custom animation function.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.Font">
            <summary>
                Gets or sets the font of text in the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar" />.
            </summary>
            <returns>
                The <see cref="T:System.Drawing.Font" /> of the text. The default is the font set by the container.
            </returns>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.InnerColor">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.InnerMargin">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.InnerWidth">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.OuterColor">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.OuterMargin">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.OuterWidth">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.ProgressColor">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.ProgressWidth">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.SecondaryFont">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.StartAngle">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.SubscriptColor">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.SubscriptMargin">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.SubscriptText">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.SuperscriptColor">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.SuperscriptMargin">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.SuperscriptText">
            <summary>
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.Text">
            <summary>
                Gets or sets the text in the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar" />.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.TextMargin">
            <summary>
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.ParentOnInvalidated(System.Object,System.Windows.Forms.InvalidateEventArgs)">
            <summary>
                Occurs when parent's display requires redrawing.
            </summary>
            <param name="sender"></param>
            <param name="invalidateEventArgs"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.ParentOnResize(System.Object,System.EventArgs)">
            <summary>
                Occurs when the parent resized.
            </summary>
            <param name="sender"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.RecreateBackgroundBrush">
            <summary>
                Update or create the brush used for drawing the background
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.CircularProgressBar.StartPaint(System.Drawing.Graphics)">
            <summary>
                The function responsible for painting the control
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> object to draw into</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.FileSystemTreeView">
            <summary>
            Summary description for DirectoryTreeView.
            </summary> 
               
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonFlashingLabel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonFlashingLabel"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonFlashingLabel.FlashTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the FlashTimer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonFlashingLabel.Flash(System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Flashes the specified maximum flash count.
            </summary>
            <param name="maxFlashCount">The maximum flash count.</param>
            <param name="backColourOne">The back colour one.</param>
            <param name="backColourTwo">The back colour two.</param>
            <param name="foreColourOne">The fore colour one.</param>
            <param name="foreColourTwo">The fore colour two.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonFlashingLabel.StartTimer(System.Boolean)">
            <summary>
            Starts the timer.
            </summary>
            <param name="startTimer">if set to <c>true</c> [start timer].</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonLineNumberedRichTextBox.ParentRichTextBox">
            <summary>
            Gets or sets the parent container of the control.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonListView._designMode">
            
             Indicates if the current view is being utilized in the VS.NET IDE or not.
            
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonListView.DrawInsertionLine(System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw a line with insertion marks at each end
            </summary>
            <param name="X1">Starting position (X) of the line</param>
            <param name="X2">Ending position (X) of the line</param>
            <param name="Y">Position (Y) of the line</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonSlider.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification">
            <summary>
            Adapted from: https://github.com/dotCoefficient/Notification/blob/master/Notification/Notification.cs
            </summary>
            <seealso cref="T:ComponentFactory.Krypton.Toolkit.KryptonForm" />
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.ActionType">
            <summary>
            Gets or sets the type of the action.
            </summary>
            <value>
            The type of the action.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.Fade">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification"/> is fade.
            </summary>
            <value>
              <c>true</c> if fade; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.ShowActionButton">
            <summary>
            Gets or sets a value indicating whether [show action button].
            </summary>
            <value>
              <c>true</c> if [show action button]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.SoundPath">
            <summary>
            Gets or sets the sound path.
            </summary>
            <value>
            The sound path.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.SoundStream">
            <summary>
            Gets or sets the sound stream.
            </summary>
            <value>
            The sound stream.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.HeaderText">
            <summary>
            Gets or sets the header text.
            </summary>
            <value>
            The header text.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.ContentText">
            <summary>
            Gets or sets the content text.
            </summary>
            <value>
            The content text.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.ProcessName">
            <summary>
            Gets or sets the name of the process.
            </summary>
            <value>
            The name of the process.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.IconImage">
            <summary>
            Gets or sets the icon image.
            </summary>
            <value>
            The icon image.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.Seconds">
            <summary>
            Gets or sets the seconds.
            </summary>
            <value>
            The seconds.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.RightToLeftSupport">
            <summary>
            Gets or sets the right to left support.
            </summary>
            <value>
            The right to left support.
            </value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.#ctor(System.Boolean,System.Drawing.Image,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification" /> class.
            </summary>
            <param name="fade">if set to <c>true</c> [fade].</param>
            <param name="icon">The icon.</param>
            <param name="headerText">The header text.</param>
            <param name="contentText">The content text.</param>
            <param name="showControlBox">if set to <c>true</c> [show control box].</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.#ctor(System.Boolean,System.Drawing.Image,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification"/> class.
            </summary>
            <param name="fade">if set to <c>true</c> [fade].</param>
            <param name="image">The image.</param>
            <param name="headerText">The header text.</param>
            <param name="contentText">The content text.</param>
            <param name="seconds">The seconds.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.#ctor(System.Boolean,System.Drawing.Image,System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification"/> class.
            </summary>
            <param name="fade">if set to <c>true</c> [fade].</param>
            <param name="image">The image.</param>
            <param name="headerText">The header text.</param>
            <param name="contentText">The content text.</param>
            <param name="seconds">The seconds.</param>
            <param name="soundPath">The sound path.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.#ctor(System.Boolean,System.Drawing.Image,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification"/> class.
            </summary>
            <param name="fade">if set to <c>true</c> [fade].</param>
            <param name="image">The image.</param>
            <param name="headerText">The header text.</param>
            <param name="contentText">The content text.</param>
            <param name="soundPath">The sound path.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.#ctor(System.Boolean,System.Drawing.Image,System.String,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification"/> class.
            </summary>
            <param name="fade">if set to <c>true</c> [fade].</param>
            <param name="image">The image.</param>
            <param name="headerText">The header text.</param>
            <param name="contentText">The content text.</param>
            <param name="soundStream">The sound stream.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.#ctor(System.Boolean,System.Drawing.Image,System.String,System.String,System.Int32,System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification"/> class.
            </summary>
            <param name="fade">if set to <c>true</c> [fade].</param>
            <param name="image">The image.</param>
            <param name="headerText">The header text.</param>
            <param name="contentText">The content text.</param>
            <param name="seconds">The seconds.</param>
            <param name="soundStream">The sound stream.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.#ctor(System.Boolean,System.Drawing.Image,System.String,System.String,System.Boolean,ExtendedControls.ExtendedToolkit.Controls.KryptonControls.ActionType,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification"/> class.
            </summary>
            <param name="fade">if set to <c>true</c> [fade].</param>
            <param name="image">The image.</param>
            <param name="headerText">The header text.</param>
            <param name="contentText">The content text.</param>
            <param name="showActionButton">if set to <c>true</c> [show action button].</param>
            <param name="actionType">Type of the action.</param>
            <param name="processName">Name of the process.</param>
            <param name="showControlBox">if set to <c>true</c> [show control box].</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.FadeIn">
            <summary>
            Fades the window in.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.FadeOutAndClose">
            <summary>
            Fades the window out and close.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.Show">
            <summary>
            Displays the control to the user.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.UpdateIconType(ExtendedControls.ExtendedToolkit.Controls.KryptonControls.IconType)">
            <summary>
            Updates the type of the icon.
            </summary>
            <param name="iconType">Type of the icon.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.BitmapToImage(System.Drawing.Bitmap)">
            <summary>
            Bitmaps to image.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.ReconfigureUI(ExtendedControls.ExtendedToolkit.Controls.KryptonControls.RightToLeftSupport)">
            <summary>
            Reconfigures the UI.
            </summary>
            <param name="rightToLeft">The right to left.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.ConfigureLeftToRight">
            <summary>
            Configures the UI elements to left to right.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.ConfigureRightToLeft">
            <summary>
            Configures the UI to right to left.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.LaunchProcess(System.String)">
            <summary>
            Launches the process.
            </summary>
            <param name="process">The process.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.SetActionText(ExtendedControls.ExtendedToolkit.Controls.KryptonControls.ActionType)">
            <summary>
            Sets the action text.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToastNotification.GetActionType">
            <summary>
            Gets the type of the action.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonToggleSwitch">
            <summary>
            A toggle switch.
            Boilerplate code from: https://github.com/aalitor/AltoControls/blob/on-development/AltoControls/Controls/SwitchButton.cs
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonTreeViewExtended.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonTreeViewExtended.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.RoundedTextbox">
            <summary>
            Provides a rounded textbox like Google Chrome's current Omnibox design.
            Original code: https://github.com/aalitor/AltoControls/blob/on-development/AltoControls/Controls/AltoTextBox.cs
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.ShellIcon">
            <summary>
            Summary description for ShellIcon.
            </summary>
            <summary>
            Summary description for ShellIcon.  Get a small or large Icon with an easy C# function call
            that returns a 32x32 or 16x16 System.Drawing.Icon depending on which function you call
            either GetSmallIcon(string fileName) or GetLargeIcon(string fileName)
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.ToggleSwitch">
            <summary>
            A toggle switch.
            Boilerplate code from: https://github.com/aalitor/AltoControls/blob/on-development/AltoControls/Controls/SwitchButton.cs
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.ToolbarItems.KryptonToolbarSlider.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.ToolbarItems.KryptonToolbarSlider.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonColourButtonToolStripMenuItem.KryptonColorButtonControl">
            <summary>
            Gets the KryptonColorButton control.
            </summary>
            <value>The KryptonColorButton control.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonColourButtonToolStripMenuItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxToolStripMenuItem"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonColourButtonToolStripMenuItem.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
            <param name="constrainingSize">The custom-sized area for a control.</param>
            <returns>
            An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.
            </returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/></PermissionSet>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonColourButtonToolStripMenuItem.OnSubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            Subscribes events from the hosted control.
            </summary>
            <param name="control">The control from which to subscribe events.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonColourButtonToolStripMenuItem.OnUnsubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            Unsubscribes events from the hosted control.
            </summary>
            <param name="control">The control from which to unsubscribe events.</param>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxEnhanced.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxEnhanced.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxEnhanced.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxToolStripMenuItem.KryptonComboBoxControl">
            <summary>
            Gets the KryptonComboBox control.
            </summary>
            <value>The KryptonComboBox control.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxToolStripMenuItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxToolStripMenuItem"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxToolStripMenuItem.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
            <param name="constrainingSize">The custom-sized area for a control.</param>
            <returns>
            An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.
            </returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/></PermissionSet>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxToolStripMenuItem.OnSubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            Subscribes events from the hosted control.
            </summary>
            <param name="control">The control from which to subscribe events.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxToolStripMenuItem.OnUnsubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            Unsubscribes events from the hosted control.
            </summary>
            <param name="control">The control from which to unsubscribe events.</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxTree">
            <summary>
            ComboBoxTree control is a treeview that drops down much like a combobox
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxTree.LabelEx.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxTree.LabelEx.OnPaint(System.Windows.Forms.PaintEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxTree.ButtonEx.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxTree.ButtonEx.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxTree.ButtonEx.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonComboBoxTree.ButtonEx.OnPaint(System.Windows.Forms.PaintEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonImageComboBox">
            <summary>
            Provide a ComboBox with Krypton styling applied. 
            Credits to Ricardo Francisco - http://cid-a2733fd867b9e919.profile.live.com/
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonSliderButton.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonSliderButton.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonTrackBarToolStripMenuItem.KryptonTrackBarControl">
            <summary>
            Gets the KryptonTrackBar control.
            </summary>
            <value>The KryptonTrackBar control.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonTrackBarToolStripMenuItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonTrackBarToolStripMenuItem"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonTrackBarToolStripMenuItem.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
            <param name="constrainingSize">The custom-sized area for a control.</param>
            <returns>
            An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.
            </returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/></PermissionSet>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonTrackBarToolStripMenuItem.OnSubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            Subscribes events from the hosted control.
            </summary>
            <param name="control">The control from which to subscribe events.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonTrackBarToolStripMenuItem.OnUnsubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            Unsubscribes events from the hosted control.
            </summary>
            <param name="control">The control from which to unsubscribe events.</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonTreeView">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Forms.TreeView" />
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonViewButtons.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonViewButtons.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.KryptonViewButtons.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.ListViewColumnSorter">
            <summary>
            This class is an implementation of the 'IComparer' interface.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.ListViewColumnSorter.ColumnToSort">
            <summary>
            Specifies the column to be sorted
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.ListViewColumnSorter.OrderOfSort">
            <summary>
            Specifies the order in which to sort (i.e. 'Ascending').
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.ListViewColumnSorter.ObjectCompare">
            <summary>
            Case insensitive comparer object
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.ListViewColumnSorter.#ctor">
            <summary>
            Class constructor.  Initializes various elements
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.ListViewColumnSorter.Compare(System.Object,System.Object)">
            <summary>
            This method is inherited from the IComparer interface.  It compares the two objects passed using a case insensitive comparison.
            </summary>
            <param name="x">First object to be compared</param>
            <param name="y">Second object to be compared</param>
            <returns>The result of the comparison. "0" if equal, negative if 'x' is less than 'y' and positive if 'x' is greater than 'y'</returns>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.ListViewColumnSorter.SortColumn">
            <summary>
            Gets or sets the number of the column to which to apply the sorting operation (Defaults to '0').
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonControls.ListViewColumnSorter.Order">
            <summary>
            Gets or sets the order of sorting to apply (for example, 'Ascending' or 'Descending').
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.Experimental.ToggleSwitches.KryptonToggleSwitchV1.ToggleState">
            <summary>
            
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.Experimental.ToggleSwitches.KryptonToggleSwitchV1.ToggleStateChangedEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.Experimental.ToggleSwitches.KryptonToggleSwitchV1.ToggleStateChanged">
            <summary>
            Occurs when [toggle state changed].
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Experimental.ToggleSwitches.KryptonToggleSwitchV1.OnPalettePaint(System.Object,ComponentFactory.Krypton.Toolkit.PaletteLayoutEventArgs)">
            <summary>
            Called when [palette paint].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:ComponentFactory.Krypton.Toolkit.PaletteLayoutEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Experimental.ToggleSwitches.KryptonToggleSwitchV1.OnGlobalPaletteChanged(System.Object,System.EventArgs)">
            <summary>
            Called when [global palette changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Experimental.ToggleSwitches.KryptonToggleSwitchV1.Toggled">
            <summary>
            Gets or sets Toggled.
            </summary>
            <value>
            _toggled.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Experimental.ToggleSwitches.KryptonToggleSwitchV1.State">
            <summary>
            Gets or sets State.
            </summary>
            <value>
            _toggleState.
            </value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Experimental.ToggleSwitches.KryptonToggleSwitchV1.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control" /> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Experimental.ToggleSwitches.KryptonToggleSwitchV1.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Experimental.ToggleSwitches.KryptonToggleSwitchV1.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Experimental.ToggleSwitches.KryptonToggleSwitchV1.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.Experimental.ToggleSwitches.KryptonToggleSwitchV1"/> class.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.FileExplorer.FolderBrowserDialogExtended.Description">
            <summary>
            This description appears near the top of the dialog box, providing direction to the user.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.FileExplorer.FolderBrowserDialogExtended.SelectedPath">
            <summary>
            Set or get the selected path.  
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.FileExplorer.FolderBrowserDialogExtended.ShowNewFolderButton">
            <summary>
            Enable or disable the "New Folder" button in the browser dialog.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.FileExplorer.FolderBrowserDialogExtended.ShowEditBox">
            <summary>
            Show an "edit box" in the folder browser.
            </summary>
            <remarks>
            The "edit box" normally shows the name of the selected folder.  
            The user may also type a pathname directly into the edit box.  
            </remarks>
            <seealso cref="P:ExtendedControls.ExtendedToolkit.Controls.FileExplorer.FolderBrowserDialogExtended.ShowFullPathInEditBox"/>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.FileExplorer.FolderBrowserDialogExtended.NewStyle">
            <summary>
            Set whether to use the New Folder Browser dialog style.
            </summary>
            <remarks>
            The new style is resizable and includes a "New Folder" button.
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.FileExplorer.FolderBrowserDialogExtended.ShowFullPathInEditBox">
            <summary>
            Show the full path in the edit box as the user selects it. 
            </summary>
            <remarks>
            This works only if ShowEditBox is also set to true. 
            </remarks>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended">
            <summary>
            Displays a message box that can contain text, buttons, and symbols that inform and instruct the user.
            Allows optional Font to be specified, if not then new Font(@"Segoe UI", 12F) will be used
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.InitialiseComponent">
            <summary>
            Initialises the component.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.DoNotShowAgainOptionResult">
            <summary>
            Gets or sets a value indicating whether [do not show again option result].
            </summary>
            <value>
              <c>true</c> if [do not show again option result]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.MessageBoxTypeface">
            <summary>
            Gets or sets the message box typeface.
            </summary>
            <value>
            The message box typeface.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.TimeOut">
            <summary>
            Gets or sets the time out for the <see cref="!:ExtendedKryptonMessageBox"/>.
            </summary>
            <value>
            The time out.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.TimeOutTimerDelay">
            <summary>
            Gets or sets the time out timer delay.
            </summary>
            <value>
            The time out timer delay.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.DoNotShowAgainOptionText">
            <summary>
            Gets or sets the do not show again option text.
            </summary>
            <value>
            The do not show again option text.
            </value>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.HelpInformation">
            <summary>
            What is this class for?
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.HelpInformation.HelpFilePath">
            <summary>
            Gets the HelpFilePath property.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.HelpInformation.Keyword">
            <summary>
            Gets the Keyword property.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.HelpInformation.Navigator">
            <summary>
            Gets the Navigator property.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.HelpInformation.Param">
            <summary>
            Gets the Param property.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.HelpInformation.#ctor">
            <summary>
            Initialize a new instance of the HelpInformation class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.HelpInformation.#ctor(System.String)">
            <summary>
            Initialize a new instance of the HelpInformation class.
            </summary>
            <param name="helpFilePath">Value for HelpFilePath.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.HelpInformation.#ctor(System.String,System.String)">
            <summary>
            Initialize a new instance of the HelpInformation class.
            </summary>
            <param name="helpFilePath">Value for HelpFilePath.</param>
            <param name="keyword">Value for Keyword</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.HelpInformation.#ctor(System.String,System.Windows.Forms.HelpNavigator)">
            <summary>
            Initialize a new instance of the HelpInformation class.
            </summary>
            <param name="helpFilePath">Value for HelpFilePath.</param>
            <param name="navigator">Value for Navigator</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.HelpInformation.#ctor(System.String,System.Windows.Forms.HelpNavigator,System.Object)">
            <summary>
            Initialize a new instance of the HelpInformation class.
            </summary>
            <param name="helpFilePath">Value for HelpFilePath.</param>
            <param name="navigator">Value for Navigator</param>
            <param name="param">Value for Param</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.MessageButton.IgnoreAltF4">
            <summary>
            Gets and sets the ignoring of Alt+F4
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.MessageButton.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process. </param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.#ctor(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.HelpInformation,System.Nullable{System.Boolean},System.Drawing.Font)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended"/> class.
            </summary>
            <param name="showOwner">The show owner.</param>
            <param name="text">The text.</param>
            <param name="caption">The caption.</param>
            <param name="buttons">The buttons.</param>
            <param name="icon">The icon.</param>
            <param name="defaultButton">The default button.</param>
            <param name="options">The options.</param>
            <param name="helpInformation">The help information.</param>
            <param name="showCtrlCopy">The show control copy.</param>
            <param name="messageboxTypeface">The messagebox typeface.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.#ctor(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.HelpInformation,System.Nullable{System.Boolean},System.Drawing.Font,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended"/> class.
            </summary>
            <param name="showOwner">The show owner.</param>
            <param name="text">The text.</param>
            <param name="caption">The caption.</param>
            <param name="buttons">The buttons.</param>
            <param name="icon">The icon.</param>
            <param name="defaultButton">The default button.</param>
            <param name="options">The options.</param>
            <param name="helpInformation">The help information.</param>
            <param name="showCtrlCopy">The show control copy.</param>
            <param name="messageboxTypeface">The messagebox typeface.</param>
            <param name="topMost">if set to <c>true</c> [top most].</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.#ctor(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.HelpInformation,System.Nullable{System.Boolean},System.Drawing.Font,System.Boolean,System.String,System.Boolean,System.Int32,System.Int32,System.Windows.Forms.DialogResult,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended"/> class.
            </summary>
            <param name="showOwner">The show owner.</param>
            <param name="text">The text.</param>
            <param name="caption">The caption.</param>
            <param name="buttons">The buttons.</param>
            <param name="icon">The icon.</param>
            <param name="defaultButton">The default button.</param>
            <param name="options">The options.</param>
            <param name="helpInformation">The help information.</param>
            <param name="showCtrlCopy">The show control copy.</param>
            <param name="messageboxTypeface">The messagebox typeface.</param>
            <param name="showDoNotShowAgainOption">if set to <c>true</c> [show do not show again option].</param>
            <param name="doNotShowAgainOptionText">The do not show again option text.</param>
            <param name="useTimeOutOption">if set to <c>true</c> [use time out option].</param>
            <param name="timeOut">The time out.</param>
            <param name="timeOutDelay">The time out delay.</param>
            <param name="defaultTimeOutResponse">The default time out response.</param>
            <param name="button1Text">The button1 text.</param>
            <param name="button2Text">The button2 text.</param>
            <param name="button3Text">The button3 text.</param>
            <param name="topMost">if set to <c>true</c> [top most].</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.String,System.Nullable{System.Boolean},System.Drawing.Font,System.Boolean)">
            <summary>
            Displays a message box with specified text.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.Windows.Forms.IWin32Window,System.String,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box in front of the specified object and with the specified text.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.String,System.String,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with specified text and caption.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box in front of the specified object and with the specified text and caption.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with specified text, caption, and buttons.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box in front of the specified object and with the specified text, caption, and buttons.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with specified text, caption, buttons, and icon.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box in front of the specified object and with the specified text, caption, buttons, and icon.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, and default button.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box in front of the specified object and with the specified text, caption, buttons, icon, and default button.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, and options.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font,System.String,System.String,System.String)">
            <summary>
            Displays a message box with specified text, caption, and buttons.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box in front of the specified object and with the specified text, caption, buttons, icon, default button, and options.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Boolean,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="displayHelpButton">Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and HelpNavigator.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="navigator">One of the System.Windows.Forms.HelpNavigator values.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.String,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and Help keyword.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="keyword">The Help keyword to display when the user clicks the Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and HelpNavigator.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="navigator">One of the System.Windows.Forms.HelpNavigator values.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.String,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and Help keyword.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="keyword">The Help keyword to display when the user clicks the Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file, HelpNavigator, and Help topic.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="navigator">One of the System.Windows.Forms.HelpNavigator values.</param>
            <param name="param">The numeric ID of the Help topic to display when the user clicks the Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file, HelpNavigator, and Help topic.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="navigator">One of the System.Windows.Forms.HelpNavigator values.</param>
            <param name="param">The numeric ID of the Help topic to display when the user clicks the Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <param name="messageboxTypeface">Defines the messagebox font.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonMessageBoxExtended.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font,System.Boolean,System.String,System.Boolean,System.Int32,System.Int32,System.Windows.Forms.DialogResult)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file, HelpNavigator, and Help topic.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="navigator">One of the System.Windows.Forms.HelpNavigator values.</param>
            <param name="param">The numeric ID of the Help topic to display when the user clicks the Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <param name="messageboxTypeface">Defines the messagebox font.</param>
            <param name="showDoNotShowAgainOption">Displays the 'Do not show again' UI elements.</param>
            <param name="doNotShowAgainOptionText">Set your own 'Do not show again' text.</param>
            <param name="useTimeOutOption">Use the time out feature.</param>
            <param name="timeOut">Seconds until time out.</param>
            <param name="timeOutDelay">The timer interval.</param>
            <param name="defaultTimeOutResponse">What should the response be after timeout?</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonToastNotificationPopup">
            <summary>
            Non-visual component to show a notification window in the right lower
            corner of the screen. Adapted from: https://github.com/Tulpep/Notification-Popup-Window/blob/master/Tulpep.NotificationWindow/PopupNotifier.cs
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.KryptonToastNotificationPopup.Click">
            <summary>
            Event that is raised when the text in the notification window is clicked.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.KryptonToastNotificationPopup.Close">
            <summary>
            Event that is raised when the notification window is manually closed.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.KryptonToastNotificationPopup.Appear">
            <summary>
            Event that is raised when the notification Appears.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.KryptonToastNotificationPopup.Disappear">
            <summary>
            Event that is raised when the notification Disappears.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonToastNotificationPopup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonToastNotificationPopup"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonToastNotificationPopup.Popup">
            <summary>
            Show the notification window if it is not already visible.
            If the window is currently disappearing, it is shown again.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonToastNotificationPopup.Hide">
            <summary>
            Hide the notification window.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.CustomTreeView.ShellIcon">
            <summary>
            Summary description for ShellIcon.
            </summary>
            <summary>
            Summary description for ShellIcon.  Get a small or large Icon with an easy C# function call
            that returns a 32x32 or 16x16 System.Drawing.Icon depending on which function you call
            either GetSmallIcon(string fileName) or GetLargeIcon(string fileName)
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.TickStyle">
            <summary>
            Defines the ticking style used for the second and minute hands of the analog clock. 
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.TickStyle.Smooth">
            <summary>
            Smooth ticking style. For example if used with second hand it will be updated every millisecond.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.TickStyle.Normal">
            <summary>
            Normal ticking style. For example if used with second hand it will be updated every second only.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock">
            <summary>
            Represents the Analog clock control.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.#ctor">
            <summary>
            Creates a new instace of the Analog Clock control.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.FaceImage">
            <summary>
            The Background image used in the clock face.
            </summary>
            <remarks>Using a large image will result in poor performance and increased memory consumption.</remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.SecondHandTickStyle">
            <summary>
            Defines the second hand tick style.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.MinuteHandTickStyle">
            <summary>
            Defines the minute hand tick style.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.DrawNumerals">
            <summary>
            Determines whether the Numerals are drawn on the clock face.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.SmoothingMode">
            <summary>
            Sets or gets the rendering quality of the clock.
            </summary>
            <remarks>This property does not effect the numeral text rendering quality. To set the numeral text rendering quality use the <see cref="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.TextRenderingHint"/> Property</remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.TextRenderingHint">
            <summary>
            Sets or gets the text rendering mode used for the clock numerals.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.DrawRim">
            <summary>
            Determines whether the clock Rim is drawn or not.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.DrawDropShadow">
            <summary>
            Determines whether drop shadow for the clock is drawn or not.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.DropShadowColour">
            <summary>
            Sets or gets the color of the Drop Shadow.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.SecondHandDropShadowColour">
            <summary>
            Sets or gets the color of the second hand drop Shadow.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.MinuteHandDropShadowColour">
            <summary>
            Sets or gets the color of the Minute hand drop Shadow.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.HourHandDropShadowColour">
            <summary>
            Sets or gets the color of the hour hand drop Shadow.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.FaceColourHigh">
            <summary>
            Determines the first color of the clock face gradient.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.FaceColourLow">
            <summary>
            Determines the second color of the clock face gradient.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.DrawSecondHandShadow">
            <summary>
            Determines whether the second hand casts a drop shadow for added realism.  
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.DrawHourHandShadow">
            <summary>
            Determines whether the hour hand casts a drop shadow for added realism.  
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.DrawMinuteHandShadow">
            <summary>
            Determines whether the minute hand casts a drop shadow for added realism.  
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.RimColourHigh">
            <summary>
            Determines the first color of the rim gradient.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.RimColourLow">
            <summary>
            Determines the second color of the rim face gradient.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.RimGradientMode">
            <summary>
            Gets or sets the direction of the Rim gradient.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.FaceGradientMode">
            <summary>
            Gets or sets the direction of the Clock Face gradient.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.SecondHandEndCap">
            <summary>
            Determines the Seconds hand end line shape.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.Time">
            <summary>
            The System.DateTime structure which is used to display time.
            </summary>
            <example>
            <code>
            AnalogClock clock = new AnalogClock();
            clock.Time = DateTime.Now;
            </code>
            </example>
            <remarks>The clock face is updated every time the value of this property is changed.</remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.SecondHandColour">
            <summary>
            Gets or sets the color of the Seconds Hand.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.NumeralColour">
            <summary>
            Sets or gets the color of the clock Numerals.
            </summary>
            <remarks>To change the numeral font use the <see cref="T:System.Drawing.Font"/> Property </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.HourHandColour">
            <summary>
            Gets or sets the color of the Hour Hand.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.MinuteHandColour">
            <summary>
            Gets or sets the color of the Minute Hand.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.DrawSecondHand">
            <summary>
            Determines whether the second Hand is shown. 
            </summary>
            
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.DrawMinuteHand">
            <summary>
            Determines whether the minute hand is shown. 
            </summary>
            
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.DrawHourHand">
            <summary>
            Determines whether the hour Hand is shown. 
            </summary>
            
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.DropShadowOffset">
            <summary>
            Gets or sets the drop shadow offset.
            </summary>
            
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.AnalogClock.DrawClock(System.Drawing.Graphics)">
            <summary>
            Draws analog clock on the given GDI+ Drawing surface.
            </summary>
            <param name="e">The GDI+ Drawing surface.</param>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.Gauge.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.Gauge.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.Gauge.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.Gauge._designMode">
            
             Indicates if the current view is being utilized in the VS.NET IDE or not.
            
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.GroupableListView.CreateButtons">
            <summary>
            Method for generation ToolStrip Buttons on GroupBy ToolStrip
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.IPAddressControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.IPAddressControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.IPAddressControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.IPAddressControl.Text">
            <summary> The IP address </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.IPAddressControl.convert(ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.IPAddressControl.ConvertDirection,System.String)">
            <summary>
            Converts a string from the 'pretty' spaced version to a tight no-whitespaced version (and vice versa)
            </summary>
            <param name="dir">Add or remove the whitespace</param>
            <param name="ipToConvert">The string you want to convert</param>
            <returns>Converted string</returns>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.Color">
            <summary>
            Gets or sets the lightest color of the circle.
            </summary>
            <value>The lightest color of the circle.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.OuterCircleRadius">
            <summary>
            Gets or sets the outer circle radius.
            </summary>
            <value>The outer circle radius.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.InnerCircleRadius">
            <summary>
            Gets or sets the inner circle radius.
            </summary>
            <value>The inner circle radius.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.NumberSpoke">
            <summary>
            Gets or sets the number of spoke.
            </summary>
            <value>The number of spoke.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.Active">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:LoadingCircle"/> is active.
            </summary>
            <value><c>true</c> if active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.SpokeThickness">
            <summary>
            Gets or sets the spoke thickness.
            </summary>
            <value>The spoke thickness.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.RotationSpeed">
            <summary>
            Gets or sets the rotation speed.
            </summary>
            <value>The rotation speed.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.StylePreset">
            <summary>
            Quickly sets the style to one of these presets, or a custom style if desired
            </summary>
            <value>The style preset.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LoadingCircle"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.LoadingCircle_Resize(System.Object,System.EventArgs)">
            <summary>
            Handles the Resize event of the LoadingCircle control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.aTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the aTimer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
            <param name="proposedSize">The custom-sized area for a control.</param>
            <returns>
            An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.
            </returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.Darken(System.Drawing.Color,System.Int32)">
            <summary>
            Darkens a specified color.
            </summary>
            <param name="_objColor">Color to darken.</param>
            <param name="_intPercent">The percent of darken.</param>
            <returns>The new color generated.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.GenerateColorsPallet">
            <summary>
            Generates the colors pallet.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.GenerateColorsPallet(System.Drawing.Color,System.Boolean,System.Int32)">
            <summary>
            Generates the colors pallet.
            </summary>
            <param name="_objColor">Color of the lightest spoke.</param>
            <param name="_blnShadeColor">if set to <c>true</c> the color will be shaded on X spoke.</param>
            <returns>An array of color used to draw the circle.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.GetControlCenterPoint">
            <summary>
            Gets the control center point.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.GetControlCenterPoint(System.Windows.Forms.Control)">
            <summary>
            Gets the control center point.
            </summary>
            <returns>PointF object</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.DrawLine(System.Drawing.Graphics,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Int32)">
            <summary>
            Draws the line with GDI+.
            </summary>
            <param name="_objGraphics">The Graphics object.</param>
            <param name="_objPointOne">The point one.</param>
            <param name="_objPointTwo">The point two.</param>
            <param name="_objColor">Color of the spoke.</param>
            <param name="_intLineThickness">The thickness of spoke.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.GetCoordinate(System.Drawing.PointF,System.Int32,System.Double)">
            <summary>
            Gets the coordinate.
            </summary>
            <param name="_objCircleCenter">The Circle center.</param>
            <param name="_intRadius">The radius.</param>
            <param name="_dblAngle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.GetSpokesAngles">
            <summary>
            Gets the spokes angles.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.GetSpokesAngles(System.Int32)">
            <summary>
            Gets the spoke angles.
            </summary>
            <param name="_shtNumberSpoke">The number spoke.</param>
            <returns>An array of angle.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.ActiveTimer">
            <summary>
            Actives the timer.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircle.SetCircleAppearance(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the circle appearance.
            </summary>
            <param name="numberSpoke">The number spoke.</param>
            <param name="spokeThickness">The spoke thickness.</param>
            <param name="innerCircleRadius">The inner circle radius.</param>
            <param name="outerCircleRadius">The outer circle radius.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircleToolStripMenuItem.LoadingCircleControl">
            <summary>
            Gets the loading circle control.
            </summary>
            <value>The loading circle control.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircleToolStripMenuItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircleToolStripMenuItem"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircleToolStripMenuItem.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
            <param name="constrainingSize">The custom-sized area for a control.</param>
            <returns>
            An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.
            </returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/></PermissionSet>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircleToolStripMenuItem.OnSubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            Subscribes events from the hosted control.
            </summary>
            <param name="control">The control from which to subscribe events.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.LoadingCircleToolStripMenuItem.OnUnsubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            Unsubscribes events from the hosted control.
            </summary>
            <param name="control">The control from which to unsubscribe events.</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.PrintableRichTextBox">
            <summary>
            An extension for RichTextBox suitable for printing.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.PrintableRichTextBox.FormatRange(System.Boolean,System.Drawing.Printing.PrintPageEventArgs,System.Int32,System.Int32)">
            <summary>
            Calculate or render the contents of our RichTextBox for printing
            </summary>
            <param name="measureOnly">If true, only the calculation is performed,
            otherwise the text is rendered as well</param>
            <param name="e">The PrintPageEventArgs object from the
            PrintPage event</param>
            <param name="charFrom">Index of first character to be printed</param>
            <param name="charTo">Index of last character to be printed</param>
            <returns>(Index of last character that fitted on the
            page) + 1</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.PrintableRichTextBox.HundredthInchToTwips(System.Int32)">
            <summary>
            Convert between 1/100 inch (unit used by the .NET framework)
            and twips (1/1440 inch, used by Win32 API calls)
            </summary>
            <param name="n">Value in 1/100 inch</param>
            <returns>Value in twips</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.PrintableRichTextBox.FormatRangeDone">
            <summary>
            Free cached data from rich edit control after printing
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.PrintableRichTextBox.SetSelectionFont(System.String)">
            <summary>
            Sets the font only for the selected part of the rich text box
            without modifying the other properties like size or style
            </summary>
            <param name="face">Name of the font to use</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.PrintableRichTextBox.SetSelectionSize(System.Int32)">
            <summary>
            Sets the font size only for the selected part of the rich text box
            without modifying the other properties like font or style
            </summary>
            <param name="size">new point size to use</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.PrintableRichTextBox.SetSelectionBold(System.Boolean)">
            <summary>
            Sets the bold style only for the selected part of the rich text box
            without modifying the other properties like font or size
            </summary>
            <param name="bold">make selection bold (true) or regular (false)</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.PrintableRichTextBox.SetSelectionItalic(System.Boolean)">
            <summary>
            Sets the italic style only for the selected part of the rich text box
            without modifying the other properties like font or size
            </summary>
            <param name="italic">make selection italic (true) or regular (false)</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.PrintableRichTextBox.SetSelectionUnderlined(System.Boolean)">
            <summary>
            Sets the underlined style only for the selected part of the rich text box
            without modifying the other properties like font or size
            </summary>
            <param name="underlined">make selection underlined (true) or regular (false)</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.PrintableRichTextBox.SetSelectionStyle(System.UInt32,System.UInt32)">
            <summary>
            Set the style only for the selected part of the rich text box
            with the possibility to mask out some styles that are not to be modified
            </summary>
            <param name="mask">modify which styles?</param>
            <param name="effect">new values for the styles</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar">
            <summary>
            A replacement for the default ProgressBar control.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.#ctor">
            <summary>
            Create the control and initialize it.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.DisplayText">
            <summary>
            The value that is displayed on the progress bar.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.Value">
            <summary>
            The value that is displayed on the progress bar.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.MaxValue">
            <summary>
            The maximum value for the Value property.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.MinValue">
            <summary>
            The minimum value for the Value property.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.StartColour">
            <summary>
            The start color for the progress bar.
            210, 000, 000 = Red
            210, 202, 000 = Yellow
            000, 163, 211 = Blue
            000, 211, 040 = Green
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.EndColour">
            <summary>
            The end color for the progress bar.
            210, 000, 000 = Red
            210, 202, 000 = Yellow
            000, 163, 211 = Blue
            000, 211, 040 = Green
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.HighlightColour">
            <summary>
            The color of the highlights.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.BackgroundColour">
            <summary>
            The color of the background.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.Animate">
            <summary>
            Whether the glow is animated.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.GlowColour">
            <summary>
            The color of the glow.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.ValueChangedHandler">
            <summary>
            When the Value property is changed.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.ValueChanged">
            <summary>
            When the Value property is changed.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.MinChangedHandler">
            <summary>
            When the MinValue property is changed.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.MinChanged">
            <summary>
            When the MinValue property is changed.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.MaxChangedHandler">
            <summary>
            When the MaxValue property is changed.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ProgressBar.MaxChanged">
            <summary>
            When the MaxValue property is changed.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ScrollingLabelToolStripMenuItem.ScrollingLabelControl">
            <summary>
            Gets the ScrollingLabel control.
            </summary>
            <value>The loading circle control.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ScrollingLabelToolStripMenuItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ScrollingLabelToolStripMenuItem"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ScrollingLabelToolStripMenuItem.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
            <param name="constrainingSize">The custom-sized area for a control.</param>
            <returns>
            An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.
            </returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/></PermissionSet>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ScrollingLabelToolStripMenuItem.OnSubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            Subscribes events from the hosted control.
            </summary>
            <param name="control">The control from which to subscribe events.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ScrollingLabelToolStripMenuItem.OnUnsubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            Unsubscribes events from the hosted control.
            </summary>
            <param name="control">The control from which to unsubscribe events.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.TimeFrame.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.TimeFrame.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.TimeFrame.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.WatermarkedRichTextBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.WatermarkedRichTextBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.WatermarkedRichTextBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.WatermarkedRichTextBox.WaterMarkText">
            <summary>
            This watermark will appear if the control loses the focus and has no Text
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.WatermarkedRichTextBox.WaterMarkFont">
            <summary>
            The font, the watermark will be displayed with
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.WatermarkedRichTextBox.WaterMarkFontColour">
            <summary>
            The color, the watermark will be displayed with
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.WatermarkedRichTextBox.WaterMarkUsePaletteFontColour">
            <summary>
            If set, the font-color watermark will be relative to the used palette
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.WatermarkedTextBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.WatermarkedTextBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.WatermarkedTextBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.WatermarkedTextBox.WaterMarkText">
            <summary>
            This watermark will appear if the control loses the focus and has no Text
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.WatermarkedTextBox.WaterMarkFont">
            <summary>
            The font, the watermark will be displayed with
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.WatermarkedTextBox.WaterMarkFontColour">
            <summary>
            The color, the watermark will be displayed with
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.WatermarkedTextBox.WaterMarkUsePaletteFontColour">
            <summary>
            If set, the font-color watermark will be relative to the used palette
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ScrollingLabel">
            <summary>
            Summary description for UserControl1.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ScrollingLabel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.Common.ScrollingLabel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell">
            <summary>
            Provides a drop-down filter list in a DataGridViewColumnHeaderCell.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.dropDownListBox">
            <summary>
            The ListBox used for all drop-down lists. 
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.filters">
            <summary>
            A list of filters available for the owning column stored as 
            formatted and unformatted string values. 
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.selectedFilterValue">
            <summary>
            The drop-down list filter value currently in effect for the owning column. 
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.currentColumnFilter">
            <summary>
            The complete filter string currently in effect for the owning column. 
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.filtered">
            <summary>
            Indicates whether the DataGridView is currently filtered by the owning column.  
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.#ctor(System.Windows.Forms.DataGridViewColumnHeaderCell)">
            <summary>
            Initializes a new instance of the DataGridViewColumnHeaderCell 
            class and sets its property values to the property values of the 
            specified DataGridViewColumnHeaderCell.
            </summary>
            <param name="oldHeaderCell">The DataGridViewColumnHeaderCell to copy property values from.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.#ctor">
            <summary>
            Initializes a new instance of the DataGridViewColumnHeaderCell 
            class. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.Clone">
            <summary>
            Creates an exact copy of this cell.
            </summary>
            <returns>An object that represents the cloned DataGridViewAutoFilterColumnHeaderCell.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.OnDataGridViewChanged">
            <summary>
            Called when the value of the DataGridView property changes
            in order to perform initialization that requires access to the 
            owning control and column. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.VerifyDataSource">
            <summary>
            Confirms that the data source, if it has been set, is a BindingSource.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.HandleDataGridViewEvents">
            <summary>
            Add handlers to various DataGridView events, primarily to invalidate 
            the drop-down button bounds, hide the drop-down list, and reset 
            cached filter values when changes in the DataGridView require it.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.DataGridView_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Invalidates the drop-down button bounds when the user scrolls horizontally.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A ScrollEventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.DataGridView_ColumnDisplayIndexChanged(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
            <summary>
            Invalidates the drop-down button bounds when the column display index changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.DataGridView_ColumnWidthChanged(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
            <summary>
            Invalidates the drop-down button bounds when a column width changes
            in the DataGridView control. A width change in any column of the 
            control has the potential to affect the drop-down button location, 
            depending on the current horizontal scrolling position and whether
            the changed column is to the left or right of the current column. 
            It is easier to invalidate the button in all cases. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A DataGridViewColumnEventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.DataGridView_ColumnHeadersHeightChanged(System.Object,System.EventArgs)">
            <summary>
            Invalidates the drop-down button bounds when the height of the column headers changes.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.DataGridView_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            Invalidates the drop-down button bounds when the size of the DataGridView changes.
            This prevents a painting issue that occurs when the right edge of the control moves 
            to the right and the control contents have previously been scrolled to the right.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.DataGridView_DataBindingComplete(System.Object,System.Windows.Forms.DataGridViewBindingCompleteEventArgs)">
            <summary>
            Invalidates the drop-down button bounds, hides the drop-down 
            filter list, if it is showing, and resets the cached filter values
            if the filter has been removed. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A DataGridViewBindingCompleteEventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.DataGridView_DataSourceChanged(System.Object,System.EventArgs)">
            <summary>
            Verifies that the data source meets requirements, invalidates the 
            drop-down button bounds, hides the drop-down filter list if it is 
            showing, and resets the cached filter values if the filter has been removed. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.ResetDropDown">
            <summary>
            Invalidates the drop-down button bounds and hides the filter
            list if it is showing.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.ResetFilter">
            <summary>
            Resets the cached filter values if the filter has been removed.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.DataGridView_ColumnSortModeChanged(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
            <summary>
            Throws an exception when the column sort mode is changed to Automatic.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A DataGridViewColumnEventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <summary>
            Paints the column header cell, including the drop-down button. 
            </summary>
            <param name="graphics">The Graphics used to paint the DataGridViewCell.</param>
            <param name="clipBounds">A Rectangle that represents the area of the DataGridView that needs to be repainted.</param>
            <param name="cellBounds">A Rectangle that contains the bounds of the DataGridViewCell that is being painted.</param>
            <param name="rowIndex">The row index of the cell that is being painted.</param>
            <param name="cellState">A bitwise combination of DataGridViewElementStates values that specifies the state of the cell.</param>
            <param name="value">The data of the DataGridViewCell that is being painted.</param>
            <param name="formattedValue">The formatted data of the DataGridViewCell that is being painted.</param>
            <param name="errorText">An error message that is associated with the cell.</param>
            <param name="cellStyle">A DataGridViewCellStyle that contains formatting and style information about the cell.</param>
            <param name="advancedBorderStyle">A DataGridViewAdvancedBorderStyle that contains border styles for the cell that is being painted.</param>
            <param name="paintParts">A bitwise combination of the DataGridViewPaintParts values that specifies which parts of the cell need to be painted.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>
            Handles mouse clicks to the header cell, displaying the 
            drop-down list or sorting the owning column as appropriate. 
            </summary>
            <param name="e">A DataGridViewCellMouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.SortByColumn">
            <summary>
            Sorts the DataGridView by the current column if AutomaticSortingEnabled is true.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.dropDownListBoxShowing">
            <summary>
            Indicates whether dropDownListBox is currently displayed 
            for this header cell. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.ShowDropDownList">
            <summary>
            Displays the drop-down filter list. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.HideDropDownList">
            <summary>
            Hides the drop-down filter list. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.SetDropDownListBoxBounds">
            <summary>
            Sets the dropDownListBox size and position based on the formatted 
            values in the filters dictionary and the position of the drop-down 
            button. Called only by ShowDropDownListBox.  
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.DropDownListBoxMaxHeightInternal">
            <summary>
            Gets the actual maximum height of the drop-down list, in pixels.
            The maximum height is calculated from the DropDownListBoxMaxLines 
            property value, but is limited to the available height of the 
            DataGridView control. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.HandleDropDownListBoxEvents">
            <summary>
            Adds handlers to ListBox events for handling mouse
            and keyboard input.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.UnhandleDropDownListBoxEvents">
            <summary>
            Removes the ListBox event handlers. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.DropDownListBox_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Adjusts the filter in response to a user selection from the drop-down list. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.lostFocusOnDropDownButtonClick">
            <summary>
            Indicates whether the drop-down list lost focus because the
            user clicked the drop-down button. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.DropDownListBox_LostFocus(System.Object,System.EventArgs)">
            <summary>
            Hides the drop-down list when it loses focus. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.DropDownListBox_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the ENTER and ESC keys.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.PopulateFilters">
            <summary>
            Populates the filters dictionary with formatted and unformatted string
            representations of each unique value in the column, accounting for all 
            filters except the current column's. Also adds special filter options. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.FilterWithoutCurrentColumn(System.String)">
            <summary>
            Returns a copy of the specified filter string after removing the part that filters the current column, if present. 
            </summary>
            <param name="filter">The filter string to parse.</param>
            <returns>A copy of the specified filter string without the current column's filter.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.UpdateFilter">
            <summary>
            Updates the BindingSource.Filter value based on a user selection
            from the drop-down filter list. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.RemoveFilter(System.Windows.Forms.DataGridView)">
            <summary>
            Removes the filter from the BindingSource bound to the specified DataGridView. 
            </summary>
            <param name="dataGridView">The DataGridView bound to the BindingSource to unfilter.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.GetFilterStatus(System.Windows.Forms.DataGridView)">
            <summary>
            Gets a status string for the specified DataGridView indicating the 
            number of visible rows in the bound, filtered BindingSource, or 
            String.Empty if all rows are currently visible. 
            </summary>
            <param name="dataGridView">The DataGridView bound to the 
            BindingSource to return the filter status for.</param>
            <returns>A string in the format "x of y records found" where x is 
            the number of rows currently displayed and y is the number of rows 
            available, or String.Empty if all rows are currently displayed.</returns>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.dropDownButtonBoundsValue">
            <summary>
            The bounds of the drop-down button, or Rectangle.Empty if filtering 
            is disabled or the button bounds need to be recalculated. 
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.DropDownButtonBounds">
            <summary>
            The bounds of the drop-down button, or Rectangle.Empty if filtering
            is disabled. Recalculates the button bounds if filtering is enabled
            and the bounds are empty.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.InvalidateDropDownButtonBounds">
            <summary>
            Sets dropDownButtonBoundsValue to Rectangle.Empty if it isn't already empty. 
            This indicates that the button bounds should be recalculated. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.SetDropDownButtonBounds">
            <summary>
            Sets the position and size of dropDownButtonBoundsValue based on the current 
            cell bounds and the preferred cell height for a single line of header text. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.AdjustPadding(System.Int32)">
            <summary>
            Adjusts the cell padding to widen the header by the drop-down button width.
            </summary>
            <param name="newDropDownButtonPaddingOffset">The new drop-down button width.</param>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.currentDropDownButtonPaddingOffset">
            <summary>
            The current width of the drop-down button. This field is used to adjust the cell padding.  
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.filteringEnabledValue">
            <summary>
            Indicates whether filtering is enabled for the owning column. 
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.FilteringEnabled">
            <summary>
            Gets or sets a value indicating whether filtering is enabled.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.automaticSortingEnabledValue">
            <summary>
            Indicates whether automatic sorting is enabled. 
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.AutomaticSortingEnabled">
            <summary>
            Gets or sets a value indicating whether automatic sorting is enabled for the owning column. 
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.dropDownListBoxMaxLinesValue">
            <summary>
            The maximum number of lines in the drop-down list. 
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.DropDownListBoxMaxLines">
            <summary>
            Gets or sets the maximum number of lines to display in the drop-down filter list. 
            The actual height of the drop-down list is constrained by the DataGridView height. 
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.FilterListBox">
            <summary>
            Represents a ListBox control used as a drop-down filter list
            in a DataGridView control.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.FilterListBox.#ctor">
            <summary>
            Initializes a new instance of the FilterListBox class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.FilterListBox.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Indicates that the FilterListBox will handle (or ignore) all 
            keystrokes that are not handled by the operating system. 
            </summary>
            <param name="keyData">A Keys value that represents the keyboard input.</param>
            <returns>true in all cases.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterColumnHeaderCell.FilterListBox.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>
            Processes a keyboard message directly, preventing it from being
            intercepted by the parent DataGridView control.
            </summary>
            <param name="m">A Message, passed by reference, that 
            represents the window message to process.</param>
            <returns>true if the message was processed by the control;
            otherwise, false.</returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterTextBoxColumn">
            <summary>
            Represents a DataGridViewTextBoxColumn with a drop-down filter list accessible from the header cell.  
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterTextBoxColumn.#ctor">
            <summary>
            Initializes a new instance of the DataGridViewAutoFilterTextBoxColumn class.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterTextBoxColumn.DefaultHeaderCellType">
            <summary>
            Returns the AutoFilter header cell type. This property hides the 
            non-virtual DefaultHeaderCellType property inherited from the 
            DataGridViewBand class. The inherited property is set in the 
            DataGridViewAutoFilterTextBoxColumn constructor. 
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterTextBoxColumn.SortMode">
            <summary>
            Gets or sets the sort mode for the column and prevents it from being 
            set to Automatic, which would interfere with the proper functioning 
            of the drop-down button. This property hides the non-virtual 
            DataGridViewColumn.SortMode property from the designer. The inherited 
            property is set in the DataGridViewAutoFilterTextBoxColumn constructor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterTextBoxColumn.FilteringEnabled">
            <summary>
            Gets or sets a value indicating whether filtering is enabled for this column. 
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterTextBoxColumn.AutomaticSortingEnabled">
            <summary>
            Gets or sets a value indicating whether automatic sorting is enabled for this column. 
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterTextBoxColumn.DropDownListBoxMaxLines">
            <summary>
            Gets or sets the maximum height of the drop-down filter list for this column. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterTextBoxColumn.RemoveFilter(System.Windows.Forms.DataGridView)">
            <summary>
            Removes the filter from the BindingSource bound to the specified DataGridView. 
            </summary>
            <param name="dataGridView">The DataGridView bound to the BindingSource to unfilter.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewAutoFilterTextBoxColumn.GetFilterStatus(System.Windows.Forms.DataGridView)">
            <summary>
            Gets a status string for the specified DataGridView indicating the 
            number of visible rows in the bound, filtered BindingSource, or 
            String.Empty if all rows are currently visible. 
            </summary>
            <param name="dataGridView">The DataGridView bound to the 
            BindingSource to return the filter status for.</param>
            <returns>A string in the format "x of y records found" where x is 
            the number of rows currently displayed and y is the number of rows 
            available, or String.Empty if all rows are currently displayed.</returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.GridView.DataGridViewPrint">
            <summary> 
            print DataGridViewPrint 
            </summary> 
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.FixedSizeCache">
            <summary>
            A very simple implementation of a cache for a limited number
            of objects. 
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox">
            <summary>
            A simple implementation of a Virtual ListBox.  A virtual ListBox
            contains no data, instead it just allocates space for a specified
            number of rows.  Whenever a row needs to be shown, the <see cref="!:OnDrawItem"/>
            method is fired which in turn fires the <see cref="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)"/> event.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.#ctor">
            <summary>
            Constructs a new instance of this class.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.Count">
            <summary>
            Gets or sets the number of virtual items in the ListBox.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.DrawMode">
            <summary>
            Gets/sets the DrawMode of the ListBox.  The DrawMode must always
            be set to <see cref="F:System.Windows.Forms.DrawMode.OwnerDrawFixed"/>.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.Sorted">
            <summary>
            Throws an exception.  All the items for a Virtual ListBox are externally managed.
            </summary>
            <remarks>The selected index can be obtained using the <see cref="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndex"/> and
            <see cref="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndices"/> properties.
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndex">
            <summary>
            Returns the selected index in the control.  If the control has the multi-select
            style, then the first selected item is returned.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndices">
            <summary>
             todo
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.ItemSelected(System.Int32)">
            <summary>
            Gets the selection state for an item.
            </summary>
            <param name="index">Index of the item.</param>
            <returns><c>true</c> if selected, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.ItemSelected(System.Int32,System.Boolean)">
            <summary>
            Sets the selection state for an item.
            </summary>
            <param name="index">Index of the item.</param>
            <param name="state">New selection state for the item.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Called when an item in the control needs to be drawn, and raises the 
            <see cref="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)"/> event.
            </summary>
            <param name="e">Details about the item that is to be drawn.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.CreateParams">
            <summary>
            Sets up the <see cref="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.CreateParams"/> object to tell Windows
            how the ListBox control should be created.  In this instance
            the default configuration is modified to remove <c>LBS_HASSTRINGS</c>
            and <c>LBS_SORT</c> styles and to add <c>LBS_NODATA</c>
            and <c>LBS_OWNERDRAWFIXED</c> styles. This converts the ListBox
            into a Virtual ListBox.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.OnHandleDestroyed(System.EventArgs)">
            <summary>
            Called when the ListBox handle is destroyed.  
            </summary>
            <param name="e">Not used</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndexCollection">
            <summary>
            Implements a read-only collection of selected items in the
            VListBox.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndexCollection.#ctor(ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox)">
            <summary>
            Creates a new instance of this class
            </summary>
            <param name="owner">The VListBox which owns the collection</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndexCollection.GetEnumerator">
            <summary>
            Returns an enumerator which allows iteration through the selected items
            collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndexCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Not implemented. Throws an exception.
            </summary>
            <param name="dest">Array to copy items to</param>
            <param name="startIndex">First index in array to put items in.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndexCollection.Count">
            <summary>
            Returns the number of items in the collection.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndexCollection.Item(System.Int32)">
            <summary>
            Returns the selected item with the specified 0-based index in the collection
            of selected items.  
            </summary>
            <remarks>
            Do not use this method to enumerate through all selected
            items as it gets the collection of selected items each item it 
            is called.  The <c>foreach</c> enumerator only gets the collection
            of items once when it is constructed and is therefore quicker.
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndexCollection.IsSynchronized">
            <summary>
            Returns <c>false</c>.  This collection is not synchronized for
            concurrent access from multiple threads.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndexCollection.SyncRoot">
            <summary>
            Not implemented. Throws an exception.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndexCollectionEnumerator">
            <summary>
            Implements the <see cref="T:System.Collections.IEnumerator"/> interface for the selected indexes
            within a <see cref="!:VListBox"/> control.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndexCollectionEnumerator.#ctor(ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox)">
            <summary>
            Constructs a new instance of this class.
            </summary>
            <param name="owner">The <see cref="!:VListBox"/> which owns the collection.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndexCollectionEnumerator.Dispose">
            <summary>
            Clears up any resources associated with this enumerator.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndexCollectionEnumerator.Reset">
            <summary>
            Resets the enumerator to the start of the list.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndexCollectionEnumerator.Current">
            <summary>
            Returns the current object.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.StandardControls.ListBox.KryptonVirtualListBox.SelectedIndexCollectionEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element; 
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge">
            <summary>
            Aqua Gauge Control - A Windows User Control.
            Author  : Ambalavanar Thirugnanam, Angelo Cresta
            Date    : 24th August 2007, 30 june 2008
            email   : ambalavanar.thiru@gmail.com, angelo@angelonline.net
            This is control is for free. You can use for any commercial or non-commercial purposes.
            [Please do no remove this header when using this control in your application.]
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._leadingZeros">
            <summary>
            Minimun Size
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._miminumSize">
            <summary>
            Minimun Size
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._centerPointRotateEnable">
            <summary>
            Center Point Rotate Enable
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._centerPointType">
            <summary>
            Center Point Size
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._centerPointSize">
            <summary>
            Center Point Size
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._handType">
            <summary>
            Hand Type
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._thresholdColor">
            <summary>
            Threshold Color
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._internalRimColor">
            <summary>
            Internal Rim Color
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._externalRimColor">
            <summary>
            External Rim Color
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._dialTextFont">
            <summary>
            Dial Text Font
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._digitColor">
            <summary>
            Digit Color
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._centerPointColor">
            <summary>
            CenterPoint Color
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._thinCalibrationColor">
            <summary>
            CenterPoint Color
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._thickCalibrationColor">
            <summary>
            CenterPoint Color
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._handOverCenterPoint">
            <summary>
            Draw Hand over CenterPoint
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._handColor">
            <summary>
            Color of the Hand
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._digitBackPanelColor">
            <summary>
            Digit Back Panel Color
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._digitBackPanelBorderColor">
            <summary>
            Digit Back Panel Border Color
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._digitBackPanelEnabled">
            <summary>
            Show Digit Back Panel
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._digitBackPanelBorderEnabled">
            <summary>
            Show Digit Back Panel Border
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._minValue">
            <summary>
            Mininum value on the scale
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._maxValue">
            <summary>
            Maximum value on the scale
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._threshold">
            <summary>
            Gets or Sets the Threshold area from the Recommended Value. (1-99%)
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._recommendedValue">
            <summary>
            Threshold value from which green area will be marked.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._currentValue">
            <summary>
            Value where the pointer will point to.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._dialColor">
            <summary>
            Background color of the dial
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._glossinessAlpha">
            <summary>
            Glossiness strength. Range: 0-100
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._noOfDivisions">
            <summary>
            Get or Sets the number of Divisions in the dial scale.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._noOfSubDivisions">
            <summary>
            Gets or Sets the number of Sub Divisions in the scale per Division.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._dialText">
            <summary>
            Gets or Sets the Text to be displayed in the dial
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge._enableTransparentBackground">
            <summary>
            Enables or Disables Transparent Background color.
            Note: Enabling this will reduce the performance and may make the control flicker.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the pointer.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the dial background.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.DrawPointer(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Draws the Pointer.
            </summary>
            <param name="gr"></param>
            <param name="cx"></param>
            <param name="cy"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.DrawGloss(System.Drawing.Graphics)">
            <summary>
            Draws the glossiness.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.DrawCenterPoint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,System.Single)">
            <summary>
            Draws the center point.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="cX"></param>
            <param name="cY"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.DrawCalibration(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Draws the Ruler
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="cX"></param>
            <param name="cY"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.GetRadian(System.Single)">
            <summary>
            Converts the given degree to radian.
            </summary>
            <param name="theta"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.DisplayNumber(System.Drawing.Graphics,System.Single,System.Drawing.RectangleF)">
            <summary>
            Displays the given number in the 7-Segement format.
            </summary>
            <param name="g"></param>
            <param name="number"></param>
            <param name="drect"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.DrawDigit(System.Drawing.Graphics,System.Int32,System.Drawing.PointF,System.Boolean,System.Single)">
            <summary>
            Draws a digit in 7-Segement format.
            </summary>
            <param name="g"></param>
            <param name="number"></param>
            <param name="position"></param>
            <param name="dp"></param>
            <param name="height"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.GetX(System.Single,System.Single)">
            <summary>
            Gets Relative X for the given width to draw digit
            </summary>
            <param name="x"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.GetY(System.Single,System.Single)">
            <summary>
            Gets relative Y for the given height to draw digit
            </summary>
            <param name="y"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.IsNumberAvailable(System.Int32,System.Int32[])">
            <summary>
            Returns true if a given number is available in the given list.
            </summary>
            <param name="number"></param>
            <param name="listOfNumbers"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.AquaGauge.AquaGauge_Resize">
            <summary>
            Restricts the size to make sure the height and width are always same.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.Charting.DataBar">
            <summary>
            Summary description for DataBar.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.DataBar.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.DataBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.DataBar.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.Charting.DataChart">
            <summary>
            Summary description for DataChart.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.DataChart.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.DataChart.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.DataChart.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.HBarChart.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.HBarChart.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.HBarChart.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl">
            <summary>
            A control that acts like a LED displayer
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.Alignment">
            <summary>
            Specify how the text or value is aligned.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.Alignment.Left">
            <summary>
            The text or value will align on the left side of the control.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.Alignment.Right">
            <summary>
            The text or value will align on the right side of the control.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.#ctor">
            <summary>
            Construct one LxLedControl instance.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.Dispose(System.Boolean)">
            <summary>
            Destructor
            </summary>
            <param name="disposing">whether this method is called by Dispose()</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.DrawSegment(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Paint one segment.
            </summary>
            <param name="g">The graphics object which will be painted on.</param>
            <param name="rectBound">The paint rectangle.</param>
            <param name="colSegment">segment color.</param>
            <param name="nIndex">the segment index.</param>
            <param name="bevelRate">corner rate.</param>
            <param name="segmentWidth">segment width.</param>
            <param name="segmentInterval">segment interval.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.DrawSingleChar(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Char,System.Single,System.Single,System.Single)">
            <summary>
            Paint one character.
            </summary>
            <param name="g">The graphics object which will be painted on.</param>
            <param name="rectBound">The paint rectangle.</param>
            <param name="colCharacter">Character color.</param>
            <param name="character">The character to paint.</param>
            <param name="bevelRate">The bevel rate.</param>
            <param name="segmentWidth">segment width.</param>
            <param name="segmentInterval">segment interval.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.DrawSingleCharWithFadedBk(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Char,System.Single,System.Single,System.Single)">
            <summary>
            Paint one character with faded background
            </summary>
            <param name="g">The graphics object which will be painted on</param>
            <param name="rectBound">The paint rectangle</param>
            <param name="colCharacter">Character color</param>
            <param name="colFaded">Faded background color</param>
            <param name="character">Character to paint</param>
            <param name="bevelRate">bevel rate</param>
            <param name="segmentWidth">width of the segment</param>
            <param name="segmentInterval">Interval of the segment</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.DestoryCache">
            <summary>
            Destory cache
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.CreateCache(System.Drawing.Rectangle,System.Single,System.Single,System.Single)">
            <summary>
            Create cache
            </summary>
            <param name="rectBound">The bound rectangle</param>
            <param name="bevelRate">Bevel rate</param>
            <param name="segmentWidth">Width of the segment</param>
            <param name="segmentInterval">Interval between segments</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.DrawChars(System.Drawing.Graphics,System.Single,System.Single)">
            <summary>
            Draw character(s).
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.CalculateDrawingParams(System.Single@,System.Single@)">
            <summary>
            Calculate the width of the segment and the interval between segments.
            </summary>
            <param name="segmentWidth">[out] the width of the segment.</param>
            <param name="segmentInterval">[out] the interval between segments.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.DrawRoundRect(System.Drawing.Graphics,System.Drawing.Rectangle,System.Single,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Draw a round rectangle at the specified position
            </summary>
            <param name="g">Graphics object</param>
            <param name="rect">The bound rectangle</param>
            <param name="radius">The radius of the round corner in pixels</param>
            <param name="col1">The first color</param>
            <param name="col2">The second color(ignored if no gradient is used)</param>
            <param name="bGradient">Whether to use gradient color</param>
            <param name="colBorder">The color of the border</param>
            <param name="nBorderWidth">The width of the border</param>
            <param name="bDrawBorder">Whether to draw the border</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.DrawNormalRect(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Draw a normal rectangle
            </summary>
            <param name="g">Graphcis object</param>
            <param name="rect">The bound rectangle</param>
            <param name="col1">The first color</param>
            <param name="col2">The second color(ignored if no gradient is used)</param>
            <param name="colBorder">The border color</param>
            <param name="nBorderWidth">The width of the border</param>
            <param name="bGradient">Whether to use gradient color</param>
            <param name="bDrawBorder">Whether to draw border</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.DrawBackground(System.Drawing.Graphics)">
            <summary>
            Draw background of the control
            </summary>
            <param name="g">The graphics object</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.DrawHighlight(System.Drawing.Graphics)">
            <summary>
            Draw highlight of the control
            </summary>
            <param name="g">The graphics object</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paint the whole control.
            </summary>
            <param name="e">Painting parameter.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Do nothing in paint background
            </summary>
            <param name="pevent">Painting parameter</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.OnSizeChanged(System.EventArgs)">
            <summary>
            On size changed
            </summary>
            <param name="e">Size change parameter</param>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.WIDTHHEIGHTRATIO">
            <summary>
            The ratio of the width to the height of one character.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_CachedPaths">
            <summary>
            The cached path information
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_bIsCacheBuild">
            <summary>
            Indicate whether the cached painting information is built.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_nBorderWidth">
            <summary>
            Border width
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_colBorderColour">
            <summary>
            Border color
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_colFocusedBorderColour">
            <summary>
            Focused border color
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_nCornerRadius">
            <summary>
            The radius of the round corner of the background rectangle
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_nCharacterNumber">
            <summary>
            The total number of digits to display.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_fBevelRate">
            <summary>
            The bevel rate of each segment.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_colFadedColour">
            <summary>
            The faded color.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_colCustomBk1">
            <summary>
            The custom background color
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_colCustomBk2">
            <summary>
            The custom background color
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_fWidthSegWidthRatio">
            <summary>
            The ratio of the segment width to the width of one character.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_fWidthIntervalRatio">
            <summary>
            The ratio of the segment interval to the width of one character.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_enumAlign">
            <summary>
            How the displaying text or value is aligned.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_bRoundRect">
            <summary>
            If the background was round rectangle
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_bGradientBackground">
            <summary>
            If the background was filled in gradient colors
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_bShowHighlight">
            <summary>
            Whether to draw high light area
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_nHighlightOpaque">
            <summary>
            The opaque value of highlight, 0 is transparent, 255 is solid
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_smoothingMode">
            <summary>
            The smoothing mode.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.m_italicMode">
            <summary>
            The italic text mode.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.UseItalicStyle">
            <summary>
            Get or set whether the italic text style is turned on.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.UseSmoothingMode">
            <summary>
            Get or set whether the smoothing mode is turned on.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.BorderWidth">
            <summary>
            Get or set the width of the border
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.BorderColour">
            <summary>
            Get or set the border color
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.FocusedBorderColour">
            <summary>
            Ger or set the border color when the control got focus.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.HighlightOpaque">
            <summary>
            Get or set the opaque value of the highlight
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.ShowHighlight">
            <summary>
            Get or set whether to show highlight area on the control
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.CornerRadius">
            <summary>
            Get or set the corner radius for the background rectangle.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.GradientBackground">
            <summary>
            Get or set if the background was filled in gradient colors
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.BackColour_1">
            <summary>
            Get or set the first custom background color
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.BackColour_2">
            <summary>
            Get or set the second custom background color
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.RoundCorner">
            <summary>
            Get or set the background bound style
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.SegmentIntervalRatio">
            <summary>
            Get or set the segment interval ratio
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.TextAlignment">
            <summary>
            Get or set the aligment of the text
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.SegmentWidthRatio">
            <summary>
            Get or set the segment width ratio
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.TotalCharCount">
            <summary>
            Get or set the total number of characters to display
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.BevelRate">
            <summary>
            Get or set the bevel rate of each segment
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.FadedColour">
            <summary>
            Get or set the color of background characters
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.Text">
            <summary>
            Get or set the text of the control
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.BackgroundImage">
            <summary>
            Does not support background image
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.BackgroundImageLayout">
            <summary>
            Does not support background image layout
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.LxLedControl.Font">
            <summary>
            Does not support font
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale">
            <summary>
            SlidingScale UserControl.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.#ctor">
            <summary>
            SclidingScale default constructor.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.Value">
            <summary>
            The current position of the scale.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.ScaleRange">
            <summary>
            The visible range of the scale.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.LargeTicksCount">
            <summary>
            The number of large ticks.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.LargeTicksLength">
            <summary>
            The length of large ticks.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.SmallTickCount">
            <summary>
            The number of small ticks.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.SmallTickLength">
            <summary>
            The length of small ticks.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.ShadowEnabled">
            <summary>
            The shadow color of the component.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.ShadowColour">
            <summary>
            The shadow color of the component.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.NeedleColour">
            <summary>
            The color of the scala needle.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.Orientation">
            <summary>
            The orientation of the control.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.BorderColour">
            <summary>
            The color of the border.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.NeedleKryptonColour">
            <summary>
            The color of the scala needle.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.UseKryptonBorder">
            <summary>
            shoul use Krypton borber?.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Charting.KryptonSlidingScale.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaint override.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Drawing.UI.KryptonColourChooser2.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Drawing.UI.KryptonColourChooser2.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.Drawing.UI.KryptonColourChooser1">
            <summary>
            Summary description for ColorChooser1.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Drawing.UI.KryptonColourChooser1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Drawing.UI.KryptonColourChooser1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Drawing.UI.KryptonColourChooser1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Drawing.UI.Office2007MenuHelper.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Drawing.UI.Office2007MenuHelper.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Drawing.UI.Office2007MenuHelper.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Drawing.Controls.Office2007ColourPicker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Drawing.Controls.Office2007ColourPicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Drawing.Controls.Office2007ColourPicker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.Drawing.Controls.Office2007ColorPickerToolStripMenuItem.Office2007ColourPickerControl">
            <summary>
            Gets the loading circle control.
            </summary>
            <value>The loading circle control.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Drawing.Controls.Office2007ColorPickerToolStripMenuItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:LoadingCircleToolStripMenuItem"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Drawing.Controls.Office2007ColorPickerToolStripMenuItem.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
            <param name="constrainingSize">The custom-sized area for a control.</param>
            <returns>
            An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.
            </returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/></PermissionSet>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Drawing.Controls.Office2007ColorPickerToolStripMenuItem.OnSubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            Subscribes events from the hosted control.
            </summary>
            <param name="control">The control from which to subscribe events.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Drawing.Controls.Office2007ColorPickerToolStripMenuItem.OnUnsubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            Unsubscribes events from the hosted control.
            </summary>
            <param name="control">The control from which to unsubscribe events.</param>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Drawing.Controls.Office2007ColourPlate.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Drawing.Controls.Office2007ColourPlate.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Drawing.Controls.Office2007ColourPlate.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.GlassButton">
            <summary>
            Represents a glass button control.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.GlassButton.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
            <returns>A <see cref="T:System.Drawing.Color" /> value representing the background color.</returns>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.GlassButton.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
            <returns>The foreground <see cref="T:System.Drawing.Color" /> of the control.</returns>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.GlassButton.InnerBorderColor">
            <summary>
            Gets or sets the inner border color of the control.
            </summary>
            <returns>A <see cref="T:System.Drawing.Color" /> value representing the color of the inner border.</returns>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OuterBorderColor">
            <summary>
            Gets or sets the outer border color of the control.
            </summary>
            <returns>A <see cref="T:System.Drawing.Color" /> value representing the color of the outer border.</returns>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.GlassButton.ShineColor">
            <summary>
            Gets or sets the shine color of the control.
            </summary>
            <returns>A <see cref="T:System.Drawing.Color" /> value representing the shine color.</returns>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.GlassButton.GlowColor">
            <summary>
            Gets or sets the glow color of the control.
            </summary>
            <returns>A <see cref="T:System.Drawing.Color" /> value representing the glow color.</returns>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.GlassButton.State">
            <summary>
            Gets the state of the button control.
            </summary>
            <value>The state of the button control.</value>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.GlassButton.InnerBorderColorChanged">
            <summary>Occurs when the value of the <see cref="P:GlassButton.InnerBorderColor" /> property changes.</summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnInnerBorderColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Glass.GlassButton.InnerBorderColorChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OuterBorderColorChanged">
            <summary>Occurs when the value of the <see cref="P:Glass.GlassButton.OuterBorderColor" /> property changes.</summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnOuterBorderColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Glass.GlassButton.OuterBorderColorChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.GlassButton.ShineColorChanged">
            <summary>Occurs when the value of the <see cref="P:Glass.GlassButton.ShineColor" /> property changes.</summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnShineColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Glass.GlassButton.ShineColorChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.GlassButton.GlowColorChanged">
            <summary>Occurs when the value of the <see cref="P:Glass.GlassButton.GlowColor" /> property changes.</summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnGlowColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Glass.GlassButton.GlowColorChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Leave" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="M:ComponentFactory.Krypton.Toolkit.KryptonButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> event.
            </summary>
            <param name="kevent">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="M:ComponentFactory.Krypton.Toolkit.KryptonButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> event.
            </summary>
            <param name="kevent">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> event.
            </summary>
            <param name="mevent">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GlassButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="M:ComponentFactory.Krypton.Toolkit.KryptonButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /> event.
            </summary>
            <param name="pevent">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.GlassButton.FlatAppearance">
            <summary>This property is not relevant for this class.</summary>
            <returns>This property is not relevant for this class.</returns>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.GlassButton.FlatStyle">
            <summary>This property is not relevant for this class.</summary>
            <returns>This property is not relevant for this class.</returns>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.GlassButton.UseVisualStyleBackColor">
            <summary>This property is not relevant for this class.</summary>
            <returns>This property is not relevant for this class.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.GroupableKryptonListView.CreateButtons">
            <summary>
            Method for generation ToolStrip Buttons on GroupBy ToolStrip
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.OpenHeight">
            <summary>
            This returns the height of the control when it's fully opened
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.HeaderText">
            <summary>
            The text to be displayed in the control
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.Collapsable">
            <summary>
            If true, the control can be collapsed.  If false, it cannot
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.PanelOpen">
            <summary>
            Sets or returns the current panels open or closed status
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.DisplayRectangle">
            <summary>
            Override this to simulate the header panel
            Notice I leave one pixel at the bottom for the bottom line :)
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.CollapseContainer_FontChanged(System.Object,System.EventArgs)">
            <summary>
            If the user changes the header font - resize the header area and refresh the controls layout engine
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.CollapseContainer_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            The primary purpose of trapping the Paint is to add the seperator bar - but since we're trapping the entire paint event, 
            we need to fill in the backcolor as well
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.CollapseContainer_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            When our size changes, we'll get ghosting from the custom lines - so to ensure the lines are drawn properly, we force a refresh
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.CollapseContainer_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            We're only interested in lighting up the header when the control is collapsable
            We also only want to light up the header - if it's not ALREADY lit up...this prevents blinking
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.CollapseContainer_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            If we're collapsable and the header was lit - go turn it off and refresh the painting
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.CollapseContainer_Click(System.Object,System.EventArgs)">
            <summary>
            If we're collapsable and the user clicked...toggle the collapse state
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCollapseContainer.SetContentPanel">
            <summary>
            Adjusts the Height of the control based on the _PanelOpen settings
            </summary>
            <remarks></remarks>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.DropDown">
            <summary>
            Occurs when the drop down portion of the color button is pressed.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.KryptonCommandChanged">
            <summary>
            Occurs when the value of the KryptonCommand property changes.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.SelectedColourChanged">
            <summary>
            Occurs when the SelectedColor property changes value.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.TrackingColour">
            <summary>
            Occurs when the user is tracking over a color.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.MoreColours">
            <summary>
            Occurs when the user selects the more colors option.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.ContextMenuStrip">
            <summary>
            Gets or sets the ContextMenuStrip associated with this control.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu to show when right clicked.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.MaxRecentColours">
            <summary>
            Gets and sets the maximum number of recent colors to store and display.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.VisibleThemes">
            <summary>
            Gets and sets the visible state of the themes color set.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.VisibleStandard">
            <summary>
            Gets and sets the visible state of the standard color set.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.VisibleRecent">
            <summary>
            Gets and sets the visible state of the recent color set.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.VisibleNoColour">
            <summary>
            Gets and sets the visible state of the no color menu item.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.VisibleMoreColours">
            <summary>
            Gets and sets the visible state of the more colors menu item.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.AutoRecentColours">
            <summary>
            Gets and sets if the recent colors should be automatically updated.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.SchemeThemes">
            <summary>
            Gets and sets the color scheme for the themes color set.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.SchemeStandard">
            <summary>
            Gets and sets the color scheme for the standard color set.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.SelectedColour">
            <summary>
            Gets and sets the selected color.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.EmptyBorderColour">
            <summary>
            Gets and sets the selected color block when selected color is empty.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.SelectedRect">
            <summary>
            Gets and sets the selected color drawing rectangle.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.ButtonOrientation">
            <summary>
            Gets and sets the visual orientation of the control.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.DropDownPosition">
            <summary>
            Gets and sets the position of the drop arrow within the color button.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.DropDownOrientation">
            <summary>
            Gets and sets the orientation of the drop arrow within the color button.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.Splitter">
            <summary>
            Gets and sets if the color button works as a splitter or as a drop down.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.ButtonStyle">
            <summary>
            Gets and sets the color button style.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.Values">
            <summary>
            Gets access to the color button content.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.Images">
            <summary>
            Gets access to the image value overrides.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.Strings">
            <summary>
            Gets access to the context menu display strings.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.StateCommon">
            <summary>
            Gets access to the common color button appearance that other states can override.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.StateDisabled">
            <summary>
            Gets access to the disabled color button appearance entries.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.StateNormal">
            <summary>
            Gets access to the normal color button appearance entries.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.StateTracking">
            <summary>
            Gets access to the hot tracking color button appearance entries.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.StatePressed">
            <summary>
            Gets access to the pressed color button appearance entries.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.OverrideDefault">
            <summary>
            Gets access to the normal color button appearance when default.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.OverrideFocus">
            <summary>
            Gets access to the color button appearance when it has focus.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.DialogResult">
            <summary>
            Gets or sets the value returned to the parent form when the color button is clicked.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.NotifyDefault(System.Boolean)">
            <summary>
            Notifies a control that it is the default color button so that its appearance and behavior is adjusted accordingly. 
            </summary>
            <param name="value">true if the control should behave as a default color button; otherwise false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.PerformClick">
            <summary>
            Generates a Click event for the control.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.PerformDropDown">
            <summary>
            Generates a DropDown event for the control.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether an ampersand is included in the text of the control. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.ImeMode">
            <summary>
            Determins the IME status of the object when selected.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.OnSelectedColourChanged(System.Drawing.Color)">
            <summary>
            Raises the SelectedColorChanged event.
            </summary>
            <param name="selectedColour">New selected color.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.OnTrackingColour(ComponentFactory.Krypton.Toolkit.ColorEventArgs)">
            <summary>
            Raises the TrackingColor event.
            </summary>
            <param name="e">An ColorEventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.OnMoreColours(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the MoreColors event.
            </summary>
            <param name="e">An CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.OnKryptonCommandChanged(System.EventArgs)">
            <summary>
            Raises the KryptonCommandChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.SetStyles(ComponentFactory.Krypton.Toolkit.ButtonStyle)">
            <summary>
            Update the state objects to reflect the new color button style.
            </summary>
            <param name="buttonStyle">New color button style.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.CreateButtonValues(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates a values storage object appropriate for control.
            </summary>
            <returns>Set of color button values.</returns>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonColourButtonExtended.ViewDrawButtonExtended">
            <summary>
            Gets access to the view element for the color button.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.KryptonExtendedNumericUpDownControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonExtendedNumericUpDownControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonExtendedNumericUpDownControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonHexadecimalColourTextBox.HexadecimalColourDatabaseFilePath">
            <summary>
            Gets or sets the hexadecimal colour database file path.
            </summary>
            <value>
            The hexadecimal colour database file path.
            </value>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.CustomTabControl">
            <summary>
            Summary description for TabControl.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.CustomTabControl.components">
            <summary> 
            Required designer variable.
            </summary>
            
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.CustomTabControl.InitColors">
            <summary> 
            Clean up any resources being used.
            </summary>
            
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.CustomTabControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.EmptyTabControl._designMode">
            
             Indicates if the current view is being utilized in the VS.NET IDE or not.
            
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.FlatTabControl">
            <summary>
            Summary description for FlatTabControl.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.FlatTabControl.scUpDown">
            <summary> 
            Required designer variable.
            </summary>
            
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.FlatTabControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.FlatTabControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.KryptonEmptyTabControl._designMode">
            
             Indicates if the current view is being utilized in the VS.NET IDE or not.
            
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.KryptonFlatTabControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.KryptonFlatTabControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.KryptonFlatTabControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.KryptonTabControl">
            <summary>
            Summary description for TabControl.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.KryptonTabControl.components">
            <summary> 
            Required designer variable.
            </summary>
            
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.KryptonTabControl.OnGlobalPaletteChanged(System.Object,System.EventArgs)">
            <summary> 
            Clean up any resources being used.
            </summary>
            
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Navigator.Controls.KryptonTabControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.Navigator.UI.OutlookBarNavigationPaneOptions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Navigator.UI.OutlookBarNavigationPaneOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.Navigator.UI.OutlookBarNavigationPaneOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar">
            <summary>
            A custom scrollbar control.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.SETREDRAW">
            <summary>
            Redraw const.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.inUpdate">
            <summary>
            Indicates many changes to the scrollbar are happening, so stop painting till finished.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.orientation">
            <summary>
            The scrollbar orientation - horizontal / VERTICAL.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.scrollOrientation">
            <summary>
            The scroll orientation in scroll events.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.clickedBarRectangle">
            <summary>
            The clicked channel rectangle.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.thumbRectangle">
            <summary>
            The thumb rectangle.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.topArrowRectangle">
            <summary>
            The top arrow rectangle.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.bottomArrowRectangle">
            <summary>
            The bottom arrow rectangle.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.channelRectangle">
            <summary>
            The channel rectangle.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.topArrowClicked">
            <summary>
            Indicates if top arrow was clicked.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.bottomArrowClicked">
            <summary>
            Indicates if bottom arrow was clicked.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.topBarClicked">
            <summary>
            Indicates if channel rectangle above the thumb was clicked.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.bottomBarClicked">
            <summary>
            Indicates if channel rectangle under the thumb was clicked.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.thumbClicked">
            <summary>
            Indicates if the thumb was clicked.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.thumbState">
            <summary>
            The state of the thumb.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.topButtonState">
            <summary>
            The state of the top arrow.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.bottomButtonState">
            <summary>
            The state of the bottom arrow.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.minimum">
            <summary>
            The scrollbar value minimum.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.maximum">
            <summary>
            The scrollbar value maximum.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.smallChange">
            <summary>
            The small change value.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.largeChange">
            <summary>
            The large change value.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.value">
            <summary>
            The value of the scrollbar.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.thumbWidth">
            <summary>
            The width of the thumb.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.thumbHeight">
            <summary>
            The height of the thumb.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.arrowWidth">
            <summary>
            The width of an arrow.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.arrowHeight">
            <summary>
            The height of an arrow.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.thumbBottomLimitBottom">
            <summary>
            The bottom limit for the thumb bottom.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.thumbBottomLimitTop">
            <summary>
            The bottom limit for the thumb top.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.thumbTopLimit">
            <summary>
            The top limit for the thumb top.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.thumbPosition">
            <summary>
            The current position of the thumb.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.trackPosition">
            <summary>
            The track position.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.progressTimer">
            <summary>
            The progress timer for moving the thumb.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.borderColor">
            <summary>
            The border color.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.disabledBorderColor">
            <summary>
            The border color in disabled state.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.contextMenu">
            <summary>
            Context menu strip.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.components">
            <summary>
            Container for components.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.tsmiScrollHere">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.toolStripSeparator1">
            <summary>
            Menu separator.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.tsmiTop">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.tsmiBottom">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.toolStripSeparator2">
            <summary>
            Menu separator.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.tsmiLargeUp">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.tsmiLargeDown">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.toolStripSeparator3">
            <summary>
            Menu separator.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.tsmiSmallUp">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.tsmiSmallDown">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar"/> class.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.Scroll">
            <summary>
            Occurs when the scrollbar scrolled.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.Minimum">
            <summary>
            Gets or sets the minimum value.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.Maximum">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.SmallChange">
            <summary>
            Gets or sets the small change amount.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.LargeChange">
            <summary>
            Gets or sets the large change amount.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.DisabledBorderColor">
            <summary>
            Gets or sets the border color in disabled state.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.Opacity">
            <summary>
            Gets or sets the opacity of the context menu (from 0 - 1).
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.BeginUpdate">
            <summary>
            Prevents the drawing of the control until <see cref="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.EndUpdate"/> is called.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.EndUpdate">
            <summary>
            Ends the updating process and the control can draw itself again.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.Scroll"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains information about the control to paint.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the control.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains information about the control to paint.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
            <param name="x">The new x value of the control.</param>
            <param name="y">The new y value of the control.</param>
            <param name="width">The new width value of the control.</param>
            <param name="height">The new height value of the control.</param>
            <param name="specified">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified"/> values.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values that represents the key to process.</param>
            <returns>true, if the key was processed by the control, false otherwise.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.SendMessage(System.IntPtr,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Sends a message.
            </summary>
            <param name="wnd">The handle of the control.</param>
            <param name="msg">The message as int.</param>
            <param name="param">param - true or false.</param>
            <param name="lparam">Additional parameter.</param>
            <returns>0 or error code.</returns>
            <remarks>Needed for sending the stop/start drawing of the control.</remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.SetUpScrollBar">
            <summary>
            Sets up the scrollbar.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.ProgressTimerTick(System.Object,System.EventArgs)">
            <summary>
            Handles the updating of the thumb.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">An object that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.ResetScrollStatus">
            <summary>
            Resets the scroll status of the scrollbar.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.GetValue(System.Boolean,System.Boolean)">
            <summary>
            Calculates the new value of the scrollbar.
            </summary>
            <param name="smallIncrement">true for a small change, false otherwise.</param>
            <param name="up">true for up movement, false otherwise.</param>
            <returns>The new scrollbar value.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.GetThumbPosition">
            <summary>
            Calculates the new thumb position.
            </summary>
            <returns>The new thumb position.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.GetThumbSize">
            <summary>
            Calculates the height of the thumb.
            </summary>
            <returns>The height of the thumb.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.EnableTimer">
            <summary>
            Enables the timer.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.StopTimer">
            <summary>
            Stops the progress timer.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.ChangeThumbPosition(System.Int32)">
            <summary>
            Changes the position of the thumb.
            </summary>
            <param name="position">The new position.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.ProgressThumb(System.Boolean)">
            <summary>
            Controls the movement of the thumb.
            </summary>
            <param name="enableTimer">true for enabling the timer, false otherwise.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.ChangeContextMenuItems">
            <summary>
            Changes the displayed text of the context menu items dependent of the current <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation"/>.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.InitializeComponent">
            <summary>
            Initializes the context menu.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.ScrollHereClick(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.TopClick(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.BottomClick(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.LargeUpClick(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.LargeDownClick(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.SmallUpClick(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.KryptonScrollBar.SmallDownClick(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended">
            <summary>
            A custom scrollbar control.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.SETREDRAW">
            <summary>
            Redraw const.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.inUpdate">
            <summary>
            Indicates many changes to the scrollbar are happening, so stop painting till finished.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.orientation">
            <summary>
            The scrollbar orientation - horizontal / VERTICAL.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.scrollOrientation">
            <summary>
            The scroll orientation in scroll events.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.clickedBarRectangle">
            <summary>
            The clicked channel rectangle.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.thumbRectangle">
            <summary>
            The thumb rectangle.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.topArrowRectangle">
            <summary>
            The top arrow rectangle.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.bottomArrowRectangle">
            <summary>
            The bottom arrow rectangle.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.channelRectangle">
            <summary>
            The channel rectangle.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.topArrowClicked">
            <summary>
            Indicates if top arrow was clicked.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.bottomArrowClicked">
            <summary>
            Indicates if bottom arrow was clicked.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.topBarClicked">
            <summary>
            Indicates if channel rectangle above the thumb was clicked.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.bottomBarClicked">
            <summary>
            Indicates if channel rectangle under the thumb was clicked.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.thumbClicked">
            <summary>
            Indicates if the thumb was clicked.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.thumbState">
            <summary>
            The state of the thumb.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.topButtonState">
            <summary>
            The state of the top arrow.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.bottomButtonState">
            <summary>
            The state of the bottom arrow.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.minimum">
            <summary>
            The scrollbar value minimum.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.maximum">
            <summary>
            The scrollbar value maximum.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.smallChange">
            <summary>
            The small change value.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.largeChange">
            <summary>
            The large change value.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.value">
            <summary>
            The value of the scrollbar.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.thumbWidth">
            <summary>
            The width of the thumb.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.thumbHeight">
            <summary>
            The height of the thumb.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.arrowWidth">
            <summary>
            The width of an arrow.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.arrowHeight">
            <summary>
            The height of an arrow.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.thumbBottomLimitBottom">
            <summary>
            The bottom limit for the thumb bottom.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.thumbBottomLimitTop">
            <summary>
            The bottom limit for the thumb top.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.thumbTopLimit">
            <summary>
            The top limit for the thumb top.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.thumbPosition">
            <summary>
            The current position of the thumb.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.trackPosition">
            <summary>
            The track position.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.progressTimer">
            <summary>
            The progress timer for moving the thumb.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.borderColour">
            <summary>
            The border color.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.disabledBorderColour">
            <summary>
            The border color in disabled state.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.contextMenu">
            <summary>
            Context menu strip.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.components">
            <summary>
            Container for components.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.tsmiScrollHere">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.toolStripSeparator1">
            <summary>
            Menu separator.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.tsmiTop">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.tsmiBottom">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.toolStripSeparator2">
            <summary>
            Menu separator.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.tsmiLargeUp">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.tsmiLargeDown">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.toolStripSeparator3">
            <summary>
            Menu separator.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.tsmiSmallUp">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.tsmiSmallDown">
            <summary>
            Menu item.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended"/> class.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.Scroll">
            <summary>
            Occurs when the scrollbar scrolled.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.Minimum">
            <summary>
            Gets or sets the minimum value.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.Maximum">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.SmallChange">
            <summary>
            Gets or sets the small change amount.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.LargeChange">
            <summary>
            Gets or sets the large change amount.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.BorderColour">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.DisabledBorderColour">
            <summary>
            Gets or sets the border color in disabled state.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.Opacity">
            <summary>
            Gets or sets the opacity of the context menu (from 0 - 1).
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.BeginUpdate">
            <summary>
            Prevents the drawing of the control until <see cref="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.EndUpdate"/> is called.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.EndUpdate">
            <summary>
            Ends the updating process and the control can draw itself again.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Raises the <see cref="E:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.Scroll"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains information about the control to paint.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the control.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains information about the control to paint.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
            <param name="x">The new x value of the control.</param>
            <param name="y">The new y value of the control.</param>
            <param name="width">The new width value of the control.</param>
            <param name="height">The new height value of the control.</param>
            <param name="specified">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified"/> values.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values that represents the key to process.</param>
            <returns>true, if the key was processed by the control, false otherwise.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.SendMessage(System.IntPtr,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Sends a message.
            </summary>
            <param name="wnd">The handle of the control.</param>
            <param name="msg">The message as int.</param>
            <param name="param">param - true or false.</param>
            <param name="lparam">Additional parameter.</param>
            <returns>0 or error code.</returns>
            <remarks>Needed for sending the stop/start drawing of the control.</remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.SetUpScrollBar">
            <summary>
            Sets up the scrollbar.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.ProgressTimerTick(System.Object,System.EventArgs)">
            <summary>
            Handles the updating of the thumb.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">An object that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.ResetScrollStatus">
            <summary>
            Resets the scroll status of the scrollbar.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.GetValue(System.Boolean,System.Boolean)">
            <summary>
            Calculates the new value of the scrollbar.
            </summary>
            <param name="smallIncrement">true for a small change, false otherwise.</param>
            <param name="up">true for up movement, false otherwise.</param>
            <returns>The new scrollbar value.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.GetThumbPosition">
            <summary>
            Calculates the new thumb position.
            </summary>
            <returns>The new thumb position.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.GetThumbSize">
            <summary>
            Calculates the height of the thumb.
            </summary>
            <returns>The height of the thumb.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.EnableTimer">
            <summary>
            Enables the timer.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.StopTimer">
            <summary>
            Stops the progress timer.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.ChangeThumbPosition(System.Int32)">
            <summary>
            Changes the position of the thumb.
            </summary>
            <param name="position">The new position.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.ProgressThumb(System.Boolean)">
            <summary>
            Controls the movement of the thumb.
            </summary>
            <param name="enableTimer">true for enabling the timer, false otherwise.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.ChangeContextMenuItems">
            <summary>
            Changes the displayed text of the context menu items dependent of the current <see cref="T:ExtendedControls.Base.Code.ScrollBar.CustomScrollBar.ScrollBarOrientation"/>.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.InitializeComponent">
            <summary>
            Initializes the context menu.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.ScrollHereClick(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.TopClick(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.BottomClick(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.LargeUpClick(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.LargeDownClick(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.SmallUpClick(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.CustomScrollBar.ScrollBarExtended.SmallDownClick(System.Object,System.EventArgs)">
            <summary>
            Context menu handler.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.HScrollSkin.scrollSkin_ControlAdded(System.Object,System.Windows.Forms.ControlEventArgs)">
            <summary>
            Linking the Scrollable control with Me
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.HScrollSkin.VScrollBar1_miScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Comming from the customControl
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.HScrollSkin.win_Resize(System.Object,System.EventArgs)">
            <summary>
            Almost done move and resize the Scrollable control over Me 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.HScrollSkin.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overrided to controll del scrolling of the customControl VScrollBar1
            </summary>
            <param name="m"></param>
            <remarks></remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.VScrollSkin.scrollSkin_ControlAdded(System.Object,System.Windows.Forms.ControlEventArgs)">
            <summary>
            Linking the Scrollable control with Me
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.VScrollSkin.VScrollBar1_miScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Comming from the customControl
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.VScrollSkin.win_Resize(System.Object,System.EventArgs)">
            <summary>
            Almost done move and resize the Scrollable control over Me 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.ScrollBar.VScrollSkin.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overrided to controll del scrolling of the customControl VScrollBar1
            </summary>
            <param name="m"></param>
            <remarks></remarks>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.TreeGridView.TreeGridCell">
            <summary>
            Summary description for TreeGridCell.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.TreeGridView.KryptonTreeGridView">
            <summary>
            Summary description for TreeGridView.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.TreeGridView.KryptonTreeGridView.FilterSortData(System.Data.DataTable,System.String,System.String)">
            <summary>
            FilterSortData is used to sort a datatable directly.
            </summary>
            <param name="dtStart">The DataTable to be sorted.</param>
            <param name="filter">A way to filter out certain rows from the table.</param>
            <param name="sort">A way to sort the table (i.e. "State IN 'CA'")</param>
            <returns>A Sorted/Filtered DataTable</returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton">
            <summary>
            Combines button functionality with the styling features of the Krypton Toolkit.
            </summary>
            <remarks>
            Main code taken from KryptonButton, then trimmed out to force the CommandLink layout
            </remarks>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.KryptonCommandChanged">
            <summary>
            Occurs when the value of the KryptonCommand property changes.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.#ctor">
            <summary>
            Initialize a new instance of the KryptonButton class.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.AutoSize">
            <summary>
            Gets and sets the automatic resize of the control to fit contents.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.Text">
            <summary>
            Gets or sets the text associated with this control. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.Orientation">
            <summary>
            Gets and sets the visual orientation of the control.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.ButtonStyle">
            <summary>
            Gets and sets the button style.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.CommandLinkTextValues">
            <summary>
            Gets access to the button content.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.CommandLinkImageValue">
            <summary>
            Gets access to the button content.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.StateCommon">
            <summary>
            Gets access to the common button appearance that other states can override.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.StateDisabled">
            <summary>
            Gets access to the disabled button appearance entries.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.StateNormal">
            <summary>
            Gets access to the normal button appearance entries.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.StateTracking">
            <summary>
            Gets access to the hot tracking button appearance entries.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.StatePressed">
            <summary>
            Gets access to the pressed button appearance entries.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.OverrideDefault">
            <summary>
            Gets access to the normal button appearance when default.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.OverrideFocus">
            <summary>
            Gets access to the button appearance when it has focus.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.DialogResult">
            <summary>
            Gets or sets the value returned to the parent form when the button is clicked.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.NotifyDefault(System.Boolean)">
            <summary>
            Notifies a control that it is the default button so that its appearance and behavior is adjusted accordingly. 
            </summary>
            <param name="value">true if the control should behave as a default button; otherwise false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.PerformClick">
            <summary>
            Generates a Click event for the control.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether an ampersand is included in the text of the control. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.ImeMode">
            <summary>
            Determines the IME status of the object when selected.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.DefaultImeMode">
            <summary>
            Gets the default Input Method Editor (IME) mode supported by this control.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processed; otherwise, false.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.ContextMenuClosed">
            <summary>
            Called when a context menu has just been closed.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.SetStyles(ComponentFactory.Krypton.Toolkit.ButtonStyle)">
            <summary>
            Update the state objects to reflect the new button style.
            </summary>
            <param name="buttonStyle">New button style.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.CreateButtonValues(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates a values storage object appropriate for control.
            </summary>
            <returns>Set of button values.</returns>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.OnKryptonCommandChanged(System.EventArgs)">
            <summary>
            Raises the KryptonCommandChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkButton.ViewDrawButton">
            <summary>
            Gets access to the view element for the color button.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkVersion2">
            <summary>
            A KryptonCommandLink button.
            Boilerplate code from (https://blogs.msdn.microsoft.com/knom/2007/03/12/vista-command-link-control-with-c-windows-forms/)
            </summary>
            <remarks>
            If used on Windows Vista or higher, the button will be a CommandLink: Basically the same functionality as a Button but looks different.
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkVersion2.ShowUACShield">
            <summary>
            Gets or sets the shield icon visibility of the command link.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkVersion2.NoteText">
            <summary>
            Gets or sets the note text of the command link.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkVersion2.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkVersion2"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkVersion2.SetNoteText(System.String)">
            <summary>
            Sets the NoteText to the value of value.
            </summary>
            <param name="value">The desired value of NoteText.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonCommandLinkVersion2.GetNoteText">
            <summary>
            Returns the value of the NoteText.
            </summary>
            <returns>The value of the NoteText.</returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Controls.KryptonRichTextBoxExtended">
            <summary>
            A <see cref="T:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox"/> control with some extra features.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonRichTextBoxExtended.SelectionAlignment">
            <summary>
            Gets or sets the selection alignment.
            </summary>
            <value>
            The selection alignment.
            </value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonRichTextBoxExtended.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonRichTextBoxExtended"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonRichTextBoxExtended.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:HandleCreated" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonToolStripStatusLabelExtended.TextColour">
            <summary>
            Gets or sets the text colour.
            </summary>
            <value>
            The text colour.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonToolStripStatusLabelExtended.GradientBackColour1">
            <summary>
            Gets or sets the first gradient back colour.
            </summary>
            <value>
            The gradient first back colour.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonToolStripStatusLabelExtended.GradientBackColour2">
            <summary>
            Gets or sets the second gradient back colour.
            </summary>
            <value>
            The second gradient back colour.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonToolStripStatusLabelExtended.Palette">
            <summary>
            Gets or sets the palette.
            </summary>
            <value>
            The palette.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonToolStripStatusLabelExtended.TextTypeface">
            <summary>
            Gets or sets the text typeface.
            </summary>
            <value>
            The text typeface.
            </value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonToolStripStatusLabelExtended.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonToolStripStatusLabelExtended"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonToolStripStatusLabelExtended.#ctor(ComponentFactory.Krypton.Toolkit.KryptonPalette,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Controls.KryptonToolStripStatusLabelExtended"/> class.
            </summary>
            <param name="kryptonPalette">The krypton palette.</param>
            <param name="textColour">The text colour.</param>
            <param name="gradientBackColour1">The gradient back colour1.</param>
            <param name="gradientBackColour2">The gradient back colour2.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Controls.KryptonToolStripStatusLabelExtended.BackColor">
            <summary>
            Gets or sets the background color for the item.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonToolStripStatusLabelExtended.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ToolStripItem" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonToolStripStatusLabelExtended.OnPalettePaint(System.Object,ComponentFactory.Krypton.Toolkit.PaletteLayoutEventArgs)">
            <summary>
            Called when [palette paint].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:ComponentFactory.Krypton.Toolkit.PaletteLayoutEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Controls.KryptonToolStripStatusLabelExtended.OnGlobalPaletteChanged(System.Object,System.EventArgs)">
            <summary>
            Called when [global palette changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.CrashReportTool.Classes.DrDump.AnonymousData.Exception">
            <summary>
            Gets or sets the exception.
            </summary>
            <value>
            The exception.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.CrashReportTool.Classes.DrDump.AnonymousData.ToEMail">
            <summary>
            Converts to email.
            </summary>
            <value>
            To e mail.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.CrashReportTool.Classes.DrDump.AnonymousData.ApplicationIdentifier">
            <summary>
            Gets or sets the application identifier.
            </summary>
            <value>
            The application identifier.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Designers.KryptonColourButtonExtendedActionList.DropDownPosition">
            <summary>
            Gets and sets the visual drop down position.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Designers.KryptonColourButtonExtendedActionList.DropDownOrientation">
            <summary>
            Gets and sets the visual drop down orientation.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Designers.KryptonColourButtonExtendedActionList.Splitter">
            <summary>
            Gets and sets the splitter or drop down functionality.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Designers.KryptonColourButtonExtendedActionList.Text">
            <summary>
            Gets and sets the button text.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Designers.KryptonColourButtonExtendedActionList.ExtraText">
            <summary>
            Gets and sets the extra button text.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Designers.KryptonColourButtonExtendedActionList.Image">
            <summary>
            Gets and sets the button image.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Designers.KryptonColourButtonExtendedActionList.PaletteMode">
            <summary>
            Gets and sets the palette mode.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Designers.KryptonCommandLinkButtonActionList.#ctor(ExtendedControls.ExtendedToolkit.Designers.KryptonCommandLinkButtonDesigner)">
            <summary>
            Initialize a new instance of the KryptonButtonActionList class.
            </summary>
            <param name="owner">Designer that owns this action list instance.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Designers.KryptonCommandLinkButtonActionList.ButtonStyle">
            <summary>
            Gets and sets the button style.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Designers.KryptonCommandLinkButtonActionList.Orientation">
            <summary>
            Gets and sets the visual orientation.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Designers.KryptonCommandLinkButtonActionList.Heading">
            <summary>
            Gets and sets the button text.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Designers.KryptonCommandLinkButtonActionList.Description">
            <summary>
            Gets and sets the extra button text.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Designers.KryptonCommandLinkButtonActionList.Image">
            <summary>
            Gets and sets the button image.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Designers.KryptonCommandLinkButtonActionList.PaletteMode">
            <summary>
            Gets and sets the palette mode.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Designers.KryptonCommandLinkButtonActionList.GetSortedActionItems">
            <summary>
            Returns the collection of DesignerActionItem objects contained in the list.
            </summary>
            <returns>A DesignerActionItem array that contains the items in this list.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Designers.KryptonCommandLinkButtonDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonButtonDesigner class.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Designers.KryptonCommandLinkButtonDesigner.ActionLists">
            <summary>
             Gets the design-time action lists supported by the component associated with the designer.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.ErrorReporting.Classes.DrDump.AnonymousData">
            <summary>
            Adapted from CrashReporter .NET.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.ErrorReporting.Classes.DrDump.DrDumpService">
            <summary>
            Adapted from CrashReporter .NET.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.FloatableMenuStrip.MenuStripPanelExtenedList">
            <summary>
            Gets or sets the tool strip panel extened list.
            </summary>
            <value>
            The tool strip panel extened list.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.FloatableMenuStrip.IsFloating">
            <summary>
            Gets a value indicating whether this instance is floating.
            </summary>
            <value>
              <c>true</c> if this instance is floating; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.FloatableMenuStrip.Visible">
            <summary>
            Gets or sets a value indicating whether the control and all its child controls are displayed.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.FloatableToolStrip">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Forms.ToolStrip" />
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.FloatableToolStrip.ToolStripPanelExtenedList">
            <summary>
            Gets or sets the tool strip panel extened list.
            </summary>
            <value>
            The tool strip panel extened list.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.FloatableToolStrip.IsFloating">
            <summary>
            Gets a value indicating whether this instance is floating.
            </summary>
            <value>
              <c>true</c> if this instance is floating; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.FloatableToolStrip.Visible">
            <summary>
            Gets or sets a value indicating whether the control and all its child controls are displayed.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.FloatableToolStrip.OnParentChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.FloatableToolStrip.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.FloatableToolStrip.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.
            </summary>
            <param name="mea">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.FloatableToolStrip.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.
            </summary>
            <param name="mea">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.DockingHostToolStripPanel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.DockingHostToolStripPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.DockingHostToolStripPanel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.TearOffToolStrip.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.TearOffToolStrip.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.FloatingFramework.Controls.TearOffToolStrip.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.FloatingFramework.UX.KryptonFloatingForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.FloatingFramework.UX.KryptonFloatingForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.FloatingFramework.UX.KryptonFloatingForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger">
            <summary>
            Merges a krypton ribbon with another ribbon.
            </summary>
            <remarks>
            <para>
            To affect the order of the merged groups and tabs, set the Tag property to a value from 0 to n, where n is the count of the target group minus 1.
            </para>
            </remarks>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger.TargetRibbon">
            <summary>
            Property to return the target ribbon that will receive the merged items.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger.#ctor(ComponentFactory.Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger"/> class.
            </summary>
            <param name="targetRibbon">The target ribbon that will receive the items from the merged ribbon.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="targetRibbon"/> is <b>null</b>.</exception>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger.GetSortIndexFromTag(System.Object,System.Int32)">
            <summary>
            Function to retrieve the sorting index from the items tag.
            </summary>
            <param name="tagValue">The value for the tag.</param>
            <param name="maxValue">The maximum value for the items.</param>
            <returns>The sorting index.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger.UnmergeGroupItems(ComponentFactory.Krypton.Ribbon.KryptonRibbonGroupContainerCollection,ComponentFactory.Krypton.Ribbon.KryptonRibbonGroupContainerCollection)">
            <summary>
            Function to unmerge items for a group from an existing items list in the target ribbon group.
            </summary>
            <param name="sourceItems">The source items to unmerge.</param>
            <param name="targetItems">The destination items to unmerge.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger.MergeGroupItems(ComponentFactory.Krypton.Ribbon.KryptonRibbonGroupContainerCollection,ComponentFactory.Krypton.Ribbon.KryptonRibbonGroupContainerCollection)">
            <summary>
            Function to merge items from a group into an existing items list in the target ribbon group.
            </summary>
            <param name="sourceItems">The source items to merge.</param>
            <param name="targetItems">The destination items to merge.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger.UnmergeGroups(ComponentFactory.Krypton.Ribbon.KryptonRibbonGroupCollection,ComponentFactory.Krypton.Ribbon.KryptonRibbonGroupCollection)">
            <summary>
            Function to unmerge the groups for a tab from an existing tab in the target ribbon tab.
            </summary>
            <param name="sourceGroups">The source groups to unmerge.</param>
            <param name="targetGroups">The destination groups to unmerge.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger.MergeGroups(ComponentFactory.Krypton.Ribbon.KryptonRibbonGroupCollection,ComponentFactory.Krypton.Ribbon.KryptonRibbonGroupCollection)">
            <summary>
            Function to merge the groups from a tab into an existing tab in the target ribbon tab.
            </summary>
            <param name="sourceGroups">The source groups to merge.</param>
            <param name="targetGroups">The destination groups to merge.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger.MergeTabs(ComponentFactory.Krypton.Ribbon.KryptonRibbon,ComponentFactory.Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Function to merge the tabs for a source ribbon into a target ribbon.
            </summary>
            <param name="sourceRibbon">The ribbon to merge.</param>
            <param name="targetRibbon">The ribbon to be merged into.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger.UnmergeContexts(ComponentFactory.Krypton.Ribbon.KryptonRibbon,ComponentFactory.Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Function to unmerge the contexts for a source ribbon from a target ribbon.
            </summary>
            <param name="sourceRibbon">The ribbon to unmerge.</param>
            <param name="targetRibbon">The ribbon to be unmerged from.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger.MergeContexts(ComponentFactory.Krypton.Ribbon.KryptonRibbon,ComponentFactory.Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Function to merge the contexts for a source ribbon into a target ribbon.
            </summary>
            <param name="sourceRibbon">The ribbon to merge.</param>
            <param name="targetRibbon">The ribbon to be merged into.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger.UnmergeTabs(ComponentFactory.Krypton.Ribbon.KryptonRibbon,ComponentFactory.Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Function to unmerge the tabs for a source ribbon from a target ribbon.
            </summary>
            <param name="sourceRibbon">The ribbon to merge into.</param>
            <param name="targetRibbon">The ribbon to be unmerged from.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger.Merge(ComponentFactory.Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Function to merge a ribbon with the target ribbon
            </summary>
            <param name="ribbon">The ribbon to merge.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="ribbon"/> parameter is <b>null</b>.</exception>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Ribbon.RibbonMerger.Unmerge(ComponentFactory.Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Function to unmerge the specified ribbon from the target ribbon.
            </summary>
            <param name="ribbon">The ribbon to unmerge.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="ribbon"/> parameter is <b>null</b>.</exception>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.Alert">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel"/> is alert.
            </summary>
            <value>
              <c>true</c> if alert; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.EnableBlinking">
            <summary>
            Gets or sets a value indicating whether [enable blinking].
            </summary>
            <value>
              <c>true</c> if [enable blinking]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.EnableFadeAnimation">
            <summary>
            Gets or sets a value indicating whether [enable fade animation].
            </summary>
            <value>
              <c>true</c> if [enable fade animation]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.AlertColourOne">
            <summary>
            Gets or sets the alert colour one.
            </summary>
            <value>
            The alert colour one.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.AlertColourTwo">
            <summary>
            Gets or sets the alert colour two.
            </summary>
            <value>
            The alert colour two.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.AlertTextColour">
            <summary>
            Gets or sets the alert text colour.
            </summary>
            <value>
            The alert text colour.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.GradientColourOne">
            <summary>
            Gets or sets the gradient colour one.
            </summary>
            <value>
            The gradient colour one.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.GradientColourTwo">
            <summary>
            Gets or sets the gradient colour two.
            </summary>
            <value>
            The gradient colour two.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.TextGlow">
            <summary>
            Gets or sets the text glow colour.
            </summary>
            <value>
            The text glow colour.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.GradientMode">
            <summary>
            Gets or sets the gradient mode.
            </summary>
            <value>
            The gradient mode.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.TextGlowSpread">
            <summary>
            Gets or sets the text glow spread.
            </summary>
            <value>
            The text glow spread.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.AlertBlinkInterval">
            <summary>
            Gets or sets the alert blink interval.
            </summary>
            <value>
            The alert blink interval.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.FadeInterval">
            <summary>
            Gets or sets the fade interval.
            </summary>
            <value>
            The fade interval.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.BlinkDuration">
            <summary>
            Gets or sets the duration of the blink.
            </summary>
            <value>
            The duration of the blink.
            </value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripItem.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.BlinkLabel(System.Int64)">
            <summary>
            Blinks the label.
            </summary>
            <param name="blinkDuration">Duration of the blink.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.ToolstripControls.ExtendedToolStripStatusLabel.SoftBlink(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int16,System.Boolean,System.Int64)">
            <summary>
            Softs the blink.
            </summary>
            <param name="alertColour1">The alert colour1.</param>
            <param name="alertColour2">The alert colour2.</param>
            <param name="alertTextColour">The alert text colour.</param>
            <param name="cycleInterval">The cycle interval.</param>
            <param name="bkClr">if set to <c>true</c> [bk color].</param>
            <param name="blinkDuration">Duration of the blink.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.KryptonNumericUpDownToolStripItem.KryptonNumericUpDownControl">
            <summary>
            Gets or sets KryptonNumericUpDownControl.
            </summary>
            <value>
            The base control.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ToolstripControls.KryptonNumericUpDownToolStripItem.Value">
            <summary>
            Gets or sets Value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Colours.ColourWheelColourPickerDialog.ShowHSBUIComponents(System.Boolean)">
            <summary>
            Shows the hsbui components.
            </summary>
            <param name="enabled">if set to <c>true</c> [enabled].</param>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.UI.Colours.ColourEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Colours.ColourEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Colours.ColourEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Colours.ColourEditorForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.UI.Colours.ColourEditorForm"/> class.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.UI.Colours.ColourEditorForm.SelectedColour">
            <summary>
            Gets or sets the selected color.
            </summary>
            <value>The color of the selected.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.UI.Colours.ColourEditorForm.ExternalColourEditorInformationProvider">
            <summary>
            Gets or sets the external provider.
            </summary>
            <value>The external provider.</value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.UI.Colours.ColourEditorForm.StoreID">
            <summary>
            Gets the store ID.
            </summary>
            <value>The store ID.</value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Colours.ColourEditorForm.ColourEditorForm_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the <see cref="T:ExtendedControls.ExtendedToolkit.UI.Colours.ColourEditorForm"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance 
            containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Colours.ColourEditorForm.ColourEditorForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Handles the FormClosing event of the <see cref="T:ExtendedControls.ExtendedToolkit.UI.Colours.ColourEditorForm"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.FormClosingEventArgs"/> 
            instance containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Colours.ColourEditorForm.UpdateUI">
            <summary>
            Updates the UI.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Colours.KryptonColourButtonCustomColourDialog.ShowHSBUIComponents(System.Boolean)">
            <summary>
            Shows the hsbui components.
            </summary>
            <param name="enabled">if set to <c>true</c> [enabled].</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Colours.KryptonColourButtonCustomColourDialog.ColourToHexadecimal(System.Drawing.Color)">
            <summary>
            Colours to hexadecimal.
            </summary>
            <param name="colour">The colour.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Colours.KryptonColourButtonCustomColourDialog.ColourFromHexadecimal(System.String)">
            <summary>
            Colours from hexadecimal.
            </summary>
            <param name="hexadecimalCode">The hexadecimal code.</param>
            <returns></returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.UI.Dialogues.KryptonFileInformationDialog">
            <summary>
            Displays the properties of a file or directory.
            </summary>
            <seealso cref="T:ComponentFactory.Krypton.Toolkit.KryptonForm" />
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.UI.Dialogues.KryptonFileInformationDialog.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Dialogues.KryptonFileInformationDialog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.UI.Dialogues.KryptonFileInformationDialog"/> class.
            </summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Dialogues.KryptonFileInformationDialog.UpdateWindowIcon(System.String)">
            <summary>
            Updates the window icon.
            </summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Dialogues.KryptonFileInformationDialog.GetFileIconImage(System.String)">
            <summary>
            Gets the file icon image.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Dialogues.KryptonFileInformationDialog.GetFileIcon(System.String)">
            <summary>
            Gets the file icon.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Dialogues.KryptonFileInformationDialog.GetFileInformation(System.String)">
            <summary>
            Gets the file information.
            </summary>
            <param name="filePath">The file path.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Dialogues.KryptonFileInformationDialog.UpdateWindowTitle(System.String,System.Boolean)">
            <summary>
            Updates the window title.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="showExtension">if set to <c>true</c> [show extension].</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Dialogues.KryptonFileInformationDialog.ConstructMD5HashString(System.Byte[])">
            <summary>
            Constructs the m d5 hash string.
            </summary>
            <param name="hashBytes">The hash bytes.</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Dialogues.KryptonFileInformationDialog.GetDateTimeAsString(System.DateTime)">
            <summary>
            Gets the date time as string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns></returns>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.UI.Dialogues.TypefaceSelectionDialogue.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Dialogues.TypefaceSelectionDialogue.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Dialogues.TypefaceSelectionDialogue.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.UI.FileDownloader.FileDownloaderBasic.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.FileDownloader.FileDownloaderBasic.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.FileDownloader.FileDownloaderBasic.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.UI.GraphicsTools.KryptonImageResizingToolWindow">
            <summary>
            A tool for resizing images (https://www.youtube.com/watch?v=tvet0wU7whw)
            </summary>
            <seealso cref="T:ComponentFactory.Krypton.Toolkit.KryptonForm" />
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.UI.Security.FileHashing.HashFile">
            <summary>
            
            </summary>
            <seealso cref="T:ComponentFactory.Krypton.Toolkit.KryptonForm" />
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Security.FileHashing.HashFile.MakeMD5HashString(System.Byte[],System.Boolean)">
            <summary>
            Makes the MD5 hash string.
            </summary>
            <param name="hashBytes">The hash bytes.</param>
            <param name="toUpper">if set to <c>true</c> [to upper].</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Security.FileHashing.HashFile.MakeSHA1HashString(System.Byte[],System.Boolean)">
            <summary>
            Makes the SHA-1 hash string.
            </summary>
            <param name="hashBytes">The hash bytes.</param>
            <param name="toUpper">if set to <c>true</c> [to upper].</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Security.FileHashing.HashFile.MakeSHA256HashString(System.Byte[],System.Boolean)">
            <summary>
            Makes the SHA-256 hash string.
            </summary>
            <param name="hashBytes">The hash bytes.</param>
            <param name="toUpper">if set to <c>true</c> [to upper].</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Security.FileHashing.HashFile.MakeSHA384HashString(System.Byte[],System.Boolean)">
            <summary>
            Makes the SHA-384 hash string.
            </summary>
            <param name="hashBytes">The hash bytes.</param>
            <param name="toUpper">if set to <c>true</c> [to upper].</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Security.FileHashing.HashFile.MakeSHA512HashString(System.Byte[],System.Boolean)">
            <summary>
            Makes the SHA-512 hash string.
            </summary>
            <param name="hashBytes">The hash bytes.</param>
            <param name="toUpper">if set to <c>true</c> [to upper].</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Security.FileHashing.HashFile.MakeRIPEMD160HashString(System.Byte[],System.Boolean)">
            <summary>
            Makes the RIPEMD-160 hash string.
            </summary>
            <param name="hashBytes">The hash bytes.</param>
            <param name="toUpper">if set to <c>true</c> [to upper].</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Security.FileHashing.VarifyFileHash.CompareHash(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="fileHash"></param>
            <param name="importedHash"></param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Security.FileHashing.VarifyFileHash.SetBusy(System.Boolean)">
            <summary>
            Sets the value of Busy to value.
            </summary>
            <param name="value">The value of Busy.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Security.FileHashing.VarifyFileHash.GetBusy">
            <summary>
            Returns the value of Busy.
            </summary>
            <returns>The value of Busy.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.SoftwareUpdater.UX.SoftwareUpdater.#ctor(System.String,System.Version,System.String,System.Drawing.Icon)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.UI.SoftwareUpdater.UX.SoftwareUpdater"/> class.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="currentApplicationVersion">The current application version.</param>
            <param name="serverURL">The server URL.</param>
            <param name="icon">The icon.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.Theming.ThemeChooser.EnableCustomPaletteUIElements(System.Boolean)">
            <summary>
            Enables the custom palette UI elements.
            </summary>
            <param name="enabled">if set to <c>true</c> [enabled].</param>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.UI.ToastNotification.KryptonToastNotificationPopupForm.LinkClick">
            <summary>
            Event that is raised when the text is clicked.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.UI.ToastNotification.KryptonToastNotificationPopupForm.CloseClick">
            <summary>
            Event that is raised when the notification window is manually closed.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.UI.ToastNotification.KryptonToastNotificationPopupForm.RectContentText">
            <summary>
            Gets the rectangle of the content text.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.UI.ToastNotification.KryptonToastNotificationPopupForm.RectClose">
            <summary>
            gets the rectangle of the close button.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.UI.ToastNotification.KryptonToastNotificationPopupForm.RectOptions">
            <summary>
            Gets the rectangle of the options button.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.ToastNotification.KryptonToastNotificationPopupForm.OptionsMenu_Closed(System.Object,System.Windows.Forms.ToolStripDropDownClosedEventArgs)">
            <summary>
            The options popup menu has been closed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.ToastNotification.KryptonToastNotificationPopupForm.AddValueMax255(System.Int32,System.Int32)">
            <summary>
            Add two values but do not return a value greater than 255.
            </summary>
            <param name="input">first value</param>
            <param name="add">value to add</param>
            <returns>sum of both values</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.ToastNotification.KryptonToastNotificationPopupForm.DedValueMin0(System.Int32,System.Int32)">
            <summary>
            Subtract two values but do not returns a value below 0.
            </summary>
            <param name="input">first value</param>
            <param name="ded">value to subtract</param>
            <returns>first value minus second value</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.ToastNotification.KryptonToastNotificationPopupForm.GetDarkerColour(System.Drawing.Color)">
            <summary>
            Returns a color which is darker than the given color.
            </summary>
            <param name="colour">Color</param>
            <returns>darker color</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.ToastNotification.KryptonToastNotificationPopupForm.GetLighterColour(System.Drawing.Color)">
            <summary>
            Returns a color which is lighter than the given color.
            </summary>
            <param name="color">Color</param>
            <returns>lighter color</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.ToastNotification.KryptonToastNotificationPopupForm.AllocateGDIObjects">
            <summary>
            Create all GDI objects used to paint the form.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.UI.ToastNotification.KryptonToastNotificationPopupForm.DisposeGDIObjects">
            <summary>
            Free all GDI objects.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox">
            <summary>
            Displays a message box that can contain text, buttons, and symbols that inform and instruct the user.
            Allows optional Font to be specified, if not then new Font(@"Segoe UI", 12F) will be used
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.DoNotShowAgainOptionResult">
            <summary>
            Gets or sets a value indicating whether [do not show again option result].
            </summary>
            <value>
              <c>true</c> if [do not show again option result]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.MessageBoxTypeface">
            <summary>
            Gets or sets the message box typeface.
            </summary>
            <value>
            The message box typeface.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.TimeOut">
            <summary>
            Gets or sets the time out for the <see cref="T:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox"/>.
            </summary>
            <value>
            The time out.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.TimeOutTimerDelay">
            <summary>
            Gets or sets the time out timer delay.
            </summary>
            <value>
            The time out timer delay.
            </value>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.DoNotShowAgainOptionText">
            <summary>
            Gets or sets the do not show again option text.
            </summary>
            <value>
            The do not show again option text.
            </value>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.HelpInformation">
            <summary>
            What is this class for?
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.HelpInformation.HelpFilePath">
            <summary>
            Gets the HelpFilePath property.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.HelpInformation.Keyword">
            <summary>
            Gets the Keyword property.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.HelpInformation.Navigator">
            <summary>
            Gets the Navigator property.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.HelpInformation.Param">
            <summary>
            Gets the Param property.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.HelpInformation.#ctor">
            <summary>
            Initialize a new instance of the HelpInformation class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.HelpInformation.#ctor(System.String)">
            <summary>
            Initialize a new instance of the HelpInformation class.
            </summary>
            <param name="helpFilePath">Value for HelpFilePath.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.HelpInformation.#ctor(System.String,System.String)">
            <summary>
            Initialize a new instance of the HelpInformation class.
            </summary>
            <param name="helpFilePath">Value for HelpFilePath.</param>
            <param name="keyword">Value for Keyword</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.HelpInformation.#ctor(System.String,System.Windows.Forms.HelpNavigator)">
            <summary>
            Initialize a new instance of the HelpInformation class.
            </summary>
            <param name="helpFilePath">Value for HelpFilePath.</param>
            <param name="navigator">Value for Navigator</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.HelpInformation.#ctor(System.String,System.Windows.Forms.HelpNavigator,System.Object)">
            <summary>
            Initialize a new instance of the HelpInformation class.
            </summary>
            <param name="helpFilePath">Value for HelpFilePath.</param>
            <param name="navigator">Value for Navigator</param>
            <param name="param">Value for Param</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.MessageButton.IgnoreAltF4">
            <summary>
            Gets and sets the ignoring of Alt+F4
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.MessageButton.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process. </param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.#ctor(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.HelpInformation,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font,System.Boolean,System.String,System.Boolean,System.Int32,System.Int32,System.Windows.Forms.DialogResult,System.String,System.String,System.String)" -->
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.String,System.Nullable{System.Boolean},System.Drawing.Font,System.Boolean)">
            <summary>
            Displays a message box with specified text.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box in front of the specified object and with the specified text.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.String,System.String,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with specified text and caption.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box in front of the specified object and with the specified text and caption.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with specified text, caption, and buttons.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box in front of the specified object and with the specified text, caption, and buttons.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with specified text, caption, buttons, and icon.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box in front of the specified object and with the specified text, caption, buttons, and icon.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, and default button.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box in front of the specified object and with the specified text, caption, buttons, icon, and default button.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, and options.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font,System.String,System.String,System.String)">
            <summary>
            Displays a message box with specified text, caption, and buttons.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box in front of the specified object and with the specified text, caption, buttons, icon, default button, and options.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Boolean,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="displayHelpButton">Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and HelpNavigator.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="navigator">One of the System.Windows.Forms.HelpNavigator values.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.String,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and Help keyword.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="keyword">The Help keyword to display when the user clicks the Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and HelpNavigator.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="navigator">One of the System.Windows.Forms.HelpNavigator values.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.String,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and Help keyword.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="keyword">The Help keyword to display when the user clicks the Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file, HelpNavigator, and Help topic.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="navigator">One of the System.Windows.Forms.HelpNavigator values.</param>
            <param name="param">The numeric ID of the Help topic to display when the user clicks the Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file, HelpNavigator, and Help topic.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="navigator">One of the System.Windows.Forms.HelpNavigator values.</param>
            <param name="param">The numeric ID of the Help topic to display when the user clicks the Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <param name="messageboxTypeface">Defines the messagebox font.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.MessageBoxes.UI.ExtendedKryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object,System.Nullable{System.Boolean},System.Boolean,System.Drawing.Font,System.Boolean,System.String,System.Boolean,System.Int32,System.Int32,System.Windows.Forms.DialogResult)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file, HelpNavigator, and Help topic.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="navigator">One of the System.Windows.Forms.HelpNavigator values.</param>
            <param name="param">The numeric ID of the Help topic to display when the user clicks the Help button.</param>
            <param name="showCtrlCopy">Show extraText in title. If null(default) then only when Warning or Error icon is used.</param>
            <param name="messageboxTypeface">Defines the messagebox font.</param>
            <param name="showDoNotShowAgainOption">Displays the 'Do not show again' UI elements.</param>
            <param name="doNotShowAgainOptionText">Set your own 'Do not show again' text.</param>
            <param name="useTimeOutOption">Use the time out feature.</param>
            <param name="timeOut">Seconds until time out.</param>
            <param name="timeOutDelay">The timer interval.</param>
            <param name="defaultTimeOutResponse">What should the response be after timeout?</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedBorderType">
            <summary>
            The krypton messagebox border style.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedBorderType.NONE">
            <summary>
            No border (not recommended).
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedBorderType.FIXEDSINGLE">
            <summary>
            A fixed single border.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedBorderType.FIXED3D">
            <summary>
            A fixed 3D border.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedBorderType.FIXEDDIALOG">
            <summary>
            A fixed dialog border.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedBorderType.SIZABLE">
            <summary>
            A sizable border.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedBorderType.FIXEDTOOLWINDOW">
            <summary>
            A fixed tool window border.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedBorderType.SIZABLETOOLWINDOW">
            <summary>
            A sizable tool window border.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedThemeType">
            <summary>
            Krypton messagebox extended palette theme.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedApplicationIconVisibility">
            <summary>
            
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedApplicationIconVisibility.VISIBLE">
            <summary>
            Icon is visible
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedApplicationIconVisibility.HIDDEN">
            <summary>
            Icon is hidden
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedIcon">
            <summary>
            Messagebox icon
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedIcon.HAND">
            <summary>
            A hand icon.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedIcon.QUESTION">
            <summary>
            A question icon.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedIcon.EXCLAMATION">
            <summary>
            A exclamation icon.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedIcon.ASTERISK">
            <summary>
            A asterisk icon.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedIcon.STOP">
            <summary>
            A stop icon.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedIcon.ERROR">
            <summary>
            A error icon.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedIcon.INFORMATION">
            <summary>
            A information icon.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedIcon.CUSTOM">
            <summary>
            A custom icon (must be 64 x 64).
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedIcon.CRITICAL">
            <summary>
            A critical icon.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedIcon.OK">
            <summary>
            The ok icon.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedIcon.NONE">
            <summary>
            No icon set.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedButtons">
            <summary>
            
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedButtons.OK">
            <summary>
            The ok button.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedButtons.OKCANCEL">
            <summary>
            The ok cancel buttons.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Messageboxes.Enumerations.KryptonMessageBoxExtendedButtons.YESNO">
            <summary>
            The yes no buttons.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.AquaGreenColorTable">
            <summary>
            Provide Office 2007 Blue Theme colors
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.AquaGreenColorTable.InitColours(System.Collections.Generic.Dictionary{ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours,System.Drawing.Color}@)">
            <summary>
            initialize a color Dictionary with defined colors
            </summary>
            <param name="rgbTable">Dictionary with defined colors</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.AquaRenderer">
            <summary>
            Draw ToolStrips using the Office 2007 themed appearance.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.AquaRenderer.#ctor">
            <summary>
            Initialize a new instance of the Office2007Renderer class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.AquaRenderer.#ctor(ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable)">
            <summary>
            Initializes a new instance of the AquaRenderer class.
            </summary>
            <param name="professionalColourTable">A <see cref="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable"/> to be used for painting.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.AquaRenderer.OnRenderArrow(System.Windows.Forms.ToolStripArrowRenderEventArgs)">
            <summary>
            Raises the RenderArrow event.
            </summary>
            <param name="e">A ToolStripArrowRenderEventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.AquaRenderer.OnRenderItemText(System.Windows.Forms.ToolStripItemTextRenderEventArgs)">
            <summary>
            Raises the RenderItemText event.
            </summary>
            <param name="e">A ToolStripItemTextRenderEventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.AquaRenderer.OnRenderToolStripContentPanelBackground(System.Windows.Forms.ToolStripContentPanelRenderEventArgs)">
            <summary>
            Raises the RenderToolStripContentPanelBackground event. 
            </summary>
            <param name="e">An ToolStripContentPanelRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.AquaRenderer.OnRenderSeparator(System.Windows.Forms.ToolStripSeparatorRenderEventArgs)">
            <summary>
            Raises the RenderSeparator event. 
            </summary>
            <param name="e">An ToolStripSeparatorRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.AquaRenderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBackground event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.AquaRenderer.OnRenderImageMargin(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderImageMargin event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.ColourTableRed">
            <summary>
            Provide Red Theme colors
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.ColourTableRed.InitColours(System.Collections.Generic.Dictionary{ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours,System.Drawing.Color}@)">
            <summary>
            initialize a color Dictionary with defined colors
            </summary>
            <param name="rgbTable">Dictionary with defined colors</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007BlackColourTable">
            <summary>
            Provide Office 2007 black theme colors
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007BlackColourTable.InitColours(System.Collections.Generic.Dictionary{ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours,System.Drawing.Color}@)">
            <summary>
            initialize a color Dictionary with defined colors
            </summary>
            <param name="rgbTable">Dictionary with defined colors</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007BlueColourTable">
            <summary>
            Provide Office 2007 Blue Theme colors
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007BlueColourTable.InitColours(System.Collections.Generic.Dictionary{ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours,System.Drawing.Color}@)">
            <summary>
            initialize a color Dictionary with defined colors
            </summary>
            <param name="rgbTable">Dictionary with defined colors</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable">
            <summary>
            Provide Office 2007 Blue Theme colors
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.#ctor">
            <summary>
            Initialize a new instance of the Office2007ColorTable class.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ButtonPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ButtonPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ButtonPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ButtonSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ButtonSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ButtonSelectedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ButtonSelectedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonSelectedHighlight.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.CheckBackground">
            <summary>
            Gets the solid color to use when the check box is selected and gradients are being used.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.GripDark">
            <summary>
            Gets the color to use for shadow effects on the grip or move handle.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.GripLight">
            <summary>
            Gets the color to use for highlight effects on the grip or move handle.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ImageMarginGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.MenuBorder">
            <summary>
            Gets the border color or a MenuStrip.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.MenuItemPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.MenuItemPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.MenuItemPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.MenuItemSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.MenuItemSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.MenuStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.MenuStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.OverflowButtonGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.OverflowButtonGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.OverflowButtonGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.RaftingContainerGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.RaftingContainerGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.SeparatorDark">
            <summary>
            Gets the color to use to for shadow effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.SeparatorLight">
            <summary>
            Gets the color to use to for highlight effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.StatusStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.StatusStripGradientEnd">
            <summary>
            Gets the end color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ToolStripBorder">
            <summary>
            Gets the border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ToolStripContentPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ToolStripContentPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ToolStripDropDownBackground">
            <summary>
            Gets the solid background color of the ToolStripDropDown.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ToolStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ToolStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ToolStripGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ToolStripPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007ColourTable.ToolStripPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007FlatRenderer">
            <summary>
            Draw ToolStrips using the Office 2007 themed appearance.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007FlatRenderer.#ctor">
            <summary>
            Initialize a new instance of the Office2007Renderer class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007FlatRenderer.#ctor(ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable)">
            <summary>
            Initializes a new instance of the Office2007Renderer class.
            </summary>
            <param name="professionalColourTable">A <see cref="!:BSE.Windows.Forms.ProfessionalColorTable"/> to be used for painting.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007FlatRenderer.OnRenderArrow(System.Windows.Forms.ToolStripArrowRenderEventArgs)">
            <summary>
            Raises the RenderArrow event.
            </summary>
            <param name="e">A ToolStripArrowRenderEventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007FlatRenderer.OnRenderItemText(System.Windows.Forms.ToolStripItemTextRenderEventArgs)">
            <summary>
            Raises the RenderItemText event.
            </summary>
            <param name="e">A ToolStripItemTextRenderEventArgs that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007FlatRenderer.OnRenderToolStripContentPanelBackground(System.Windows.Forms.ToolStripContentPanelRenderEventArgs)">
            <summary>
            Raises the RenderToolStripContentPanelBackground event. 
            </summary>
            <param name="e">An ToolStripContentPanelRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007FlatRenderer.OnRenderSeparator(System.Windows.Forms.ToolStripSeparatorRenderEventArgs)">
            <summary>
            Raises the RenderSeparator event. 
            </summary>
            <param name="e">An ToolStripSeparatorRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007FlatRenderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBackground event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007FlatRenderer.OnRenderImageMargin(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderImageMargin event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.UseAntiAlias">
            <summary>
            Set the SmoothingMode=AntiAlias until instance disposed.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.UseAntiAlias.#ctor(System.Drawing.Graphics)">
            <summary>
            Initialize a new instance of the UseAntiAlias class.
            </summary>
            <param name="g">Graphics instance.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.UseAntiAlias.Dispose">
            <summary>
            Revert the SmoothingMode back to original setting.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.UseClearTypeGridFit">
            <summary>
            Set the TextRenderingHint.ClearTypeGridFit until instance disposed.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.UseClearTypeGridFit.#ctor(System.Drawing.Graphics)">
            <summary>
            Initialize a new instance of the UseClearTypeGridFit class.
            </summary>
            <param name="g">Graphics instance.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.UseClearTypeGridFit.Dispose">
            <summary>
            Revert the TextRenderingHint back to original setting.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.UseClipping">
            <summary>
            Set the clipping region until instance disposed.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.UseClipping.#ctor(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Initialize a new instance of the UseClipping class.
            </summary>
            <param name="g">Graphics instance.</param>
            <param name="path">Clipping path.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.UseClipping.#ctor(System.Drawing.Graphics,System.Drawing.Region)">
            <summary>
            Initialize a new instance of the UseClipping class.
            </summary>
            <param name="g">Graphics instance.</param>
            <param name="region">Clipping region.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.UseClipping.Dispose">
            <summary>
            Revert clipping back to origina setting.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer">
            <summary>
            Draw ToolStrips using the Office 2007 themed appearance.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.#ctor">
            <summary>
            Initialize a new instance of the Office2007Renderer class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.OnRenderArrow(System.Windows.Forms.ToolStripArrowRenderEventArgs)">
            <summary>
            Raises the RenderArrow event. 
            </summary>
            <param name="e">An ToolStripArrowRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.OnRenderButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.OnRenderDropDownButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderDropDownButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.OnRenderItemCheck(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>
            Raises the RenderItemCheck event. 
            </summary>
            <param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.OnRenderItemText(System.Windows.Forms.ToolStripItemTextRenderEventArgs)">
            <summary>
            Raises the RenderItemText event. 
            </summary>
            <param name="e">An ToolStripItemTextRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.OnRenderItemImage(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>
            Raises the RenderItemImage event. 
            </summary>
            <param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.OnRenderMenuItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderMenuItemBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.OnRenderSplitButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderSplitButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.OnRenderStatusStripSizingGrip(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderStatusStripSizingGrip event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.OnRenderToolStripContentPanelBackground(System.Windows.Forms.ToolStripContentPanelRenderEventArgs)">
            <summary>
            Raises the RenderToolStripContentPanelBackground event. 
            </summary>
            <param name="e">An ToolStripContentPanelRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.OnRenderSeparator(System.Windows.Forms.ToolStripSeparatorRenderEventArgs)">
            <summary>
            Raises the RenderSeparator event. 
            </summary>
            <param name="e">An ToolStripSeparatorRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBackground event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.OnRenderImageMargin(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderImageMargin event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007Renderer.OnRenderToolStripBorder(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBorder event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007SilverColourTable">
            <summary>
            Provide Office 2007 Silver Theme colors
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.Office2007SilverColourTable.InitColours(System.Collections.Generic.Dictionary{ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours,System.Drawing.Color}@)">
            <summary>
            initialize a color Dictionary with defined colors
            </summary>
            <param name="rgbTable">Dictionary with defined colors</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable">
            <summary>
            Provides colors used for Microsoft Office display elements.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours">
            <summary>
            Gets or sets the KnownColors appearance of the ProfessionalColorTable.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ButtonPressedGradientBegin">
            <summary>
            The starting color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ButtonPressedGradientEnd">
            <summary>
            The end color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ButtonPressedGradientMiddle">
            <summary>
            The middle color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ButtonSelectedGradientBegin">
            <summary>
            The starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ButtonSelectedBorder">
            <summary>
            The border color to use with the ButtonSelectedGradientBegin,
            ButtonSelectedGradientMiddle,
            and ButtonSelectedGradientEnd colors.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ButtonSelectedGradientEnd">
            <summary>
            The end color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ButtonSelectedGradientMiddle">
            <summary>
            The middle color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ButtonSelectedHighlightBorder">
            <summary>
            The border color to use with ButtonSelectedHighlight.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.CheckBackground">
            <summary>
            The solid color to use when the check box is selected and gradients are being used.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.CheckSelectedBackground">
            <summary>
            The solid color to use when the check box is selected and gradients are being used.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ContextMenuItem">
            <summary>
            The text color of a top-level ContextMenuItem.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ContextMenuItemText">
            <summary>
            The text color of a top-level ContextMenuItemText.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.GripDark">
            <summary>
            The color to use for shadow effects on the grip or move handle.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.GripLight">
            <summary>
            The color to use for highlight effects on the grip or move handle.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ImageMarginGradientBegin">
            <summary>
            The starting color of the gradient used in the image margin
            of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.MenuBorder">
            <summary>
            The border color or a MenuStrip.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.MenuItemBorder">
            <summary>
            The border color to use with a ToolStripMenuItem.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.MenuItemPressedGradientBegin">
            <summary>
            The starting color of the gradient used when a top-level
            ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.MenuItemPressedGradientEnd">
            <summary>
            The end color of the gradient used when a top-level
            ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.MenuItemPressedGradientMiddle">
            <summary>
            The middle color of the gradient used when a top-level
            ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.MenuItemText">
            <summary>
            The text color of a top-level ToolStripMenuItem.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.MenuItemSelected">
            <summary>
            The solid color to use when a ToolStripMenuItem other
            than the top-level ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.MenuItemSelectedGradientBegin">
            <summary>
            The starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.MenuItemSelectedGradientEnd">
            <summary>
            The end color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.MenuStripGradientBegin">
            <summary>
            The starting color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.MenuStripGradientEnd">
            <summary>
            The end color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.OverflowButtonGradientBegin">
            <summary>
            The starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.OverflowButtonGradientEnd">
            <summary>
            The end color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.OverflowButtonGradientMiddle">
            <summary>
            The middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.RaftingContainerGradientBegin">
            <summary>
            The starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.RaftingContainerGradientEnd">
            <summary>
            The end color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.SeparatorDark">
            <summary>
            The color to use to for shadow effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.SeparatorLight">
            <summary>
            The color to use to for highlight effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.StatusStripGradientBegin">
            <summary>
            The starting color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.StatusStripGradientEnd">
            <summary>
            The end color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.StatusStripText">
            <summary>
            The text color used on the StatusStrip.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ToolStripBorder">
            <summary>
            The border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ToolStripContentPanelGradientBegin">
            <summary>
            The starting color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ToolStripContentPanelGradientEnd">
            <summary>
            The end color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ToolStripDropDownBackground">
            <summary>
            The solid background color of the ToolStripDropDown.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ToolStripGradientBegin">
            <summary>
            The starting color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ToolStripGradientEnd">
            <summary>
            The end color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ToolStripGradientMiddle">
            <summary>
            The middle color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ToolStripPanelGradientBegin">
            <summary>
            The starting color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.ToolStripPanelGradientEnd">
            <summary>
            The end color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours.LastKnownColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ButtonPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ButtonPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ButtonPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is pressed down.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ButtonSelectedBorder">
            <summary>
            Gets the starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ButtonSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ButtonSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ButtonSelectedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ButtonSelectedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonSelectedHighlight.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.CheckBackground">
            <summary>
            Gets the solid color to use when the check box is selected and gradients are being used.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.CheckSelectedBackground">
            <summary>
            Gets the solid color to use when the check box is selected and gradients are being used.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.GripDark">
            <summary>
            Gets the color to use for shadow effects on the grip or move handle.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.GripLight">
            <summary>
            Gets the color to use for highlight effects on the grip or move handle.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ImageMarginGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.MenuBorder">
            <summary>
            Gets the border color or a MenuStrip.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.MenuItemBorder">
            <summary>
            Gets the border color to use with a ToolStripMenuItem.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.MenuItemPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.MenuItemPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.MenuItemPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.MenuItemSelected">
            <summary>
            Gets the solid color to use when a ToolStripMenuItem other than the top-level ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.MenuItemText">
            <summary>
            Gets the text color of a top-level ToolStripMenuItem.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.MenuItemSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.MenuItemSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.MenuStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.MenuStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.OverflowButtonGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.OverflowButtonGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.OverflowButtonGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.RaftingContainerGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.RaftingContainerGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.SeparatorDark">
            <summary>
            Gets the color to use to for shadow effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.SeparatorLight">
            <summary>
            Gets the color to use to for highlight effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.StatusStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.StatusStripGradientEnd">
            <summary>
            Gets the end color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.StatusStripText">
            <summary>
            Gets the text color used on the StatusStrip.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ToolStripBorder">
            <summary>
            Gets the border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ToolStripContentPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ToolStripContentPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ToolStripDropDownBackground">
            <summary>
            Gets the solid background color of the ToolStripDropDown.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ToolStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ToolStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ToolStripGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ToolStripPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.ToolStripPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.UseProfessionalColours">
            <summary>
            Gets or sets a value indicating whether to use the extended colors.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.UseSystemColours">
            <summary>
            Gets or sets a value indicating whether to use System.Drawing.SystemColors rather than colors that match the current visual style.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.#ctor">
            <summary>
            Initialize a new instance of the ProfessionalColorTable class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.InitColours(System.Collections.Generic.Dictionary{ExtendedControls.ExtendedToolkit.Renderer.Classes.ProfessionalColourTable.KnownColours,System.Drawing.Color}@)">
            <summary>
            Initialize a color Dictionary with defined colors
            </summary>
            <param name="rgbTable">Dictionary with defined colors</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Renderer.Controls.RendererManager.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Utilities.Classes.Utility.IsWindowsSevenOrAbove">
            <summary>
            Determines whether [is windows seven or above].
            </summary>
            <returns>
              <c>true</c> if [is windows seven or above]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Utilities.Classes.Msgs">
            <summary>
            Windows Event Messages sent to the WindowProc
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Utilities.UI.FadeForm">
            <summary>
            Base form class that provides fading/sliding effects on open/close of the form.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Utilities.UI.FadeForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Utilities.UI.FadeForm"/> class.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Utilities.UI.FadeForm.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ExtendedControls.ExtendedToolkit.Utilities.UI.FadeForm"/> class.
            </summary>
            <param name="useSlideAnimation">if set to <c>true</c> [use slide animation].</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Utilities.UI.FadeForm.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.Load"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Utilities.UI.FadeForm.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.Closing"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Values.CommandLinkTextValues.Description">
            <summary>
            Gets and sets the header description text.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Values.ImageValue.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the HeaderValuesBase class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Values.ImageValue.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Values.ImageValue.ResetImage">
            <summary>
            Resets the Image property to its default value.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Values.ImageValue.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Values.ImageValue.ImageTransparentColor">
            <summary>
            Gets and sets the heading image transparent color.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Values.ImageValue.ResetImageTransparentColor">
            <summary>
            Resets the ImageTransparentColor property to its default value.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Values.ImageValue.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image transparent color.
            </summary>
            <param name="state">The state for which the image color is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Values.MainTextValue.ShortText">
            <summary>
            Gets and sets the short text value to use.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Values.MainTextValue.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Values.SubscriptTextValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Values.SubscriptTextValue.LongText">
            <summary>
            Gets and sets the short text value to use.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Values.SubscriptTextValue.GetLongText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton">
            <summary>
            View element that can draw a CommandLinkButton.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ExtendedControls.ExtendedToolkit.Values.ImageValue,ExtendedControls.ExtendedToolkit.Values.CommandLinkTextValues,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawButton class.
            </summary>
            <param name="paletteDisabled">Palette source for the disabled state.</param>
            <param name="paletteNormal">Palette source for the normal state.</param>
            <param name="paletteTracking">Palette source for the tracking state.</param>
            <param name="palettePressed">Palette source for the pressed state.</param>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="imageValue"></param>
            <param name="commandLinkTextValues"></param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="useMnemonic">Use mnemonics.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ExtendedControls.ExtendedToolkit.Values.ImageValue,ExtendedControls.ExtendedToolkit.Values.CommandLinkTextValues,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawButton class.
            </summary>
            <param name="paletteDisabled">Palette source for the disabled state.</param>
            <param name="paletteNormal">Palette source for the normal state.</param>
            <param name="paletteTracking">Palette source for the tracking state.</param>
            <param name="palettePressed">Palette source for the pressed state.</param>
            <param name="paletteCheckedNormal">Palette source for the normal checked state.</param>
            <param name="paletteCheckedTracking">Palette source for the tracking checked state.</param>
            <param name="paletteCheckedPressed">Palette source for the pressed checked state.</param>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="imageValue"></param>
            <param name="commandLinkTextValues"></param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="useMnemonic">Use mnemonics.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.LayoutDocker">
            <summary>
            Gets access to the contained layout docker.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.CurrentPalette">
            <summary>
            Gets access to the currently selected palette.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.ButtonValues">
            <summary>
            Gets and sets the source for button values.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.DrawTabBorder">
            <summary>
            Gets and sets if the border should be drawn as a tab border.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.TabBorderStyle">
            <summary>
            Gets and sets the tab border style of the button.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.Enabled">
            <summary>
            Gets and sets the enabled state of the element.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.Orientation">
            <summary>
            Gets and sets the visual orientation.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.SetOrientation(ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Set the orientation of the two button components.
            </summary>
            <param name="borderBackOrient">Orientation of the button border and background..</param>
            <param name="contentOrient">Orientation of the button contents.</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.UseMnemonic">
            <summary>
            Gets and sets usage of mnemonics.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.Checked">
            <summary>
            Gets and sets the checked state.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.AllowUncheck">
            <summary>
            Gets and sets the allow uncheck state.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.DrawButtonComposition">
            <summary>
            Gets and sets the composition usage of the button.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.TestForFocusCues">
            <summary>
            Gets and sets the use of focus cues for deciding if focus rects are allowed.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.SetPalettes(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Update the source palettes for non-checked drawing.
            </summary>
            <param name="paletteDisabled">Palette source for the disabled state.</param>
            <param name="paletteNormal">Palette source for the normal state.</param>
            <param name="paletteTracking">Palette source for the tracking state.</param>
            <param name="palettePressed">Palette source for the pressed state.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.SetCheckedPalettes(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Update the source palettes for checked state drawing.
            </summary>
            <param name="paletteCheckedNormal">Palette source for the normal checked state.</param>
            <param name="paletteCheckedTracking">Palette source for the tracking checked state.</param>
            <param name="paletteCheckedPressed">Palette source for the pressed checked state.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Evaluate the need for drawing transparent areas.
            </summary>
            <param name="context">Evaluation context.</param>
            <returns>True if transparent areas exist; otherwise false.</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.Render(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.ViewDraw.ViewDrawCommandLinkButton.CheckPaletteState(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Check that the palette and state are correct.
            </summary>
            <param name="context">Reference to the view context.</param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageCollection">
            <summary>
            Summary description for PanelCollection.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageCollection.#ctor(ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard)">
            <summary>
            Constructor requires the  wizard that owns this collection
            </summary>
            <param name="parent">Wizard</param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageCollection.Parent">
            <summary>
            Returns the wizard that owns this collection
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageCollection.Item(System.Int32)">
            <summary>
            Finds the Page in the collection
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageCollection.Add(ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage)">
            <summary>
            Adds a WizardPage into the Collection
            </summary>
            <param name="value">The page to add</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageCollection.AddRange(ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage[])">
            <summary>
            Adds an array of pages into the collection. Used by the Studio Designer generated coed
            </summary>
            <param name="pages">Array of pages to add</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageCollection.IndexOf(ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage)">
            <summary>
            Finds the position of the page in the colleciton
            </summary>
            <param name="value">Page to find position of</param>
            <returns>Index of Page in collection</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageCollection.Insert(System.Int32,ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage)">
            <summary>
            Adds a new page at a particular position in the Collection
            </summary>
            <param name="index">Position</param>
            <param name="value">Page to be added</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageCollection.Remove(ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage)">
            <summary>
            Removes the given page from the collection
            </summary>
            <param name="value">Page to remove</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageCollection.Contains(ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage)">
            <summary>
            Detects if a given Page is in the Collection
            </summary>
            <param name="value">Page to find</param>
            <returns></returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Propgate when a external designer modifies the pages
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Propogates when external designers remove items from page
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageEventHandler">
            <summary>
            Delegate definition for handling NextPageEvents
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageEventArgs">
            <summary>
            Arguments passed to an application when Page is closed in a wizard. The Next page to be displayed 
            can be changed, by the application, by setting the NextPage to a wizardPage which is part of the 
            wizard that generated this event.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageEventArgs.#ctor(System.Int32,ExtendedControls.ExtendedToolkit.Wizard.Classes.PageCollection)">
            <summary>
            Constructs a new event
            </summary>
            <param name="index">The index of the next page in the collection</param>
            <param name="pages">Pages in the wizard that are acceptable to be </param>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageEventArgs.Page">
            <summary>
            Gets/Sets the wizard page that will be displayed next. If you set this it must be to a wizardPage from the wizard.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Classes.PageEventArgs.PageIndex">
            <summary>
            Gets the index of the page 
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardDesigner">
            <summary>
            Summary description for WizardDesigner.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardDesigner.DrawGrid">
            <summary>
            Prevents the grid from being drawn on the Wizard
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardDesigner.CanParent(System.Windows.Forms.Control)">
            <summary>
            Simple way to ensure <see cref="T:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage"/>s only contained here
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage">
            <summary>
            
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.CloseFromBack">
            <summary>
            Event called before this page is closed when the back button is pressed. If you don't want to show pageIndex -1 then
            set page to be the new page that you wish to show
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.CloseFromNext">
            <summary>
            Event called before this page is closed when the next button is pressed. If you don't want to show pageIndex -1 then
            set page to be the new page that you wish to show 
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.ShowFromBack">
            <summary>
            Event called after this page is shown when the back button is pressed.
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.ShowFromNext">
            <summary>
            Event called after this page is shown when the next button is pressed. 
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.OnCloseFromBack(ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard)">
            <summary>
            Fires the CloseFromBack Event
            </summary>
            <param name="wiz">Wizard to pass into the sender argument</param>
            <returns>Index of Page that the event handlers would like to see next</returns>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.OnCloseFromNext(ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard)">
            <summary>
            Fires the CloseFromNextEvent
            </summary>
            <param name="wiz">Sender</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.OnShowFromBack(ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard)">
            <summary>
            Fires the showFromBack event
            </summary>
            <param name="wiz">sender</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.OnShowFromNext(ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard)">
            <summary>
            Fires the showFromNext event
            </summary>
            <param name="wiz">Sender</param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.FocusFirstTabIndex">
            <summary>
            Set the focus to the contained control with a lowest tabIndex
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPageDesigner">
            <summary>
            Summary description for WizardPageDesigner.
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard">
            <summary>
            A wizard is the control added to a form to provide a step by step functionality.
            It contains <see cref="T:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage"/>s in the <see cref="P:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.Pages"/> collection, which
            are containers for other controls. Only one wizard page is shown at a time in the client
            are of the wizard.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.#ctor">
            <summary>
            Wizard control with designer support
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.Pages">
            <summary>
            Returns the collection of Pages in the wizard
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.PageIndex">
            <summary>
            Gets/Sets the activePage in the wizard
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.Page">
            <summary>
            Alternative way of getting/Setiing  the current page by using wizardPage objects
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.NextEnabled">
            <summary>
            Gets/Sets the enabled state of the Next button. 
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.BackEnabled">
            <summary>
            Gets/Sets the enabled state of the back button. 
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.CancelEnabled">
            <summary>
            Gets/Sets the enabled state of the cancel button. 
            </summary>
        </member>
        <member name="E:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.CloseFromCancel">
            <summary>
            Called when the cancel button is pressed, before the form is closed. Set e.Cancel to true if 
            you do not wish the cancel to close the wizard.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.Next">
            <summary>
            Closes the current page after a <see cref="E:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.CloseFromNext"/>, then moves to 
            the Next page and calls <see cref="E:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.ShowFromNext"/>
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.NextTo(ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage)">
            <summary>
            Moves to the page given and calls <see cref="E:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.ShowFromNext"/>
            </summary>
            <remarks>Does NOT call <see cref="E:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.CloseFromNext"/> on the current page</remarks>
            <param name="page"></param>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.Back">
            <summary>
            Closes the current page after a <see cref="E:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.CloseFromBack"/>, then moves to 
            the previous page and calls <see cref="E:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.ShowFromBack"/>
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.KryptonWizard.BackTo(ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage)">
            <summary>
            Moves to the page given and calls <see cref="E:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.ShowFromBack"/>
            </summary>
            <remarks>Does NOT call <see cref="E:ExtendedControls.ExtendedToolkit.Wizard.Classes.WizardPage.CloseFromBack"/> on the current page</remarks>
            <param name="page"></param>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Wizard.Controls.Header">
            <summary>
            Summary description for WizardHeader.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Wizard.Controls.Header.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.Header.#ctor">
            <summary>
            Constructor for Header
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.Header.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.Header.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Controls.Header.Title">
            <summary>
            Get/Set the title for the wizard page
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Controls.Header.Description">
            <summary>
            Gets/Sets the
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Controls.Header.Image">
            <summary>
            Gets/Sets the Icon
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Wizard.Controls.InfoContainer">
            <summary>
            Summary description for UserControl1.
            </summary>
        </member>
        <member name="F:ExtendedControls.ExtendedToolkit.Wizard.Controls.InfoContainer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.InfoContainer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.InfoContainer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.InfoContainer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Controls.InfoContainer.PageTitle">
            <summary>
            Get/Set the title for the info page
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Controls.InfoContainer.Image">
            <summary>
            Gets/Sets the Icon
            </summary>
        </member>
        <member name="T:ExtendedControls.ExtendedToolkit.Wizard.Controls.InfoPage">
            <summary>
            An inherited <see cref="T:ExtendedControls.ExtendedToolkit.Wizard.Controls.InfoContainer"/> that contains a <see cref="!:Label"/> 
            with the description of the page.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.InfoPage.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.InfoPage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ExtendedControls.ExtendedToolkit.Wizard.Controls.InfoPage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:ExtendedControls.ExtendedToolkit.Wizard.Controls.InfoPage.PageText">
            <summary>
            Gets/Sets the text on the info page
            </summary>
        </member>
        <member name="P:ExtendedControls.Interfaces.ColourSchemes.IColourScheme.Colours">
            <summary>
            Gets the colours.
            </summary>
            <value>
            The colours.
            </value>
        </member>
        <member name="P:ExtendedControls.Interfaces.ColourSchemes.IColourScheme.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:ExtendedControls.Interfaces.Colours.IExternalColourEditorInformationProvider">
            <summary>
            Externally provide additional functions.
            </summary>
        </member>
        <member name="P:ExtendedControls.Interfaces.Colours.IExternalColourEditorInformationProvider.ColourSchemes">
            <summary>
            Gets the color schemes.
            </summary>
            <value>The color schemes. Return NULL or empty to disable 
            color schemes.</value>
        </member>
        <member name="P:ExtendedControls.Interfaces.Colours.IExternalColourEditorInformationProvider.AllowNoColourSelectable">
            <summary>
            Gets a value indicating whether [allow no color selectable].
            </summary>
            <value>
            	<c>true</c> if [allow no color selectable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ExtendedControls.Interfaces.Colours.IExternalColourEditorInformationProvider.FormatDisplayText(System.Drawing.Color,System.String@)">
            <summary>
            Formats the display text.
            Allows externally to configure what to display.
            Simply do nothing when you want the default behavior.
            </summary>
            <param name="colour">The color.</param>
            <param name="displayText">The display text.</param>
        </member>
        <member name="M:ExtendedControls.Interfaces.Colours.IExternalColourEditorInformationProvider.AdjustColourSettingLookupOrder(System.Collections.Generic.IList{ExtendedControls.Enumerations.ColourLookupElement})">
            <summary>
            Gives implementors of this interface a chance to adjust the
            order where colors are looked up when setting the initial
            color for the color editor control/form.
            </summary>
            <param name="lookupOrder">The lookup order.</param>
        </member>
        <member name="M:ExtendedControls.Interfaces.Colours.IExternalColourEditorInformationProvider.SavePerUserPerWorkstationValue(System.String,System.String)">
            <summary>
            Saves a per user per workstation value.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ExtendedControls.Interfaces.Colours.IExternalColourEditorInformationProvider.RestorePerUserPerWorkstationValue(System.String,System.String)">
            <summary>
            Restores a per user per workstation value.
            </summary>
            <param name="name">The name.</param>
            <param name="fallBackTo">The fall back to.</param>
            <returns></returns>
        </member>
        <member name="T:ExtendedControls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.active_search">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Arrow_Down">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Arrow_Up">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.arrowControl_Image">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.ButtonColorImageSmall">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.ButtonNoColor">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Check">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Class_16x">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.close">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.collapse">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.collapsed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.collapsible">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.color">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.colorbarIndicators">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.ColourButton">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.ColumnHeader_Filtered">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.ColumnHeader_FilteredAndOrderedASC">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.ColumnHeader_FilteredAndOrderedDESC">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.ColumnHeader_OrderedASC">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.ColumnHeader_OrderedDESC">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.ColumnHeader_SavedFilters">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.ColumnHeader_UnFiltered">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Critical">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Critical_128_x_128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Critical_32_x_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Cube_16x">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.DefaultIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.download">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.DropDown2003">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.DropDown2007">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.error">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Error_Report_128_x_128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Error_Report_48_x_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Event_16x">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.expended">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Export_To_Document">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.eyedropper">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Fail">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.GridErrorIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.GridRowIndicators">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.GridSortOrder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Grip">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Grip2003">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Grip2007">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Hand">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Hand_128_x_128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Hand_32_x_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.help">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.help2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.if_Symbol_Delete_49260">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.if_Symbol_Error_49261">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.if_Symbol_Exclamation_49262">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.if_Symbol_Help_49263">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.if_Symbol_Information_49264">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.if_Symbol_Restricted_49266">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.if_Symbol_Stop_49267">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.inactive_search">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.information">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Information_128_x_128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Information_2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Information_32_x_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Interface_16x">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.maximize">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.MenuStrip_OrderASCbool">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.MenuStrip_OrderASCnum">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.MenuStrip_OrderASCtxt">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.MenuStrip_OrderDESCbool">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.MenuStrip_OrderDESCnum">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.MenuStrip_OrderDESCtxt">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.MenuStrip_ResizeGrip">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.minimize">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Namespace_16x">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Ok">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Ok_128_x_128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Ok_32_x_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Ok1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Open_File_16_x_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.palette">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.palette1">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.popupcontainerbuttons">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.progress_bar">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Property_16x">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Question">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Question_128_x_128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Question_32_x_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.restore">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.SearchToolBar_ButtonCaseSensitive">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.SearchToolBar_ButtonClose">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.SearchToolBar_ButtonFromBegin">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.SearchToolBar_ButtonSearch">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.SearchToolBar_ButtonWholeWord">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.sign_warning">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.SparkleChecked">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.SparkleContextMenuSub">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.SparkleDropDownButton">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.SparkleDropDownOutlineButton">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.SparkleDropUpButton">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.SparkleGalleryDropButton">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.SparkleGrayChecked">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.SparkleGrayIndeterminate">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.SparkleIndeterminate">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Stop">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Stop_128_x_128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Stop_32_x_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Symbol_Error">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.text_bold">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.text_italic">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.text_lowercase">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.text_strikethrough">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.text_underline">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.ttf_2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.ttf_2_16_x_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Warning">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Warning_128_x_128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Warning_2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ExtendedControls.Properties.Resources.Warning_32_x_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="M:Base.Code.Security.SecurityMethods.CreatePassword(System.Int32)">
            <summary>
            Creates the password. Code from: https://stackoverflow.com/questions/54991/generating-random-passwords
            </summary>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="T:System.Collections.Generic.StrongListWrapper`1">
            <summary>
            Takes a collection that supports an <see cref="T:System.Collections.IList"/> and makes it strongly typed like <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
            <typeparam name="T">Type to cast object to from the provided <see cref="T:System.Collections.IList"/>.</typeparam>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.#ctor(System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.StrongListWrapper`1"/> class.
            </summary>
            <param name="baseList">The base list.</param>
        </member>
        <member name="P:System.Collections.Generic.StrongListWrapper`1.Core">
            <summary>
            Gets the core list.
            </summary>
            <value>The core list.</value>
        </member>
        <member name="P:System.Collections.Generic.StrongListWrapper`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="P:System.Collections.Generic.StrongListWrapper`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:System.Collections.Generic.StrongListWrapper`1.Item(System.Int32)">
            <summary>
            Gets or sets the strongly typed object at the specified index.
            </summary>
            <value>The index of the list item to get.</value>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.AddRange(`0[])">
            <summary>
            Adds the range.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            -or-
            Type T cannot be cast automatically to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="T:System.Collections.Generic.StrongListWrapper`1.StrongListWrapperEnumerator`1">
            <summary>
            Enumerator class for the <see cref="T:System.Collections.Generic.StrongListWrapper`1"/>.
            </summary>
            <typeparam name="ET">Type to cast object to from the provided <see cref="T:System.Collections.IEnumerator"/>.</typeparam>
        </member>
        <member name="P:System.Collections.Generic.StrongListWrapper`1.StrongListWrapperEnumerator`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <value></value>
            <returns>
            The element in the collection at the current position of the enumerator.
            </returns>
        </member>
        <member name="P:System.Collections.Generic.StrongListWrapper`1.StrongListWrapperEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <value></value>
            <returns>
            The element in the collection at the current position of the enumerator.
            </returns>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.StrongListWrapperEnumerator`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.StrongListWrapperEnumerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:System.Collections.Generic.StrongListWrapper`1.StrongListWrapperEnumerator`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="T:System.TimeSpan2Converter">
            <summary>
            Type converter for <see cref="T:System.TimeSpan2"/> objects.
            </summary>
        </member>
        <member name="M:System.TimeSpan2Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:System.TimeSpan2Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:System.TimeSpan2Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:System.TimeSpan2Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="destinationType"/> parameter is null.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:System.TimeSpan2Converter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter"/> is associated with, using the specified context, given a set of property values for the object.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary"/> of new property values.</param>
            <returns>
            An <see cref="T:System.Object"/> representing the given <see cref="T:System.Collections.IDictionary"/>, or null if the object cannot be created. This method always returns null.
            </returns>
        </member>
        <member name="M:System.TimeSpan2Converter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"/> to create a new value, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"/> to create a new value; otherwise, false.
            </returns>
        </member>
        <member name="M:System.TimeSpan2Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object"/> that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that is used as a filter.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> with the properties that are exposed for this data type, or null if there are no properties.
            </returns>
        </member>
        <member name="M:System.TimeSpan2Converter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)"/> should be called to find the properties of this object; otherwise, false.
            </returns>
        </member>
        <member name="T:System.TimeSpan2">
            <summary>
            Represents a time interval.
            </summary>
            <remarks>
            A TimeSpan2 object represents a time interval (duration of time or elapsed time) that is measured as a positive or negative number of days, hours, minutes, seconds, and fractions of a second. The TimeSpan2 structure can also be used to represent the time of day, but only if the time is unrelated to a particular date.
            </remarks>
        </member>
        <member name="F:System.TimeSpan2.MaxValue">
            <summary>Represents the maximum <see cref="T:System.TimeSpan2"/> value. This field is read-only.</summary>
        </member>
        <member name="F:System.TimeSpan2.MinValue">
            <summary>Represents the minimum <see cref="T:System.TimeSpan2"/> value. This field is read-only.</summary>
        </member>
        <member name="F:System.TimeSpan2.Zero">
            <summary>Represents the zero <see cref="T:System.TimeSpan2"/> value. This field is read-only.</summary>
        </member>
        <member name="F:System.TimeSpan2.TicksPerDay">
            <summary>Represents the number of ticks in 1 day. This field is constant.</summary>
        </member>
        <member name="F:System.TimeSpan2.TicksPerHour">
            <summary>Represents the number of ticks in 1 hour. This field is constant.</summary>
        </member>
        <member name="F:System.TimeSpan2.TicksPerMillisecond">
            <summary>Represents the number of ticks in 1 millisecond. This field is constant.</summary>
        </member>
        <member name="F:System.TimeSpan2.TicksPerMinute">
            <summary>Represents the number of ticks in 1 minute. This field is constant.</summary>
        </member>
        <member name="F:System.TimeSpan2.TicksPerSecond">
            <summary>Represents the number of ticks in 1 second. This field is constant.</summary>
        </member>
        <member name="M:System.TimeSpan2.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new <see cref="T:System.TimeSpan2"/> with the specified <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="span">The initializing <see cref="T:System.TimeSpan"/>.</param>
        </member>
        <member name="M:System.TimeSpan2.#ctor(System.Int64)">
            <summary>
            Initializes a new <see cref="T:System.TimeSpan2"/> with the specified number of ticks.
            </summary>
            <param name="ticks">A time period expressed in 100-nanosecond units.</param>
        </member>
        <member name="M:System.TimeSpan2.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:System.TimeSpan2"/> with the specified number of hours, minutes, and seconds.
            </summary>
            <param name="hours">Number of hours.</param>
            <param name="minutes">Number of minutes.</param>
            <param name="seconds">Number of seconds.</param>
        </member>
        <member name="M:System.TimeSpan2.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:System.TimeSpan2"/> with the specified number of days, hours, minutes, and seconds.
            </summary>
            <param name="days">Number of days.</param>
            <param name="hours">Number of hours.</param>
            <param name="minutes">Number of minutes.</param>
            <param name="seconds">Number of seconds.</param>
        </member>
        <member name="M:System.TimeSpan2.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:System.TimeSpan2"/> with the specified number of days, hours, minutes, seconds, and milliseconds.
            </summary>
            <param name="days">Number of days.</param>
            <param name="hours">Number of hours.</param>
            <param name="minutes">Number of minutes.</param>
            <param name="seconds">Number of seconds.</param>
            <param name="milliseconds">Number of milliseconds</param>
        </member>
        <member name="M:System.TimeSpan2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:System.TimeSpan2"/> struct.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="P:System.TimeSpan2.Days">
            <summary>
            Gets the days component of the time interval represented by the current <see cref="T:System.TimeSpan2"/> structure.
            </summary>
            <value>The day component of this instance. The return value can be positive or negative.</value>
        </member>
        <member name="P:System.TimeSpan2.Hours">
            <summary>
            Gets the hours component of the time interval represented by the current <see cref="T:System.TimeSpan2"/> structure.
            </summary>
            <value>The hours component of this instance. The return value ranges from -23 through 23.</value>
        </member>
        <member name="P:System.TimeSpan2.IsZero">
            <summary>
            Gets a value indicating whether this instance is zero.
            </summary>
            <value><c>true</c> if this instance is zero; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:System.TimeSpan2.Milliseconds">
            <summary>
            Gets the milliseconds component of the time interval represented by the current <see cref="T:System.TimeSpan2"/> structure.
            </summary>
            <value>The milliseconds component of this instance. The return value ranges from -999 through 999.</value>
        </member>
        <member name="P:System.TimeSpan2.Minutes">
            <summary>
            Gets the minutes component of the time interval represented by the current <see cref="T:System.TimeSpan2"/> structure.
            </summary>
            <value>The minutes component of this instance. The return value ranges from -59 through 59.</value>
        </member>
        <member name="P:System.TimeSpan2.Seconds">
            <summary>
            Gets the seconds component of the time interval represented by the current <see cref="T:System.TimeSpan2"/> structure.
            </summary>
            <value>The seconds component of this instance. The return value ranges from -59 through 59.</value>
        </member>
        <member name="P:System.TimeSpan2.Ticks">
            <summary>
            Gets the number of ticks that represent the value of the current <see cref="T:System.TimeSpan2"/> structure.
            </summary>
            <value>The number of ticks contained in this instance.</value>
        </member>
        <member name="P:System.TimeSpan2.TotalDays">
            <summary>
            Gets the value of the current <see cref="T:System.TimeSpan2"/> structure expressed in whole and fractional days.
            </summary>
            <value>The total number of days represented by this instance.</value>
        </member>
        <member name="P:System.TimeSpan2.TotalHours">
            <summary>
            Gets the value of the current <see cref="T:System.TimeSpan2"/> structure expressed in whole and fractional hours.
            </summary>
            <value>The total number of hours represented by this instance.</value>
        </member>
        <member name="P:System.TimeSpan2.TotalMilliseconds">
            <summary>
            Gets the value of the current <see cref="T:System.TimeSpan2"/> structure expressed in whole and fractional milliseconds.
            </summary>
            <value>The total number of milliseconds represented by this instance.</value>
        </member>
        <member name="P:System.TimeSpan2.TotalMinutes">
            <summary>
            Gets the value of the current <see cref="T:System.TimeSpan2"/> structure expressed in whole and fractional minutes.
            </summary>
            <value>The total number of minutes represented by this instance.</value>
        </member>
        <member name="P:System.TimeSpan2.TotalSeconds">
            <summary>
            Gets the value of the current <see cref="T:System.TimeSpan2"/> structure expressed in whole and fractional seconds.
            </summary>
            <value>The total number of seconds represented by this instance.</value>
        </member>
        <member name="M:System.TimeSpan2.op_Implicit(System.TimeSpan2)~System.TimeSpan">
            <summary>
            Performs an implicit conversion from <see cref="T:System.TimeSpan2"/> to <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="ts2">The <see cref="T:System.TimeSpan2"/> structure to convert.</param>
            <returns>The <see cref="T:System.TimeSpan"/> equivalent of the converted <see cref="T:System.TimeSpan2"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.op_Implicit(System.TimeSpan)~System.TimeSpan2">
            <summary>
            Performs an implicit conversion from <see cref="T:System.TimeSpan"/> to <see cref="T:System.TimeSpan2"/>.
            </summary>
            <param name="ts">The <see cref="T:System.TimeSpan"/> structure to convert.</param>
            <returns>The <see cref="T:System.TimeSpan2"/> equivalent of the converted <see cref="T:System.TimeSpan"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.op_Inequality(System.TimeSpan2,System.TimeSpan2)">
            <summary>
            Indicates whether two <see cref="T:System.TimeSpan2"/> instances are not equal.
            </summary>
            <param name="t1">A <see cref="T:System.TimeSpan2"/>.</param>
            <param name="t2">A <c>TimeSpan2</c>.</param>
            <returns><c>true</c> if the values of <paramref name="t1"/> and <paramref name="t2"/> are not equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.op_UnaryPlus(System.TimeSpan2)">
            <summary>
            Returns the specified instance of <see cref="T:System.TimeSpan2"/>.
            </summary>
            <param name="t">A <see cref="T:System.TimeSpan2"/>.</param>
            <returns>Returns <paramref name="t"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.op_Addition(System.TimeSpan2,System.TimeSpan2)">
            <summary>
            Adds two specified <see cref="T:System.TimeSpan2"/> instances.
            </summary>
            <param name="t1">A <see cref="T:System.TimeSpan2"/>.</param>
            <param name="t2">A <c>TimeSpan2</c>.</param>
            <returns>A <see cref="T:System.TimeSpan2"/> whose value is the sum of the values of <paramref name="t1"/> and <paramref name="t2"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.op_UnaryNegation(System.TimeSpan2)">
            <summary>
            Returns a <see cref="T:System.TimeSpan2"/> whose value is the negated value of the specified instance.
            </summary>
            <param name="t">A <see cref="T:System.TimeSpan2"/>.</param>
            <returns>A <see cref="T:System.TimeSpan2"/> with the same numeric value as this instance, but the opposite sign.</returns>
        </member>
        <member name="M:System.TimeSpan2.op_Subtraction(System.TimeSpan2,System.TimeSpan2)">
            <summary>
            Subtracts a specified <see cref="T:System.TimeSpan2"/> from another specified <c>TimeSpan2</c>.
            </summary>
            <param name="t1">A <see cref="T:System.TimeSpan2"/>.</param>
            <param name="t2">A <c>TimeSpan2</c>.</param>
            <returns>A <see cref="T:System.TimeSpan2"/> whose value is the result of the value of <paramref name="t1"/> minus the value of <paramref name="t2"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.op_LessThan(System.TimeSpan2,System.TimeSpan2)">
            <summary>
            Indicates whether a specified <see cref="T:System.TimeSpan2"/> is less than another specified <see cref="T:System.TimeSpan2"/>. 
            </summary>
            <param name="t1">A <see cref="T:System.TimeSpan2"/>.</param>
            <param name="t2">A <c>TimeSpan2</c>.</param>
            <returns><c>true</c> if the value of <paramref name="t1"/> is less than the value of <paramref name="t2"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.op_LessThanOrEqual(System.TimeSpan2,System.TimeSpan2)">
            <summary>
            Indicates whether a specified <see cref="T:System.TimeSpan2"/> is less than or equal to another specified <see cref="T:System.TimeSpan2"/>. 
            </summary>
            <param name="t1">A <see cref="T:System.TimeSpan2"/>.</param>
            <param name="t2">A <c>TimeSpan2</c>.</param>
            <returns><c>true</c> if the value of <paramref name="t1"/> is less than or equal to the value of <paramref name="t2"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.op_Equality(System.TimeSpan2,System.TimeSpan2)">
            <summary>
            Indicates whether two <see cref="T:System.TimeSpan2"/> instances are equal.
            </summary>
            <param name="t1">A <see cref="T:System.TimeSpan2"/>.</param>
            <param name="t2">A <c>TimeSpan2</c>.</param>
            <returns><c>true</c> if the values of <paramref name="t1"/> and <paramref name="t2"/> are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.op_GreaterThan(System.TimeSpan2,System.TimeSpan2)">
            <summary>
            Indicates whether a specified <see cref="T:System.TimeSpan2"/> is greater than another specified <see cref="T:System.TimeSpan2"/>. 
            </summary>
            <param name="t1">A <see cref="T:System.TimeSpan2"/>.</param>
            <param name="t2">A <c>TimeSpan2</c>.</param>
            <returns><c>true</c> if the value of <paramref name="t1"/> is greater than the value of <paramref name="t2"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.op_GreaterThanOrEqual(System.TimeSpan2,System.TimeSpan2)">
            <summary>
            Indicates whether a specified <see cref="T:System.TimeSpan2"/> is greater than or equal to another specified <see cref="T:System.TimeSpan2"/>. 
            </summary>
            <param name="t1">A <see cref="T:System.TimeSpan2"/>.</param>
            <param name="t2">A <c>TimeSpan2</c>.</param>
            <returns><c>true</c> if the value of <paramref name="t1"/> is greater than or equal to the value of <paramref name="t2"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.Compare(System.TimeSpan2,System.TimeSpan2)">
            <summary>
            Compares two <see cref="T:System.TimeSpan2"/> values and returns an integer that indicates whether the first value is shorter than, equal to, or longer than the second value.
            </summary>
            <param name="t1">A <see cref="T:System.TimeSpan2"/>.</param>
            <param name="t2">A <c>TimeSpan2</c>.</param>
            <returns>
            <list>
            <listheader><term>Value</term><description>Condition</description></listheader>
            <item><term>-1</term><description><paramref name="t1"/> is shorter than <paramref name="t2"/></description></item>
            <item><term>0</term><description><paramref name="t1"/> is equal to <paramref name="t2"/></description></item>
            <item><term>1</term><description><paramref name="t1"/> is longer than <paramref name="t2"/></description></item>
            </list>
            </returns>
        </member>
        <member name="M:System.TimeSpan2.Equals(System.TimeSpan2,System.TimeSpan2)">
            <summary>
            Indicates whether two <see cref="T:System.TimeSpan2"/> instances are equal.
            </summary>
            <param name="t1">A <see cref="T:System.TimeSpan2"/>.</param>
            <param name="t2">A <c>TimeSpan2</c>.</param>
            <returns><c>true</c> if the values of <paramref name="t1"/> and <paramref name="t2"/> are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.FromDays(System.Double)">
            <summary>
            Returns a <see cref="T:System.TimeSpan2"/> that represents a specified number of days, where the specification is accurate to the nearest millisecond.
            </summary>
            <param name="value">A number of days, accurate to the nearest millisecond.</param>
            <returns>A <see cref="T:System.TimeSpan2"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.FromHours(System.Double)">
            <summary>
            Returns a <see cref="T:System.TimeSpan2"/> that represents a specified number of hours, where the specification is accurate to the nearest millisecond.
            </summary>
            <param name="value">A number of hours, accurate to the nearest millisecond.</param>
            <returns>A <see cref="T:System.TimeSpan2"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.FromMilliseconds(System.Double)">
            <summary>
            Returns a <see cref="T:System.TimeSpan2"/> that represents a specified number of milliseconds.
            </summary>
            <param name="value">A number of milliseconds.</param>
            <returns>A <see cref="T:System.TimeSpan2"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.FromMinutes(System.Double)">
            <summary>
            Returns a <see cref="T:System.TimeSpan2"/> that represents a specified number of minutes, where the specification is accurate to the nearest millisecond.
            </summary>
            <param name="value">A number of minutes, accurate to the nearest millisecond.</param>
            <returns>A <see cref="T:System.TimeSpan2"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.FromSeconds(System.Double)">
            <summary>
            Returns a <see cref="T:System.TimeSpan2"/> that represents a specified number of seconds, where the specification is accurate to the nearest millisecond.
            </summary>
            <param name="value">A number of seconds, accurate to the nearest millisecond.</param>
            <returns>A <see cref="T:System.TimeSpan2"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.FromTicks(System.Int64)">
            <summary>
            Returns a <see cref="T:System.TimeSpan2"/> that represents a specified time, where the specification is in units of ticks.
            </summary>
            <param name="value">A number of ticks that represent a time.</param>
            <returns>A <see cref="T:System.TimeSpan2"/> with a value of <paramref name="value"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.Parse(System.String)">
            <summary>
            Converts the specified string representation of a time span to its <see cref="T:System.TimeSpan2"/> equivalent. 
            </summary>
            <param name="value">A string containing a time span to parse.</param>
            <returns>A <see cref="T:System.TimeSpan2"/> equivalent to the time span contained in <paramref name="value"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <c>null</c>.</exception>
            <exception cref="T:System.FormatException"><paramref name="value"/> does not contain a valid string representation of a time span.</exception>
        </member>
        <member name="M:System.TimeSpan2.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the specified string representation of a time span to its <see cref="T:System.TimeSpan2"/> equivalent using the specified culture-specific format information. 
            </summary>
            <param name="value">A string containing a time span to parse.</param>
            <param name="formatProvider">An object that supplies culture-specific format information about <paramref name="value"/>.</param>
            <returns>A <see cref="T:System.TimeSpan2"/> equivalent to the time span contained in <paramref name="value"/> as specified by <paramref name="formatProvider"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <c>null</c>.</exception>
            <exception cref="T:System.FormatException"><paramref name="value"/> does not contain a valid string representation of a time span.</exception>
        </member>
        <member name="M:System.TimeSpan2.ParseExact(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a time interval to its <see cref="T:System.TimeSpan2"/> equivalent by using the specified array of format strings and culture-specific format information. The format of the string representation must match the specified format exactly.
            </summary>
            <param name="input">A string that specifies the time interval to convert.</param>
            <param name="format">A standard or custom format string that defines the required format of <paramref name="input"/>.</param>
            <param name="formatProvider">An object that provides culture-specific formatting information.</param>
            <returns>A time interval that corresponds to <paramref name="input"/>, as specified by <paramref name="format"/> and <paramref name="formatProvider"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.ParseExact(System.String,System.String[],System.IFormatProvider)">
            <summary>
            Converts the string representation of a time interval to its <see cref="T:System.TimeSpan2"/> equivalent by using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.
            </summary>
            <param name="input">A string that specifies the time interval to convert.</param>
            <param name="formats">A array of standard or custom format strings that defines the required format of <paramref name="input"/>.</param>
            <param name="formatProvider">An object that provides culture-specific formatting information.</param>
            <returns>A time interval that corresponds to <paramref name="input"/>, as specified by <paramref name="formats"/> and <paramref name="formatProvider"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.TryParse(System.String,System.TimeSpan2@)">
            <summary>
            Converts the specified string representation of a date and time to its <see cref="T:System.TimeSpan2"/> equivalent and returns a value that indicates whether the conversion succeeded. 
            </summary>
            <param name="s">A string containing a time span to convert.</param>
            <param name="result">When this method returns, contains the <see cref="T:System.TimeSpan2"/> value equivalent to the time span contained in <paramref name="s"/>, if the conversion succeeded, or <c>TimeSpan.Zero</c> if the conversion failed. The conversion fails if the <paramref name="s"/> parameter is <c>null</c>, is an empty string (""), or does not contain a valid string representation of a time span. This parameter is passed uninitialized.</param>
            <returns><c>true</c> if the <paramref name="s"/> parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.TryParse(System.String,System.IFormatProvider,System.TimeSpan2@)">
            <summary>
            Converts the specified string representation of a date and time to its <see cref="T:System.TimeSpan2"/> equivalent and returns a value that indicates whether the conversion succeeded. 
            </summary>
            <param name="s">A string containing a time span to convert.</param>
            <param name="formatProvider">An object that supplies culture-specific format information about <paramref name="s"/>.</param>
            <param name="result">When this method returns, contains the <see cref="T:System.TimeSpan2"/> value equivalent to the time span contained in <paramref name="s"/>, if the conversion succeeded, or <c>TimeSpan.Zero</c> if the conversion failed. The conversion fails if the <paramref name="s"/> parameter is <c>null</c>, is an empty string (""), or does not contain a valid string representation of a time span. This parameter is passed uninitialized.</param>
            <returns><c>true</c> if the <paramref name="s"/> parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan2@)">
            <summary>
            Converts the string representation of a time interval to its <see cref="T:System.TimeSpan2"/> equivalent by using the specified format and culture-specific format information, and returns a value that indicates whether the conversion succeeded. The format of the string representation must match the specified format exactly.
            </summary>
            <param name="input">A string that specifies the time interval to convert.</param>
            <param name="format">A standard or custom format string that defines the required format of <paramref name="input"/>.</param>
            <param name="formatProvider">An object that supplies culture-specific format information about <paramref name="input"/>.</param>
            <param name="result">When this method returns, contains an object that represents the time interval specified by <paramref name="input"/>, or <see cref="F:System.TimeSpan.Zero"/> if the conversion failed. This parameter is passed uninitialized.</param>
            <returns><c>true</c> if <paramref name="input"/> was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan2@)">
            <summary>
            Converts the string representation of a time interval to its <see cref="T:System.TimeSpan2"/> equivalent by using the specified formats and culture-specific format information, and returns a value that indicates whether the conversion succeeded. The format of the string representation must match one of the specified formats exactly.
            </summary>
            <param name="input">A string that specifies the time interval to convert.</param>
            <param name="formats">A array of standard or custom format strings that define the acceptable formats of <paramref name="input"/>.</param>
            <param name="formatProvider">An object that supplies culture-specific format information about <paramref name="input"/>.</param>
            <param name="result">When this method returns, contains an object that represents the time interval specified by <paramref name="input"/>, or <see cref="F:System.TimeSpan.Zero"/> if the conversion failed. This parameter is passed uninitialized.</param>
            <returns><c>true</c> if <paramref name="input"/> was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.Add(System.TimeSpan2)">
            <summary>
            Adds the specified <see cref="T:System.TimeSpan2"/> to this instance.
            </summary>
            <param name="ts">A <see cref="T:System.TimeSpan2"/>.</param>
            <returns>A <see cref="T:System.TimeSpan2"/> that represents the value of this instance plus the value of <paramref name="ts"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an integer that indicates whether this [instance] is shorter than, equal to, or longer than the specified object. 
            </summary>
            <param name="obj">An object to compare, or <c>null</c>.</param>
            <returns>A signed number indicating the relative values of this instance and <paramref name="obj"/>.
            <list>
            <listheader><term>Value</term><description>Condition</description></listheader>
            <item><term>-1</term><description>This instance is shorter than <paramref name="obj"/></description></item>
            <item><term>0</term><description>This instance is equal to <paramref name="obj"/></description></item>
            <item><term>1</term><description>This instance is longer than <paramref name="obj"/></description></item>
            </list>
            </returns>
        </member>
        <member name="M:System.TimeSpan2.CompareTo(System.TimeSpan2)">
            <summary>
            Compares this instance to a specified <see cref="T:System.TimeSpan2"/> object and returns an integer that indicates whether this [instance] is shorter than, equal to, or longer than the <see cref="T:System.TimeSpan2"/> object.
            </summary>
            <param name="other">A <see cref="T:System.TimeSpan2"/> object to compare to this instance.</param>
            <returns>A signed number indicating the relative values of this instance and <paramref name="other"/>.
            <list>
            <listheader><term>Value</term><description>Condition</description></listheader>
            <item><term>-1</term><description>This instance is shorter than <paramref name="other"/></description></item>
            <item><term>0</term><description>This instance is equal to <paramref name="other"/></description></item>
            <item><term>1</term><description>This instance is longer than <paramref name="other"/></description></item>
            </list>
            </returns>
        </member>
        <member name="M:System.TimeSpan2.CompareTo(System.TimeSpan)">
            <summary>
            Compares this instance to a specified <see cref="T:System.TimeSpan"/> object and returns an integer that indicates whether this [instance] is shorter than, equal to, or longer than the <see cref="T:System.TimeSpan2"/> object.
            </summary>
            <param name="other">A <see cref="T:System.TimeSpan"/> object to compare to this instance.</param>
            <returns>A signed number indicating the relative values of this instance and <paramref name="other"/>.
            <list>
            <listheader><term>Value</term><description>Condition</description></listheader>
            <item><term>-1</term><description>This instance is shorter than <paramref name="other"/></description></item>
            <item><term>0</term><description>This instance is equal to <paramref name="other"/></description></item>
            <item><term>1</term><description>This instance is longer than <paramref name="other"/></description></item>
            </list>
            </returns>
        </member>
        <member name="M:System.TimeSpan2.Duration">
            <summary>
            Returns a new <see cref="T:System.TimeSpan2"/> object whose value is the absolute value of the current <see cref="T:System.TimeSpan2"/> object.
            </summary>
            <returns>A new <see cref="T:System.TimeSpan2"/> object whose value is the absolute value of the current <see cref="T:System.TimeSpan2"/> object.</returns>
        </member>
        <member name="M:System.TimeSpan2.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the <paramref name="obj"/> parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.Equals(System.String)">
            <summary>
            Indicates whether the current object is equal to a specified <see cref="T:System.String"/>.
            </summary>
            <param name="str">A <see cref="T:System.String"/> to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the <paramref name="str"/> parameter once converted to a <see cref="T:System.TimeSpan2"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.Equals(System.TimeSpan2)">
            <summary>
            Indicates whether the current object is equal to a specified <see cref="T:System.TimeSpan2"/> object.
            </summary>
            <param name="other">A <see cref="T:System.TimeSpan2"/> object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.Equals(System.TimeSpan)">
            <summary>
            Indicates whether the current object is equal to a specified <see cref="T:System.TimeSpan"/> object.
            </summary>
            <param name="other">A <see cref="T:System.TimeSpan"/> object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:System.TimeSpan2.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:System.TimeSpan2.Negate">
            <summary>
            Returns a <see cref="T:System.TimeSpan2"/> whose value is the negated value of this instance.
            </summary>
            <returns>The same numeric value as this instance, but with the opposite sign.</returns>
        </member>
        <member name="M:System.TimeSpan2.Subtract(System.TimeSpan2)">
            <summary>
            Subtracts the specified <see cref="T:System.TimeSpan2"/> from this instance.
            </summary>
            <param name="ts">A <see cref="T:System.TimeSpan2"/>.</param>
            <returns>A <see cref="T:System.TimeSpan2"/> whose value is the result of the value of this instance minus the value of <paramref name="ts"/>.</returns>
        </member>
        <member name="M:System.TimeSpan2.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns string representation of the value of this instance using the specified format.
            </summary>
            <param name="format">A TimeSpan format string.</param>
            <param name="formatProvider">An <see cref="T:System.IFormatProvider"/> object that supplies format information about the current instance.</param>
            <returns>A string representation of value of the current <see cref="T:System.TimeSpan2"/> object as specified by format.</returns>
        </member>
        <member name="M:System.TimeSpan2.ToString(System.String)">
            <summary>
            Returns string representation of the value of this instance using the specified format.
            </summary>
            <param name="format">A TimeSpan format string.</param>
            <returns>A string representation of value of the current <see cref="T:System.TimeSpan2"/> object as specified by format.</returns>
            <remarks>
            <para>The following table lists the standard TimeSpan format patterns.</para>
            <list type="table">
            <listheader><term>Format specifier</term><description>Name</description><description>Description</description><description>Examples</description></listheader>
            <item><term>"c"</term>
            	<description>Constant (invariant) format</description>
            	<description>This specifier is not culture-sensitive. It takes the form <code>[-][d’.’]hh’:’mm’:’ss[‘.’fffffff]</code>.</description>
            	<description></description>
            </item>
            <item><term>"f"</term>
            	<description>General word format</description>
            	<description></description>
            	<description></description>
            </item>
            <item><term>"g"</term>
            	<description>General short format</description>
            	<description>This specifier outputs only what is needed. It is culture-sensitive and takes the form <code>[-][d’:’]h’:’mm’:’ss[.FFFFFFF]</code>.</description>
            	<description></description>
            </item>
            <item><term>"G"</term>
            	<description>General long format</description>
            	<description>This specifier always outputs days and seven fractional digits. It is culture-sensitive and takes the form <code>[-]d’:’hh’:’mm’:’ss.fffffff</code>.</description>
            	<description></description>
            </item>
            <item><term>"j"</term>
            	<description>JIRA duration format</description>
            	<description>This specifier outputs days, hours, minutes and seconds in the style defined by JIRA. It takes the form <code>[w'w'] [d'd'] [h'h'] [m'm'] [s's']</code>.</description>
            	<description></description>
            </item>
            <item><term>"x"</term>
            	<description>ISO 8601 format for time intervals</description>
            	<description>This specifier outputs days, hours, minutes, seconds and milliseconds in the style defined by ISO 8601. It takes the form <code>'P'[d'D']['T'[h'H'][m'M'][p3'S']]</code>.</description>
            	<description></description>
            </item>
            </list>
            <para>The following table lists the standard TimeSpan format patterns.</para>
            <list type="table">
            <listheader><term>Format specifier</term><description>Description</description><description>Examples</description></listheader>
            <item><term>"d", "%d"</term>
            	<description>The number of whole days in the time interval.</description>
            	<description></description>
            </item>
            <item><term>"dd"-"dddddddd"</term>
            	<description>The number of whole days in the time interval, padded with leading zeros as needed.</description>
            	<description></description>
            </item>
            <item><term>"h", "%h"</term>
            	<description>The number of whole hours in the time interval that are not counted as part of days. Single-digit hours do not have a leading zero.</description>
            	<description></description>
            </item>
            <item><term>"hh"</term>
            	<description>The number of whole hours in the time interval that are not counted as part of days. Single-digit hours have a leading zero.</description>
            	<description></description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:System.TimeSpan2.ToString">
            <summary>
            Returns the string representation of the value of this instance.
            </summary>
            <returns>
            A string that represents the value of this instance. The return value is of the form: 
            <para>[-][d.]hh:mm:ss[.fffffff]</para>
            </returns>
        </member>
        <member name="T:System.Globalization.TimeSpanPatternType">
            <summary>
            Type of pattern to extract.
            </summary>
        </member>
        <member name="F:System.Globalization.TimeSpanPatternType.Formatting">
            <summary>Pattern used for formatting output.</summary>
        </member>
        <member name="F:System.Globalization.TimeSpanPatternType.Parsing">
            <summary>Pattern used for parsing input string.</summary>
        </member>
        <member name="T:System.Globalization.TimeSpan2FormatInfo">
            <summary>
            Defines how <see cref="T:System.TimeSpan"/> values are formatted and displayed, depending on the culture.
            </summary>
        </member>
        <member name="M:System.Globalization.TimeSpan2FormatInfo.#ctor">
            <summary>
            Initializes a new writable instance of the <see cref="T:System.Globalization.TimeSpan2FormatInfo"/> class that is culture-independent (invariant).
            </summary>
        </member>
        <member name="M:System.Globalization.TimeSpan2FormatInfo.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Globalization.TimeSpan2FormatInfo"/> class that is associated with the supplied culture.
            </summary>
            <param name="culture">The culture.</param>
        </member>
        <member name="P:System.Globalization.TimeSpan2FormatInfo.CurrentInfo">
            <summary>
            Gets a read-only <see cref="T:System.Globalization.TimeSpan2FormatInfo"/> object that formats values based on the current culture.
            </summary>
            <value>A read-only <see cref="T:System.Globalization.TimeSpan2FormatInfo"/> object based on the <see cref="T:System.Globalization.CultureInfo"/> object for the current thread.</value>
        </member>
        <member name="P:System.Globalization.TimeSpan2FormatInfo.DefaultPattern">
            <summary>
            Gets the default pattern.
            </summary>
            <value>The default pattern.</value>
        </member>
        <member name="P:System.Globalization.TimeSpan2FormatInfo.LongPattern">
            <summary>
            Gets or sets the long pattern.
            </summary>
            <value>The long pattern.</value>
        </member>
        <member name="P:System.Globalization.TimeSpan2FormatInfo.ShortPattern">
            <summary>
            Gets or sets the short pattern.
            </summary>
            <value>The short pattern.</value>
        </member>
        <member name="P:System.Globalization.TimeSpan2FormatInfo.TimeSpanZeroDisplay">
            <summary>
            Gets or sets the string to display the representing <c>TimeSpan.Zero</c>.
            </summary>
        </member>
        <member name="P:System.Globalization.TimeSpan2FormatInfo.WordPatternIgnoreCase">
            <summary>
            Gets a value indicating whether to ignore case when parsing word formatted time spans. Pulls value, if available, from localized resources.
            </summary>
        </member>
        <member name="M:System.Globalization.TimeSpan2FormatInfo.GetInstance(System.IFormatProvider)">
            <summary>
            Returns the <see cref="T:System.Globalization.TimeSpan2FormatInfo"/> associated with the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">The <see cref="T:System.IFormatProvider"/> that gets the <see cref="T:System.Globalization.TimeSpan2FormatInfo"/>. -or- <c>null</c> reference (Nothing in Visual Basic) to get <see cref="P:System.Globalization.TimeSpan2FormatInfo.CurrentInfo"/>.</param>
            <returns>A <see cref="T:System.Globalization.TimeSpan2FormatInfo"/> associated with the specified <see cref="T:System.IFormatProvider"/>.</returns>
        </member>
        <member name="M:System.Globalization.TimeSpan2FormatInfo.Format(System.String,System.Object,System.IFormatProvider)">
            <summary>
            Converts the value of the <see cref="T:System.TimeSpan"/> object to its equivalent string representation using the specified format.
            </summary>
            <param name="format">A TimeSpan format string.</param>
            <param name="arg">An object to format.</param>
            <param name="formatProvider">An <see cref="T:System.IFormatProvider"/> object that supplies format information about the current instance.</param>
            <returns>A string representation of value of the current <see cref="T:System.TimeSpan"/> object as specified by format.</returns>
            <remarks>The following table lists the standard TimeSpan format patterns associated with TimeSpan2FormatInfo properties.
            <list type="table">
            <listheader><term>Format pattern</term><description>Associated Property/Description</description></listheader>
            <item><term>d</term><description>Localized string for TotalDays</description></item>
            <item><term>f</term><description>Full localized string displaying each time element with separator between</description></item>
            <item><term>h</term><description>Localized string for TotalHours</description></item>
            <item><term>j</term><description>JIRA style output</description></item>
            <item><term>m</term><description>Localized string for TotalMinutes</description></item>
            <item><term>n</term><description>Standard TimeSpan format (00:00:00:00)</description></item>
            <item><term>s</term><description>Localized string for TotalSeconds</description></item>
            <item><term>t</term><description>Localized string for TotalMilliseconds</description></item>
            <item><term>x</term><description>ISO 8601 XML standard for durations</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:System.Globalization.TimeSpan2FormatInfo.GetAllTimeSpanPatterns(System.Globalization.TimeSpanPatternType)">
            <summary>
            Returns all the standard patterns in which <see cref="T:System.TimeSpan"/> values can be formatted.
            </summary>
            <param name="patternType">Type of the pattern.</param>
            <returns>
            An array containing the standard patterns in which <see cref="T:System.TimeSpan"/> values can be formatted.
            </returns>
        </member>
        <member name="M:System.Globalization.TimeSpan2FormatInfo.GetAllTimeSpanPatterns(System.Globalization.TimeSpanPatternType,System.Char)">
            <summary>
            Returns all the standard patterns in which <see cref="T:System.TimeSpan"/> values can be formatted using the specified format pattern.
            </summary>
            <param name="patternType">Type of the pattern.</param>
            <param name="format">A standard format pattern.</param>
            <returns>
            An array containing the standard patterns in which <see cref="T:System.TimeSpan"/> values can be formatted using the specified format pattern.
            </returns>
        </member>
        <member name="M:System.Globalization.TimeSpan2FormatInfo.GetFormat(System.Type)">
            <summary>
            Returns an object of the specified type that provides a <see cref="T:System.TimeSpan"/> formatting service.
            </summary>
            <param name="formatType">The <see cref="T:System.Type"/> of the required formatting service.</param>
            <returns>
            The current <see cref="T:System.Globalization.TimeSpan2FormatInfo"/>, if <paramref name="formatType"/> is the same as the type of the current <see cref="T:System.Globalization.TimeSpan2FormatInfo"/>; otherwise, <c>null</c>.
            </returns>
        </member>
        <member name="M:System.Globalization.TimeSpan2FormatInfo.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the specified string representation of a time span to its <see cref="T:System.TimeSpan"/> equivalent.
            </summary>
            <param name="s">A string containing a time span to parse.</param>
            <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s"/>.</param>
            <returns>A <see cref="T:System.TimeSpan"/> equivalent to the time span contained in <paramref name="s"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="s"/> is <c>null</c>.</exception>
            <exception cref="T:System.FormatException"><paramref name="s"/> does not contain a valid string representation of a time span.</exception>
        </member>
        <member name="M:System.Globalization.TimeSpan2FormatInfo.ParseExact(System.String,System.String[],System.IFormatProvider)">
            <summary>
            Converts the specified string representation of a time span to its <see cref="T:System.TimeSpan"/> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.
            </summary>
            <param name="s">A string containing a time span to parse.</param>
            <param name="formats">An array of standard or custom format strings that define the required format of <paramref name="s"/>.</param>
            <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s"/>.</param>
            <returns>A <see cref="T:System.TimeSpan"/> equivalent to the time span contained in <paramref name="s"/> as specified by <paramref name="formats"/> and <paramref name="provider"/>.</returns>
        </member>
        <member name="M:System.Globalization.TimeSpan2FormatInfo.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)">
            <summary>
            Converts the specified string representation of a date and time to its <see cref="T:System.TimeSpan"/> equivalent and returns a value that indicates whether the conversion succeeded.
            </summary>
            <param name="s">A string containing a time span to convert.</param>
            <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s"/>.</param>
            <param name="result">When this method returns, contains the <see cref="T:System.TimeSpan"/> value equivalent to the time span contained in <paramref name="s"/>, if the conversion succeeded, or <c>TimeSpan.Zero</c> if the conversion failed. The conversion fails if the <paramref name="s"/> parameter is <c>null</c>, is an empty string (""), or does not contain a valid string representation of a time span. This parameter is passed uninitialized.</param>
            <returns>
            	<c>true</c> if the <paramref name="s"/> parameter was converted successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:System.Globalization.TimeSpan2FormatInfo.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)">
            <summary>
            Converts the specified string representation of a date and time to its <see cref="T:System.TimeSpan"/> equivalent and returns a value that indicates whether the conversion succeeded.
            </summary>
            <param name="s">A string containing a time span to convert.</param>
            <param name="formats">An array of allowable formats of <paramref name="s"/>.</param>
            <param name="provider">An object that supplies culture-specific formatting information about <paramref name="s"/>.</param>
            <param name="result">When this method returns, contains the <see cref="T:System.TimeSpan"/> value equivalent to the time span contained in <paramref name="s"/>, if the conversion succeeded, or <c>TimeSpan.Zero</c> if the conversion failed. The conversion fails if <paramref name="s"/> or <paramref name="formats"/> is <c>null</c>, <paramref name="s"/> or an element of <paramref name="formats"/> is an empty string, or the format of <paramref name="s"/> is not exactly as specified by at least one of the format patterns in <paramref name="formats"/>. This parameter is passed uninitialized.</param>
            <returns>
            	<c>true</c> if the <paramref name="s"/> parameter was converted successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:FlagsEnumTypeConverter.FlagsEnumConverter">
            <summary>
            Flags enumeration type converter.
            </summary>
        </member>
        <member name="T:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor">
            <summary>
            This class represents an enumeration field in the property grid.
            </summary>
        </member>
        <member name="F:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.fContext">
            <summary>
            Stores the context which the enumeration field descriptor was created in.
            </summary>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.#ctor(System.Type,System.String,System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Creates an instance of the enumeration field descriptor class.
            </summary>
            <param name="componentType">The type of the enumeration.</param>
            <param name="name">The name of the enumeration field.</param>
            <param name="context">The current context.</param>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.GetValue(System.Object)">
            <summary>
            Retrieves the value of the enumeration field.
            </summary>
            <param name="component">
            The instance of the enumeration type which to retrieve the field value for.
            </param>
            <returns>
            True if the enumeration field is included to the enumeration; 
            otherwise, False.
            </returns>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of the enumeration field.
            </summary>
            <param name="component">
            The instance of the enumeration type which to set the field value to.
            </param>
            <param name="value">
            True if the enumeration field should included to the enumeration; 
            otherwise, False.
            </param>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            Retrieves a value indicating whether the enumeration 
            field is set to a non-default value.
            </summary>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.ResetValue(System.Object)">
            <summary>
            Resets the enumeration field to its default value.
            </summary>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.CanResetValue(System.Object)">
            <summary>
            Retrieves a value indicating whether the enumeration 
            field can be reset to the default value.
            </summary>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.EnumFieldDescriptor.GetDefaultValue">
            <summary>
            Retrieves the enumerations field�s default value.
            </summary>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.#ctor(System.Type)">
            <summary>
            Creates an instance of the FlagsEnumConverter class.
            </summary>
            <param name="type">The type of the enumeration.</param>
        </member>
        <member name="M:FlagsEnumTypeConverter.FlagsEnumConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Retrieves the property descriptors for the enumeration fields. 
            These property descriptors will be used by the property grid 
            to show separate enumeration fields.
            </summary>
            <param name="context">The current context.</param>
            <param name="value">A value of an enumeration type.</param>
        </member>
        <member name="T:ExtendedToolkit.CalendarLibrary.DayCell">
            <summary>
            This cell is used in SevenDay mode and Month mode
            </summary>
        </member>
        <member name="T:ExtendedToolkit.CalendarLibrary.DayColumn">
            <summary>
            This class is used for OneDay and FiveDay modes
            </summary>
        </member>
        <member name="T:ExtendedToolkit.CalendarLibrary.HalfHourCell">
            <summary>
            This class is used with DayColumn
            </summary>
        </member>
        <member name="T:ExtendedToolkit.CalendarLibrary.HalfWeekColumn">
            <summary>
            This column is used in SevenDay mode
            </summary>
        </member>
        <member name="T:ExtendedToolkit.CalendarLibrary.WeekDayColumn">
            <summary>
            This column is used for Month mode
            </summary>
        </member>
        <member name="T:ExtendedToolkit.CalendarLibrary.WeekRow">
            <summary>
            This class is used for Month mode
            </summary>
        </member>
        <member name="T:ToolkitResources.Strings.TimeSpanResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanDayStrings">
            <summary>
              Looks up a localized string similar to day,day,d.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanHourStrings">
            <summary>
              Looks up a localized string similar to hours,hour,hrs,hr,h.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanJiraFormat">
            <summary>
              Looks up a localized string similar to [%w&apos;w&apos;]_[%r&apos;d&apos;]_[%h&apos;h&apos;]_[%m&apos;m&apos;]_[%s&apos;s&apos;].
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanJiraPattern">
            <summary>
              Looks up a localized string similar to [%w\w][_][%d\d][_][%h\h][_][%m\m][_][%s\s].
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanManyDayFormat">
            <summary>
              Looks up a localized string similar to days.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanManyHourFormat">
            <summary>
              Looks up a localized string similar to hours.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanManyMillisecondFormat">
            <summary>
              Looks up a localized string similar to milliseconds.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanManyMinuteFormat">
            <summary>
              Looks up a localized string similar to minutes.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanManySecondFormat">
            <summary>
              Looks up a localized string similar to seconds.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanManyTickFormat">
            <summary>
              Looks up a localized string similar to ticks.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanMillisecondStrings">
            <summary>
              Looks up a localized string similar to milliseconds,millisecond,ms.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanMinuteStrings">
            <summary>
              Looks up a localized string similar to minutes,minute,mins,min,m.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanOneDayFormat">
            <summary>
              Looks up a localized string similar to day.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanOneHourFormat">
            <summary>
              Looks up a localized string similar to hour.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanOneMillisecondFormat">
            <summary>
              Looks up a localized string similar to millisecond.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanOneMinuteFormat">
            <summary>
              Looks up a localized string similar to minute.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanOneSecondFormat">
            <summary>
              Looks up a localized string similar to second.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanOneTickFormat">
            <summary>
              Looks up a localized string similar to tick.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanSecondStrings">
            <summary>
              Looks up a localized string similar to seconds,second,secs,sec,s.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanSeparator">
            <summary>
              Looks up a localized string similar to ,.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanTickStrings">
            <summary>
              Looks up a localized string similar to tick,tick,t.
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanWordFormat">
            <summary>
              Looks up a localized string similar to [%d_@d],[%h_@h],[%m_@m],[%s_@s],[%k_@k].
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanWordPattern">
            <summary>
              Looks up a localized string similar to [%d_@d][_][\,][_][%h_@h][_][\,][_][%m_@m][_][\,][_][%s_@s][_][\,][_][%k_@k][_][\,][_][%t_@t].
            </summary>
        </member>
        <member name="P:ToolkitResources.Strings.TimeSpanResources.TimeSpanWordPatternIgnoreCase">
            <summary>
              Looks up a localized string similar to true.
            </summary>
        </member>
    </members>
</doc>
